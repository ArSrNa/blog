<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>COS+CVM+CDN 实现低成本高效率往返传输数据</title>
    <link href="/posts/2066053/"/>
    <url>/posts/2066053/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>比如有这样的情况，客户是专门做影视的，渲染服务器在国内，拍摄组分布在欧洲各地，每天产生的数据高达500G，需要传到云服务器进行转码渲染，处理后数据差不多300G，然后再传回本地做备份</p><p><img src="https://res.arsrna.cn/blog-images/2066053/37654e329e3bc12ef1246daf2e4d9b67.png" alt="image.png"></p><p>亦或者是客户对CVM成本敏感，带宽方面紧张，没有开通公网带宽，如何从内网低成本传出与公网隔离的CVM实例的文件？</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>公网传统的办法就是利用ftp，或者远程桌面直接传输</p><p>这样的缺点非常明显，不支持断点续传，也不支持文件校验，同时效率非常低，遇到丢包延迟的时候甚至无法顺畅传输</p><p>一些公司可能会使用网盘的方式进行传输，但是同样存在缺点，数据不可控，有可能因为协议变更或资源敏感导致客户的数据无故删除，造成极大风险。或是速度无法达标造成效率低下。</p><p>若服务器没有公网地址，以上方法均无法正常进行</p><p>若服务器存在公网，考虑到公网带宽的成本，按量付费的100Mbps就得25块每小时，<a href="https://buy.cloud.tencent.com/price/idc">公网网络定价 _ 公网网络价格 _ 公网网络计费模式 - 腾讯云 (tencent.com)</a>，按照100Mbps带宽全部跑满的情况下，300G数据大约要6小时，差不多一天需要150元</p><p>如果是按流量计费的带宽，以成都区为例，每G 0.8元的费用，若每天300G则每天为240元，费用较高</p><p>考虑到海外拍摄组传输的问题，直连到国内的服务器的效率不会很高，面临丢包，断连的问题。</p><p>​</p><p>对于后者无公网IP的，内网似乎没有任何办法直接传输回本地，只能借助其他工具，比如内网传到一台有公网的机器上，但是如此一来又回到了第一个客户的问题</p><p>如上所有问题，对于一家注重成本或者刚起步的客户，该如何解决？</p><h1 id="优化思路"><a href="#优化思路" class="headerlink" title="优化思路"></a>优化思路</h1><h2 id="重复流量"><a href="#重复流量" class="headerlink" title="重复流量"></a>重复流量</h2><p>对于以上场景，从服务器传出来的数据，从本地传入服务器的数据，或多或少都会产生流量费用，中途遇到断连等不可抗力因素的时候，重新传输又会进一步造成费用，所以要考虑的不仅仅是数据传输流程，还要考虑稳定性</p><p>如果需要来回传输很多次的，建议所有资源保持一个地域与一个内网，传输的时候不走公网，提高效率减少成本</p><h2 id="稳定性"><a href="#稳定性" class="headerlink" title="稳定性"></a>稳定性</h2><p>如上文所述，遇到不可抗力因素的时候，不支持断点续传分片传输的话，就只能从0开始，既浪费时间又浪费流量</p><p>如果文件量大的，建议使用对象存储COS，支持到50T的分片上传，并且最好走内网，提高效率。</p><h2 id="生态"><a href="#生态" class="headerlink" title="生态"></a>生态</h2><p>COS，CDN，CVM统一使用腾讯云的产品，在同一个账户下1控制台可以直接管理，免去了切换平台切换账号之间的麻烦。</p><p>COS与CDN,CVM在腾讯云内同地域统一走内网。</p><h1 id="场景优化"><a href="#场景优化" class="headerlink" title="场景优化"></a>场景优化</h1><h2 id="对象存储COS侧"><a href="#对象存储COS侧" class="headerlink" title="对象存储COS侧"></a>对象存储COS侧</h2><p>同地域下，对象存储与CVM默认走内网通道，即使没有开通公网，也能直接对数据进行操作，省去了公网带宽的费用。同时内网流量是完全免费的：<a href="https://cloud.tencent.com/document/product/436/56556">https://cloud.tencent.com/document/product/436/56556</a></p><p><img src="https://res.arsrna.cn/blog-images/2066053/33be78790f3f1f7646619256112584f9.png" alt="image.png"></p><p>如此一来，从服务器传入传出到对象存储的数据，只收流量之外的费用，而这部分费用可以忽略不计（小于0.001元）</p><p>由于是内网通道，相对公网来说更加稳定，速率更高，腾讯云CVM最低内网带宽为2.5Gbps，还有更高内网带宽的机型。</p><p>而且对象存储产品支持分片上传，断点续传</p><p>本文只讨论流量费用，由于对象存储是作为临时传输用的，1天内会删除，存储费用不考虑在内</p><h2 id="内容分发网络CDN侧"><a href="#内容分发网络CDN侧" class="headerlink" title="内容分发网络CDN侧"></a>内容分发网络CDN侧</h2><p>由于服务器与对象存储在国内，直接从海外上传与下载的体验不是那么好，有可能会遇到高延迟和丢包的情况，这时候可以借助CDN进行加速，</p><p> <strong>COS 中的 CDN 适用于以下场景：</strong></p><ul><li>对响应延时和下载速度有较高要求的场景。</li><li>需跨地区、国家、大洲传输数 GB 至数 TB 数据的场景。</li><li>需高密集地反复下载相同内容的场景。</li></ul><p>同样CDN到COS之间的流量走的也是内网，流量费用按照未通过CDN直接访问源站产生的公网流量费用+CDN访问的费用 进行收费</p><p><img src="https://res.arsrna.cn/blog-images/2066053/7b14c0bbc3d1c879bc8ec0dc105b86db.png" alt="CDN+COS加速计费示例"></p><p><a href="https://cloud.tencent.com/document/product/228/37849">https://cloud.tencent.com/document/product/228/37849</a></p><p>按流量计费的价格如下：</p><p><img src="https://res.arsrna.cn/blog-images/2066053/d6a3f679e801d987893dc9644b4b1cb7.png" alt="COS流量定价"></p><p><img src="https://res.arsrna.cn/blog-images/2066053/2e73d4e3ee8d979a4b6915b1df66b4a9.png" alt="CDN流量定价"></p><p><img src="https://res.arsrna.cn/blog-images/2066053/a773d7639a6e6db42bec63123f81d36f.png" alt="CDN带宽计价"></p><p>相较于COS在欧洲地区的0.5-0.9元&#x2F;GB，CDN只需要0.31元&#x2F;GB，每GB省下了最多0.5元，成本直接减半</p><p>上例中300G数据通过COS直接下载的价格为150元，而通过CDN只需要93元</p><h1 id="对比方案"><a href="#对比方案" class="headerlink" title="对比方案"></a>对比方案</h1><p>以下数据均为按量付费（按日或小时计费），CVM带宽100Mbps</p><p>1GB&#x3D;1024MB，1T&#x3D;1024GB，1MB&#x2F;s&#x3D;8Mbps</p><p>其中，CVM所在地域为中国大陆，COS与CVM同地域，CDN在欧洲</p><p>CVM按带宽计算计费价格公式：数据量*1024&#x2F;(带宽&#x2F;8)&#x2F;3600*带宽费，单位为（GB,Mbps）</p><table><thead><tr><th align="left">数据量 GB</th><th align="left">CVM流量费用</th><th align="left">CVM带宽费用</th><th align="left">COS流量费用</th><th align="left">CDN流量费用</th></tr></thead><tbody><tr><td align="left">20</td><td align="left">16</td><td align="left">11.37777778</td><td align="left">10</td><td align="left">6.2</td></tr><tr><td align="left">100</td><td align="left">80</td><td align="left">56.88888889</td><td align="left">50</td><td align="left">31</td></tr><tr><td align="left">500</td><td align="left">400</td><td align="left">284.4444444</td><td align="left">250</td><td align="left">155</td></tr><tr><td align="left">1024</td><td align="left">819.2</td><td align="left">582.5422222</td><td align="left">512</td><td align="left">317.44</td></tr><tr><td align="left">5120</td><td align="left">4096</td><td align="left">2912.711111</td><td align="left">2560</td><td align="left">1331.2</td></tr><tr><td align="left">10240</td><td align="left">8192</td><td align="left">5825.422222</td><td align="left">5120</td><td align="left">2252.8</td></tr></tbody></table><p>通过上述数据综合计算下来，CDN的费用是最低最划算的，单价在以上产品中均为最低单价</p><p>若使用资源包，COS与CDN流量费用还能进一步折扣</p><h1 id="实施方案"><a href="#实施方案" class="headerlink" title="实施方案"></a>实施方案</h1><p>整个方案的结构如下：</p><p><img src="https://res.arsrna.cn/blog-images/2066053/8169b0af387691f2e47d33479c4e7592.png" alt="image.png"></p><h2 id="开通相关服务"><a href="#开通相关服务" class="headerlink" title="开通相关服务"></a>开通相关服务</h2><p>进入对象存储COS，云服务器CVM，内容分发网络CDN 控制台，首次打开会要求开通授权，根据指引操作即可</p><h2 id="创建存储桶"><a href="#创建存储桶" class="headerlink" title="创建存储桶"></a>创建存储桶</h2><p>可参考：<a href="https://cloud.tencent.com/document/product/436/13309">https://cloud.tencent.com/document/product/436/13309</a></p><p><strong>注意，创建存储桶时，地域要与CVM所在地域一致，否则将会通过公网收取费用</strong></p><p>存储桶权限建议设置为私有读写</p><h2 id="创建CDN服务"><a href="#创建CDN服务" class="headerlink" title="创建CDN服务"></a>创建CDN服务</h2><p>可参考：<a href="https://cloud.tencent.com/document/product/228/3149">https://cloud.tencent.com/document/product/228/3149</a></p><p>注意，CDN源站选择COS源，建议选择https回源，开启私有存储桶访问保证安全。加速类型选择大文件下载或根据业务场景选择</p><p>其余配置根据文档指引与业务需要进行配置</p><h2 id="CVM内建议配置"><a href="#CVM内建议配置" class="headerlink" title="CVM内建议配置"></a>CVM内建议配置</h2><p>如无公网需要，建议不开通公网，从内网仍然可以访问到对象存储</p><p>若系统为Windows，建议使用浏览器或COSCMD工具访问对象</p><p>通过浏览器直接访问对象地址即可在CVM进行下载，COSCMD工具指引：<a href="https://cloud.tencent.com/document/product/436/10976">https://cloud.tencent.com/document/product/436/10976</a></p><p>Linux系统建议直接使用COSFS挂载到本地进行操作：<a href="https://cloud.tencent.com/document/product/436/6883">https://cloud.tencent.com/document/product/436/6883</a></p><h2 id="对象存储的本地数据上传"><a href="#对象存储的本地数据上传" class="headerlink" title="对象存储的本地数据上传"></a>对象存储的本地数据上传</h2><p>参考：<a href="https://cloud.tencent.com/document/product/436/13321">控制台操作</a></p><p>此外还可以使用CosBrowser工具完成：<a href="https://cloud.tencent.com/document/product/436/38103#upload">CosBrowser操作</a></p><p>对象存储上传会分片上传，极大提升了稳定性，减少了资源内存的占用，而且相较于FTP，对象存储支持断点续传，即使遇到断网的情况，恢复网络后依然能继续上传</p><h2 id="CVM上传数据至对象存储"><a href="#CVM上传数据至对象存储" class="headerlink" title="CVM上传数据至对象存储"></a>CVM上传数据至对象存储</h2><p>参考 <a href="https://cloud.tencent.com/document/product/436/10976#.E4.B8.8B.E8.BD.BD.E6.96.87.E4.BB.B6.E6.88.96.E6.96.87.E4.BB.B6.E5.A4.B9">COSCMD操作</a></p><p><a href="https://cloud.tencent.com/document/product/436/13321">控制台操作</a> <a href="https://cloud.tencent.com/document/product/436/13321">https://cloud.tencent.com/document/product/436/13321</a></p><p>若使用windows服务器，可以安装图形化管理软件COSBrowser</p><p><a href="https://cloud.tencent.com/document/product/436/11366">对象存储 COSBrowser 简介-工具指南-文档中心-腾讯云 (tencent.com)</a></p><p><img src="https://res.arsrna.cn/blog-images/2066053/15a0166af38f5f65b876b091e336b428.png"></p><p>​</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>由于业务环境复杂，这种方式仅能节省成本，但是而外增加了操作的时长</p><p>但是一般的FTP，RDP等P2P的文件传输，可能会因为断网等不可控因素导致数据中途丢失只能从头传输，增加了风险。使用上述这样的方法更安全可靠。</p><p>而且通过COS连接CVM，全部走内网通道，速率，稳定，安全性可以达到最高，同时流量费为0，请求费可以忽略不计</p><p>除了传输数据，对象存储还提供了高安全性可靠的数据保障，如果本地文件损坏时，对象存储也能提供一份备份以防万一，如开头所说，客户在本地的备份同样也可以使用对象存储进行备份操作。</p><p>通过CDN，能让在COS里的数据更快速稳定地传输到本地，同时也能节省直接从COS下载的流量费用，一举两得的好方法，随着流量的增多，节省的费用将会越来越多，如下为理论上能够节省的费用</p><p>数据量 GBCVM流量费用CDN流量费用CDN节省率</p><p><img src="https://res.arsrna.cn/blog-images/2066053/10cb71814a89a321d2b47984e940508b.png" alt="image.png"></p><p>可以看到，CDN+COS对比直接从CVM出网，能节省50%以上的费用</p><p>​</p><hr><p>​</p><p>教程到此结束，更多可能，我们共同探索</p><p>Powered by Ar-Sr-Na</p>]]></content>
    
    
    
    <tags>
      
      <tag>CDN,COS,CVM,传输,成本优化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【DNS 解析】使用DNSPOD实现动态公网解析（DDNS）</title>
    <link href="/posts/2008264/"/>
    <url>/posts/2008264/</url>
    
    <content type="html"><![CDATA[<p>注：本文用到的所有代码已开源：<a href="https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/">https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/</a></p><p>安装请参考上页面的README.md</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>背景</p><p>家里或者公司分配了一个公网IP，但它每过1周就变了，如果我要用它远程桌面，意味着一周就要改一次IP，记一个新的IP，非常复杂，该如何用一个固定的地址来替代这些变化的IP并且实现定时自动替换呢？</p><p>亦或者我有一台腾讯云按量付费的CVM，如果我选择关机不计费时，再次开机IP就变了。虽然可以通过购买EIP来固定这个地址，但是成本稍微高了。替代的办法就是动态解析，用一个别名代替变换的IP</p><p>而如上，别名就是域名，用一个固定的域名，解析到这些IP，即可实现DDNS</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>基本流程就是获取公网IP，然后修改某个域名的解析为获得的IP</p><p>流程图如下</p><p><img src="https://res.arsrna.cn/blog-images/2008264/3f682615db76276d3cbf857cf437cae2.png"></p><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>需要下载Nodejs：<a href="http://nodejs.cn/">Node.js 中文网 (nodejs.cn)</a></p><p>在命令行运行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">node-v<br></code></pre></td></tr></table></figure><p>以及</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm -v<br></code></pre></td></tr></table></figure><p>如果都能正常输出即可</p><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>新建一个文件夹，名字任意</p><p>然后新建一个js，名称任意，但最好纯英文，例如 index.js</p><h2 id="获取公网IP"><a href="#获取公网IP" class="headerlink" title="获取公网IP"></a>获取公网IP</h2><p>在这里，我们使用npm模块：nodejs-publicip</p><p>首先在项目目录执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm i --save nodejs-publicip<br></code></pre></td></tr></table></figure><p>在index.js中加入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">PublicIp</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;nodejs-publicip&#x27;</span>);<br></code></pre></td></tr></table></figure><p>根据这个npm包的说明，知道获取公网的方法为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">new</span> <span class="hljs-title class_">PublicIp</span>()<br>    .<span class="hljs-title function_">queryPublicIPAddresses</span>()<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(result));<br>        <span class="hljs-comment">//成功回调事件</span><br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    &#125;);<br></code></pre></td></tr></table></figure><p>如果获取成功了，将会输出：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<span class="hljs-string">&quot;ipv4&quot;</span>:<span class="hljs-string">&quot;124.000.000.000&quot;</span>,<span class="hljs-string">&quot;ipv6&quot;</span>:<span class="hljs-string">&quot;0000:0000:0000:0000:0000&quot;</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="DNSPodSDK"><a href="#DNSPodSDK" class="headerlink" title="DNSPodSDK"></a>DNSPodSDK</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>根据官网API文档，可以知道，设置解析必须要这几个参数</p><table><thead><tr><th align="left">参数名称</th><th align="left">必选</th><th align="left">类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Domain</td><td align="left">是</td><td align="left">String</td><td align="left">域名，这里举例：arirs.cn</td></tr><tr><td align="left">RecordType</td><td align="left">是</td><td align="left">String</td><td align="left">记录类型，A为IPv4，AAAA为IPv6</td></tr><tr><td align="left">RecordLine</td><td align="left">是</td><td align="left">String</td><td align="left">记录线路，使用“默认”</td></tr><tr><td align="left">Value</td><td align="left">是</td><td align="left">String</td><td align="left">记录值，这里是公网IP值，为上面的函数返回值 getIP().ipv4</td></tr><tr><td align="left">RecordId</td><td align="left">是</td><td align="left">Integer</td><td align="left">记录 ID，需要通过DescribeRecordList获取</td></tr><tr><td align="left">SubDomain</td><td align="left">否</td><td align="left">String</td><td align="left">主机记录，子域名，比如ddns1，就是ddns1.arirs.cn</td></tr><tr><td align="left">TTL</td><td align="left">否</td><td align="left">Integer</td><td align="left">TTL，免费版默认600s</td></tr></tbody></table><p>在上表中，可以直接得到的信息除了RecordId，其它都可以直接从控制台得到</p><p>RecordId需要另一个API获得：DescribeRecordList</p><p>这个API只需要传入：Domain，Subdomain 即可获得</p><p>那么，我们的流程将会是如此</p><p><img src="https://res.arsrna.cn/blog-images/2008264/77372918da18e5a76c5593103b068b33.png"></p><h3 id="获取RecordId"><a href="#获取RecordId" class="headerlink" title="获取RecordId"></a>获取RecordId</h3><p>首先需要在域名解析控制台处新建一个域名解析记录，可参考</p><p><a href="https://cloud.tencent.com/document/product/302/3446">DNS 解析 DNSPod 快速添加域名解析-快速入门-文档中心-腾讯云-腾讯云 (tencent.com)</a></p><p>添加的记录先用一个 0.0.0.0占用，比如</p><p><img src="https://res.arsrna.cn/blog-images/2008264/a635f4426b914cef8045cb8dac6d1804.png"></p><p>在API Explorer DNSPod修改解析方法下 <a href="https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=DescribeRecordList&SignVersion=">API Explorer - 云 API - 控制台 (tencent.com)</a></p><p>填写以下参数</p><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Domain</td><td align="left">域名，比如 arirs.cn</td></tr><tr><td align="left">Subdomain</td><td align="left">子域名解析记录，上图表示的是  ddns1</td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr></tbody></table><p><img src="https://res.arsrna.cn/blog-images/2008264/bb173353313f78ae0795ea695870a14c.png"></p><p>完成后在 在线调用 处点击 发送请求</p><p>即可获得RecordId</p><p><img src="https://res.arsrna.cn/blog-images/2008264/1220b4f789b6325d6a117f9c6360f030.png"></p><h3 id="使用SDK修改解析"><a href="#使用SDK修改解析" class="headerlink" title="使用SDK修改解析"></a>使用SDK修改解析</h3><p>在项目目录里面打开终端，键入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm i --save tencentcloud-sdk-nodejs-dnspod<br></code></pre></td></tr></table></figure><p>安装腾讯云的Nodejs SDK</p><p>在API Explorer的 修改记录（DNSPOD） <a href="https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=ModifyRecord&SignVersion=">点此进入 </a>里面，按照上文的参数，输入进去</p><p><img src="https://res.arsrna.cn/blog-images/2008264/0869e35e4b71cff84649b8d05c36005c.png"></p><p>切换到代码生成这一栏，选择Nodejs</p><p><img src="https://res.arsrna.cn/blog-images/2008264/dbdc98e0e046f5c0afd55f51047b6acf.png"></p><p>把代码复制下来，除了第一行原来的引用要换为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> tencentcloud =<span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;tencentcloud-sdk-nodejs-dnspod&quot;</span>);<br></code></pre></td></tr></table></figure><p>那么代码就是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> clientConfig = &#123;<br>  <span class="hljs-attr">credential</span>: &#123;<br>    <span class="hljs-attr">secretId</span>: <span class="hljs-string">&quot;SecretId&quot;</span>,<br>    <span class="hljs-attr">secretKey</span>: <span class="hljs-string">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">region</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">profile</span>: &#123;<br>    <span class="hljs-attr">httpProfile</span>: &#123;<br>      <span class="hljs-attr">endpoint</span>: <span class="hljs-string">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DnspodClient</span>(clientConfig);<br><span class="hljs-keyword">const</span> params = &#123;<br>    <span class="hljs-string">&quot;Domain&quot;</span>: <span class="hljs-string">&quot;你的域名&quot;</span>,<br>    <span class="hljs-string">&quot;SubDomain&quot;</span>: <span class="hljs-string">&quot;你的子域名&quot;</span>,<br>    <span class="hljs-string">&quot;RecordType&quot;</span>: <span class="hljs-string">&quot;A&quot;</span>,<br>    <span class="hljs-string">&quot;RecordLine&quot;</span>: <span class="hljs-string">&quot;默认&quot;</span>,<br>    <span class="hljs-string">&quot;Value&quot;</span>: ip,<br>    <span class="hljs-string">&quot;TTL&quot;</span>: <span class="hljs-number">600</span>,<br>    <span class="hljs-string">&quot;RecordId&quot;</span>: 你所获取到的<span class="hljs-variable constant_">ID</span><br>&#125;;<br>client.<span class="hljs-title class_">ModifyRecord</span>(params).<span class="hljs-title function_">then</span>(<br>  <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br></code></pre></td></tr></table></figure><p>根据文档，把代码修改成自己的参数</p><p>然后封包为方法，方便调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeIP</span>(<span class="hljs-params">ip</span>)&#123;<br><span class="hljs-keyword">const</span> clientConfig = &#123;<br>  <span class="hljs-attr">credential</span>: &#123;<br>    <span class="hljs-attr">secretId</span>: <span class="hljs-string">&quot;SecretId&quot;</span>,<br>    <span class="hljs-attr">secretKey</span>: <span class="hljs-string">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">region</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">profile</span>: &#123;<br>    <span class="hljs-attr">httpProfile</span>: &#123;<br>      <span class="hljs-attr">endpoint</span>: <span class="hljs-string">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DnspodClient</span>(clientConfig);<br><span class="hljs-keyword">const</span> params = &#123;<br>    <span class="hljs-string">&quot;Domain&quot;</span>: <span class="hljs-string">&quot;你的域名&quot;</span>,<br>    <span class="hljs-string">&quot;SubDomain&quot;</span>: <span class="hljs-string">&quot;你的子域名&quot;</span>,<br>    <span class="hljs-string">&quot;RecordType&quot;</span>: <span class="hljs-string">&quot;A&quot;</span>,<br>    <span class="hljs-string">&quot;RecordLine&quot;</span>: <span class="hljs-string">&quot;默认&quot;</span>,<br>    <span class="hljs-string">&quot;Value&quot;</span>: ip,<br>    <span class="hljs-string">&quot;TTL&quot;</span>: <span class="hljs-number">600</span>,<br>    <span class="hljs-string">&quot;RecordId&quot;</span>: 你所获取到的<span class="hljs-variable constant_">ID</span><br>&#125;;<br>client.<span class="hljs-title class_">ModifyRecord</span>(params).<span class="hljs-title function_">then</span>(<br>  <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在上面获取IP那部分将回调设置为调用这个函数即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">new</span> <span class="hljs-title class_">PublicIp</span>()<br>    .<span class="hljs-title function_">queryPublicIPAddresses</span>()<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">changeIP</span>(result.<span class="hljs-property">ipv4</span>)<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    &#125;);<br></code></pre></td></tr></table></figure><p>到这里，就算完成这一流程了</p><p>可以运行一下看下结果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">node index.<span class="hljs-property">js</span><br></code></pre></td></tr></table></figure><p>出现类似这样的就是成功了</p><p><img src="https://res.arsrna.cn/blog-images/2008264/a228930e434600d568dec636139a7323.png"></p><h3 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">PublicIp</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;nodejs-publicip&#x27;</span>);<br><span class="hljs-comment">// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher</span><br><span class="hljs-keyword">const</span> tencentcloud = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;tencentcloud-sdk-nodejs-dnspod&quot;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">DnspodClient</span> = tencentcloud.<span class="hljs-property">dnspod</span>.<span class="hljs-property">v20210323</span>.<span class="hljs-property">Client</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">PublicIp</span>()<br>    .<span class="hljs-title function_">queryPublicIPAddresses</span>()<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">changeIP</span>(result.<span class="hljs-property">ipv4</span>);<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    &#125;);<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeIP</span>(<span class="hljs-params">ip</span>)&#123;<br><span class="hljs-keyword">const</span> clientConfig = &#123;<br>  <span class="hljs-attr">credential</span>: &#123;<br>    <span class="hljs-attr">secretId</span>: <span class="hljs-string">&quot;替换为你的secretId&quot;</span>,<br>    <span class="hljs-attr">secretKey</span>: <span class="hljs-string">&quot;替换为你的secretKey&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">region</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">profile</span>: &#123;<br>    <span class="hljs-attr">httpProfile</span>: &#123;<br>      <span class="hljs-attr">endpoint</span>: <span class="hljs-string">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DnspodClient</span>(clientConfig);<br><span class="hljs-keyword">const</span> params = &#123;<br>    <span class="hljs-string">&quot;Domain&quot;</span>: <span class="hljs-string">&quot;你的域名&quot;</span>,<br>    <span class="hljs-string">&quot;SubDomain&quot;</span>: <span class="hljs-string">&quot;子域名&quot;</span>,<br>    <span class="hljs-string">&quot;RecordType&quot;</span>: <span class="hljs-string">&quot;A（IPV6为AAAA）&quot;</span>,<br>    <span class="hljs-string">&quot;RecordLine&quot;</span>: <span class="hljs-string">&quot;默认&quot;</span>,<br>    <span class="hljs-string">&quot;Value&quot;</span>: ip,<br>    <span class="hljs-string">&quot;TTL&quot;</span>: <span class="hljs-number">600</span>,<br>    <span class="hljs-string">&quot;RecordId&quot;</span>: 替换成你的<span class="hljs-title class_">Recordid</span><br>&#125;;<br>client.<span class="hljs-title class_">ModifyRecord</span>(params).<span class="hljs-title function_">then</span>(<br>  <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure><p>代码可以前往</p><h1 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h1><p>现在已经可以通过命令行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">node index.js<br></code></pre></td></tr></table></figure><p>来运行这个程序了</p><p>那么就把他打包为cmd</p><p><img src="https://res.arsrna.cn/blog-images/2008264/ee21497c9117c97f1f503e2a3caf6cc4.png"></p><h2 id="Windows中每周执行一次"><a href="#Windows中每周执行一次" class="headerlink" title="Windows中每周执行一次"></a>Windows中每周执行一次</h2><p>可参考文章：<a href="https://blog.51cto.com/u_13281972/2983264">windows设置定时任务执行程序命令_13271972的技术博客_51CTO博客</a></p><h2 id="Nodejs原生循环执行"><a href="#Nodejs原生循环执行" class="headerlink" title="Nodejs原生循环执行"></a>Nodejs原生循环执行</h2><p>如果你的业务场景很复杂，需要几分钟就变一次解析（而且你的套餐TTL很短）的情况下，建议直接使用setInterval定时器来进行操作</p><p>只需要在PublicIP这个方法前后包裹一个SetInterval</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<br>  <span class="hljs-keyword">new</span> <span class="hljs-title class_">PublicIp</span>()<br>    .<span class="hljs-title function_">queryPublicIPAddresses</span>()<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">changeIP</span>(result.<span class="hljs-property">ipv4</span>);<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    &#125;);<br>&#125;,<span class="hljs-number">600000</span>) <span class="hljs-comment">//这里的数字是定时器的速度，单位毫秒，也就是多少毫秒执行一次</span><br></code></pre></td></tr></table></figure><p>再次运行 node index.js 即可</p><p>到此，教程就结束了，更多可能，需要我们一起探索</p><p>Powered by Ar-Sr-Na</p>]]></content>
    
    
    
    <tags>
      
      <tag>DNS 解析,Node.js,JavaScript,我永远喜欢布洛妮娅,DDNS,动态DNS,编程,公网,DNSPod,categories:,技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【GPU服务器】图像深度学习超分辨率放大（Real-ESRGAN）</title>
    <link href="/posts/2011313/"/>
    <url>/posts/2011313/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="技术提要"><a href="#技术提要" class="headerlink" title="技术提要"></a>技术提要</h2><p>ESRGAN全称为Enhanced Super-Resolution Generative Adversarial Networks</p><p>该技术相关论文：<a href="https://arxiv.org/pdf/1809.00219.pdf">https://arxiv.org/pdf/1809.00219.pdf</a></p><p>太过复杂的技术原理不做赘述。</p><p>通过输入图像输入，邻近插值后寻找马赛克位置插值，同时对二次插值后的位置使用AI的模型进行消除噪声，消除伪影</p><p>开山之作为SRCNN</p><p><img src="https://res.arsrna.cn/blog-images/2011313/393a059558724bf8a1fdf03d39c37fd4.png"></p><p>ESRGAN则是在以上所有技术上再先进一步，改进了质量</p><p>作者地址：<a href="https://github.com/xinntao/ESRGAN">github.com</a></p><h2 id="运行环境需求"><a href="#运行环境需求" class="headerlink" title="运行环境需求"></a>运行环境需求</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><p>由于需要调用AI核心，而且针对的是图形处理，所以需要用到具有图形功能的设备</p><p>可以选购腾讯云的GPU服务器，推荐使用GT4或GN7机型，并安装好GRID驱动</p><p>驱动安装：<a href="https://cloud.tencent.com/document/product/560/30060">GPU 云服务器 安装 NVIDIA GRID 驱动-操作指南-文档中心-腾讯云-腾讯云 (tencent.com)</a></p><p>测试图片：</p><p>原图 1340*1748</p><p><img src="https://res.arsrna.cn/blog-images/2011313/85962a84491a13f6d137a05212ad1ac8.png"></p><p>以下是测试内容及预期结果</p><p>其中，主观质量为放大线条连续度，越高越好</p><table><thead><tr><th align="left">内容*放大倍数</th><th align="left">显卡型号（显卡&amp;#124; 显存）</th><th align="left">主观质量</th><th align="left">处理耗时&#x2F;s</th></tr></thead><tbody><tr><td align="left">动画图片*4</td><td align="left">NVIDIA Tesla T4 16G</td><td align="left">9</td><td align="left">19</td></tr><tr><td align="left">动画图片*4</td><td align="left">NVIDIA Tesla T4 GRID1&#x2F;2 8G</td><td align="left">9</td><td align="left">35</td></tr><tr><td align="left">动画图片*16(*4*4)</td><td align="left">NVIDIA Tesla T4 16G</td><td align="left">10</td><td align="left">300+</td></tr><tr><td align="left">动画图片*16(*4*4)</td><td align="left">NVIDIA Tesla T4 GRID1&#x2F;2 8G</td><td align="left">10</td><td align="left">150</td></tr></tbody></table><p>这里推荐腾讯云的GN7机型，提供Tesla T4显卡，并预制好GPU GRID图形驱动</p><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>需要用到图片训练模型（ESRGAN自带），训练的图片</p><p>模型下载：<a href="https://github.com/xinntao/ESRGAN/tags">Tags · xinntao&#x2F;ESRGAN · GitHub</a></p><h1 id="使用方法教程"><a href="#使用方法教程" class="headerlink" title="使用方法教程"></a>使用方法教程</h1><h2 id="命令行调用"><a href="#命令行调用" class="headerlink" title="命令行调用"></a>命令行调用</h2><p>打开命令行，cd到realesrgan的目录</p><p>在这里，输入图片在 同目录下，为 <code>input.jpg</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">.\realesrgan-ncnn-vulkan.exe -i input.jpg -o output.jpg -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">内容</th></tr></thead><tbody><tr><td align="left">-i</td><td align="left">设置输入图片路径</td></tr><tr><td align="left">-o</td><td align="left">设置图片输出路径</td></tr><tr><td align="left">-n</td><td align="left">设置模型</td></tr></tbody></table><p>如果不在同目录的，要用绝对路径，例如</p><p><code>F:\realsgan\input.png</code></p><p>带有空格的目录名，要用引号包括起来，例如</p><p><code>&quot;F:\Develop file\realsgan\input test.png&quot;</code></p><p>回车之后就可以进行处理了</p><p><img src="https://res.arsrna.cn/blog-images/2011313/6e45dcdaa660f9eb5dabaa71ec614753.png"></p><p>执行到100%的时候就会在设置输出目录下输出 output.jpg</p><p><img src="https://res.arsrna.cn/blog-images/2011313/9a5a4422f8ea9f02df304cd8c7e7758e.png"></p><p>分辨率对比</p><p><img src="https://res.arsrna.cn/blog-images/2011313/9b115b8a674d0ceedfacf6c318efe7b1.png"></p><p>正好放大了4倍</p><p>同时对比一下图片差异（左边原图，右边放大4倍）</p><p><img src="https://res.arsrna.cn/blog-images/2011313/ed6cdefb900953e8aaaf001eb58d9282.png" alt="未缩放"></p><p><img src="https://res.arsrna.cn/blog-images/2011313/c70ac1eeca0a41b48d4b7438d4b0b281.png" alt="缩放500%"></p><h2 id="腾讯云自动助手调用"><a href="#腾讯云自动助手调用" class="headerlink" title="腾讯云自动助手调用"></a>腾讯云自动助手调用</h2><p>确认服务器已经安装 TATSVC</p><h3 id="安装自动化助手"><a href="#安装自动化助手" class="headerlink" title="安装自动化助手"></a>安装自动化助手</h3><p>如果没有安装，请登录服务器，右键开始菜单，Powershell管理员打开</p><p><img src="https://res.arsrna.cn/blog-images/2011313/4792d2b5371087a9cb505f7c86a64c7d.png" alt="image.png"></p><p>键入如下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://tat-gz-1258344699.cos.ap-guangzhou.myqcloud.com/tat_agent_windows_i686.zip -OutFile .\tat_agent_windows_i686.zip;Expand-Archive -Path .\tat_agent_windows_i686.zip -DestinationPath .\tat_agent_windows_i686;.\tat_agent_windows_i686\install.bat;Remove-Item -Recurse -Force .\tat_agent_windows_i686, .\tat_agent_windows_i686.zip<br></code></pre></td></tr></table></figure><p>回车</p><p><img src="https://res.arsrna.cn/blog-images/2011313/302c75596b042ecdf7fc1b8d742ebc1a.png" alt="image.png"></p><h3 id="控制台新建命令"><a href="#控制台新建命令" class="headerlink" title="控制台新建命令"></a>控制台新建命令</h3><p>在云服务器控制台-自动化助手-我的命令（<a href="https://console.cloud.tencent.com/cvm/command">https://console.cloud.tencent.com/cvm/command</a>）</p><p>处新建一个命令</p><p><img src="https://res.arsrna.cn/blog-images/2011313/fc3346e5efb9f22f813c86df82f3b5e0.png" alt="image.png"></p><p>按图示完成配置</p><p>在命令内容里键入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">.\realesrgan-ncnn-vulkan.exe -i &#123;&#123;input&#125;&#125; -o &#123;&#123;output&#125;&#125; -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure><p>其中，<code>&#123;&#123;input&#125;&#125;</code>与 <code>&#123;&#123;output&#125;&#125;</code>都是命令参数，方便执行的时候更改不同文件</p><p>这里展示下我的配置，推荐使用这串命令，这样每次就不用设置输出路径和名称了：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">.\realesrgan-ncnn-vulkan.<span class="hljs-property">exe</span> -i &#123;&#123;inputPath&#125;&#125;.&#123;&#123;ext&#125;&#125; -o &#123;&#123;inputPath&#125;&#125;_4x.&#123;&#123;ext&#125;&#125; -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure><p>其中，<code>&#123;&#123;inputPath&#125;&#125;</code>是输入路径，<code>&#123;&#123;ext&#125;&#125;</code>是后缀名</p><p>例如 <code>G:\OneDrive - ArSrNa CC\Wallpaper\22-16061GFT0400.jpg</code>转化过去就是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$</span><span class="language-bash">inputPath=<span class="hljs-string">&quot;G:\OneDrive - ArSrNa CC\Wallpaper\22-16061GFT0400&quot;</span></span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">ext=<span class="hljs-string">&quot;jpg&quot;</span></span><br></code></pre></td></tr></table></figure><p>执行的时候只需要这么填写参数</p><table><thead><tr><th align="left">参数</th><th align="left">内容</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">inputPath</td><td align="left">“G:\OneDrive - ArSrNa CC\Wallpaper\22-16061GFT0400”</td><td align="left">输入的路径（包含到文件）</td></tr><tr><td align="left">ext</td><td align="left">“jpg”</td><td align="left">后缀名</td></tr></tbody></table><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><p>对命令单击执行</p><p><img src="https://res.arsrna.cn/blog-images/2011313/aa6c429e24361c9d7923d1866cf371d9.png" alt="image.png"></p><p>调整好参数，选中主机</p><p><img src="https://res.arsrna.cn/blog-images/2011313/3e756208fbb439a324bcc69cb59c4d39.png" alt="image.png"></p><p>最后点击执行命令就可以跟踪命令运行的状态了</p><p><img src="https://res.arsrna.cn/blog-images/2011313/db5936f5c22b9e238f929b93d82b1242.png" alt="image.png"></p><p>完成之后会有提示</p><p><img src="https://res.arsrna.cn/blog-images/2011313/cacb9f6a99c3175c13967fb62eaa442a.png" alt="image.png"></p><p>回到服务器，找到 input_out.jpg ，就是输出的结果</p><p><img src="https://res.arsrna.cn/blog-images/2011313/457e370ba72d0e0458fb092f4e3c5db8.png" alt="image.png"></p><h2 id="API调用"><a href="#API调用" class="headerlink" title="API调用"></a>API调用</h2><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>通过API操作自动化助手，对服务器进行处理，这种方法适用于Web，app等在线处理平台</p><p>首先在API Explorer里找到TAT产品触发命令（<a href="https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=InvokeCommand&SignVersion=">在这里</a>）</p><p>根据参数填写</p><p><img src="https://res.arsrna.cn/blog-images/2011313/a03f8d5daf4f2901ed445bd172697282.png" alt="image.png"></p><table><thead><tr><th align="left">参数名</th><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Region</td><td align="left">地域</td><td align="left">要与命令，CVM所在地域一致</td></tr><tr><td align="left">CommandId</td><td align="left">命令ID</td><td align="left">可在自动化助手里面找到ID</td></tr><tr><td align="left">InstanceIds.N</td><td align="left">实例ID</td><td align="left">可在CVM控制台获取</td></tr><tr><td align="left">Parameters</td><td align="left">参数</td><td align="left">Command 的自定义参数。字段类型为json encoded string。如：{&quot;varA&quot;: &quot;222&quot;}。 key为自定义参数名称，value为该参数的默认取值。kv均为字符串型。 如果未提供该参数取值，将使用 Command 的 DefaultParameters 进行替换。 自定义参数最多20个。 自定义参数名称需符合以下规范：字符数目上限64，可选范围【a-zA-Z0-9-_】。</td></tr></tbody></table><p>如上所示，之前的示例对应的参数表如下表</p><table><thead><tr><th align="left">参数名</th><th align="left">参数</th></tr></thead><tbody><tr><td align="left">Region</td><td align="left">ap-chengdu</td></tr><tr><td align="left">CommandId</td><td align="left">cmd-mg…sq</td></tr><tr><td align="left">InstanceIds.N</td><td align="left">array(“ins-0b…oy7”)</td></tr><tr><td align="left">Parameters</td><td align="left">{&quot;inputPath&quot;:&quot;input&quot;,&quot;ext&quot;:&quot;jpg&quot;}</td></tr></tbody></table><p>切换到代码生成处，选择业务对应代码进行代码改编即可，将(“SecretId”, “SecretKey”)改为自己的秘钥，可在访问管理获得</p><p>例如我的Nodejs，将函数封包后如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher</span><br><span class="hljs-keyword">const</span> tencentcloud = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;tencentcloud-sdk-nodejs&quot;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">TatClient</span> = tencentcloud.<span class="hljs-property">tat</span>.<span class="hljs-property">v20201028</span>.<span class="hljs-property">Client</span>;<br><br><span class="hljs-keyword">const</span> clientConfig = &#123;<br>  <span class="hljs-attr">credential</span>: &#123;<br>    <span class="hljs-attr">secretId</span>: <span class="hljs-string">&quot;SecretId&quot;</span>,<br>    <span class="hljs-attr">secretKey</span>: <span class="hljs-string">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">region</span>: <span class="hljs-string">&quot;ap-chengdu&quot;</span>,<br>  <span class="hljs-attr">profile</span>: &#123;<br>    <span class="hljs-attr">httpProfile</span>: &#123;<br>      <span class="hljs-attr">endpoint</span>: <span class="hljs-string">&quot;tat.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">esrgan</span>(<span class="hljs-params">inputPath,ext</span>)&#123;<br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TatClient</span>(clientConfig);<br><span class="hljs-keyword">const</span> params = &#123;<br>    <span class="hljs-string">&quot;CommandId&quot;</span>: <span class="hljs-string">&quot;cmd-mg...esq&quot;</span>,<br>    <span class="hljs-string">&quot;InstanceIds&quot;</span>: [<br>        <span class="hljs-string">&quot;ins-0b...oy7&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;Parameters&quot;</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringfy</span>(&#123;<br>   inputPath : inputPath,<br>       ext : ext<br>      &#125;)<br>&#125;;<br>client.<span class="hljs-title class_">InvokeCommand</span>(params).<span class="hljs-title function_">then</span>(<br>  <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span>(data);<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span>(<span class="hljs-string">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure><p>调用的时候只用 <code>esrgan(&#39;文件&#39;,&#39;后缀&#39;)</code>即可</p><h3 id="查询执行过程与结果"><a href="#查询执行过程与结果" class="headerlink" title="查询执行过程与结果"></a>查询执行过程与结果</h3><p>使用 查询执行任务 (TAT) 这个API即可获得执行信息</p><p>（<a href="https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=DescribeInvocationTasks&SignVersion=">API Explorer</a>）</p><p>在这里，参数需要过滤</p><p>先查询账号下所有执行的任务，然后过滤最新的任务，把隐藏输出改为False</p><table><thead><tr><th align="left">参数</th><th align="left">设置</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Region</td><td align="left">地域</td><td align="left">与命令地域相同</td></tr><tr><td align="left">Filters.N</td><td align="left">过滤条件</td><td align="left">invocation-id - String - 是否必填：否 -（过滤条件）按照执行活动ID过滤。invocation-task-id - String - 是否必填：否 -（过滤条件）按照执行任务ID过滤。<code>&lt;br&gt;</code>instance-id - String - 是否必填：否 -（过滤条件）按照实例ID过滤。<code>&lt;br&gt;</code>command-id - String - 是否必填：否 -（过滤条件）按照命令ID过滤。<code>&lt;br&gt;</code>每次请求的 Filters 的上限为10， Filter.Values 的上限为5。参数不支持同时指定 InvocationTaskIds 和 Filters</td></tr><tr><td align="left">HideOutput</td><td align="left">是否隐藏执行内容</td><td align="left">这里为了查询，设置为False</td></tr></tbody></table><p>Filters.N如此设置</p><p><img src="https://res.arsrna.cn/blog-images/2011313/87dcde34c201927259a66e831757ca54.png"></p><p><img src="https://res.arsrna.cn/blog-images/2011313/eacd3900f81ac4f97084e90d56f6cdf1.png"></p><h3 id="调用结果"><a href="#调用结果" class="headerlink" title="调用结果"></a>调用结果</h3><p>点击在线调用</p><p><img src="https://res.arsrna.cn/blog-images/2011313/c333988167754e2e6f0d3f756c2ef327.png"></p><p>确认正常后生成代码，最后嵌入业务即可</p><p><img src="https://res.arsrna.cn/blog-images/2011313/aabacbffb34c0b3f0911a47d5f657a03.png"></p><h2 id="软件直接执行（推荐）"><a href="#软件直接执行（推荐）" class="headerlink" title="软件直接执行（推荐）"></a>软件直接执行（推荐）</h2><p>我自己开发了一个软件，并且已开源，可以直接用图形界面进行操作，简洁方便</p><p><a href="https://arsrna.coding.net/public/aresrgan/apps/git/files">https://arsrna.coding.net/public/aresrgan/apps/git/files</a></p><p>下载地址：<a href="https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb">https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb</a>，查看密码：w6ho</p><p>同时也推荐一些较好的软件：</p><ul><li><a href="https://github.com/AaronFeng753/Waifu2x-Extension-GUI">Waifu2x-Extension-GUI</a> by <a href="https://github.com/AaronFeng753">AaronFeng753</a></li><li><a href="https://github.com/Justin62628/Squirrel-RIFE">Squirrel-RIFE</a> by <a href="https://github.com/Justin62628">Justin62628</a></li><li><a href="https://github.com/scifx/Real-GUI">Real-GUI</a> by <a href="https://github.com/scifx">scifx</a></li><li><a href="https://github.com/net2cn/Real-ESRGAN_GUI">Real-ESRGAN_GUI</a> by <a href="https://github.com/net2cn">net2cn</a></li><li><a href="https://github.com/WGzeyu/Real-ESRGAN-EGUI">Real-ESRGAN-EGUI</a> by <a href="https://github.com/WGzeyu">WGzeyu</a></li><li><a href="https://github.com/shangar21/anime_upscaler">anime_upscaler</a> by <a href="https://github.com/shangar21">shangar21</a></li><li><a href="https://github.com/Baiyuetribe/paper2gui/blob/main/Video%252520Super%252520Resolution/RealESRGAN-GUI.md">RealESRGAN-GUI</a> by <a href="https://github.com/Baiyuetribe">Baiyuetribe</a></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>老图片，旧照片，经过压缩的图片，如果你想用来做壁纸，用来做背景，画质会惨不忍睹，又或者联系不上作者拿到原图，不方便拿到的原图，通过这个技术修复老照片，将会是一个取中的方式。</p><p>但是因为处理照片需要极大的算力，老电脑可能无法快速完成，借助腾讯云GPU服务器，依据分布式的优点和云端的稳定性，我们能够快速且方便的对图片进行处理，同时还保证了服务的稳定运行，不干扰本地的工作，一切都在云端</p><p>Powered by Ar-Sr-Na  更多可能，需要我们共同探索</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI,人工智能,GPU服务器,渲染,图像放大,加速,分布式,我永远喜欢布洛妮娅</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【GPU服务器】blender高性能渲染</title>
    <link href="/posts/1976489/"/>
    <url>/posts/1976489/</url>
    
    <content type="html"><![CDATA[<h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><p>本文介绍如何使用GPU服务器提交一个渲染作业，高效率完成blender的动画图片渲染，并导出渲染图片。具体操作步骤如下：</p><h2 id="步骤1：准备环境"><a href="#步骤1：准备环境" class="headerlink" title="步骤1：准备环境"></a>步骤1：准备环境</h2><h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><p>blender在Windows上运行较为稳定易用，所以建议使用腾讯云的Windows Server 2019，已经预装好驱动</p><p>前往blender官网安装blender <a href="https://www.blender.org/download/">Download — blender.org</a></p><p>如果您希望只渲染，我们开发了一个专门用来blender渲染的软件：ArSrNa Blender渲染助手：<a href="https://www.arsrna.cn/app/render">https://www.arsrna.cn/app/render</a></p><h2 id="步骤2：准备渲染文件以及参数"><a href="#步骤2：准备渲染文件以及参数" class="headerlink" title="步骤2：准备渲染文件以及参数"></a>步骤2：准备渲染文件以及参数</h2><p>1.将渲染的文件打包为 .blend 格式的文件</p><p><img src="https://res.arsrna.cn/blog-images/1976489/d6adf6fb0c699bc90d2b6c60ff0652e8.png"></p><p>2.上传到对象存储，若无对象存储资源，请前往控制台开通 <a href="https://console.cloud.tencent.com/cos">概览 - 对象存储 - 控制台 (tencent.com)</a></p><p>操作请参考 <a href="https://cloud.tencent.com/document/product/436/13321">对象存储 上传对象 - 控制台指南 - 文档中心 - 腾讯云 (tencent.com)</a></p><p>注意，创建存储桶这一步操作记得将地域改为与CVM<strong>同地区</strong>，保证在内网传输文件，不仅省下了流量费，而且节省了服务器的上传带宽，哪怕没有开通公网IP都可以进行上下载</p><h2 id="步骤3-服务器选型"><a href="#步骤3-服务器选型" class="headerlink" title="步骤3 服务器选型"></a>步骤3 服务器选型</h2><p>参考 <a href="https://cloud.tencent.com/document/product/560/63854">GPU 云服务器 渲染型实例 - 实例类型 - 文档中心 - 腾讯云 (tencent.com)</a> 选择合适的显卡类型，避免显卡初始化失败。</p><p><img src="https://res.arsrna.cn/blog-images/1976489/cacabf30596d3449d628b850d79d4689.png"></p><p>本次测试使用的是GN7vw机型，搭载NVIDIA Tesla T4 GRID驱动</p><p><img src="https://res.arsrna.cn/blog-images/1976489/8c0cc48e243bdc133af54ea813a1334c.png"></p><p><img src="https://res.arsrna.cn/blog-images/1976489/1f8ac5493b4ab341a05b3b82d74d405e.png"></p><p>如果是自己的镜像没有GRID图形驱动，将无法使用渲染OpenGL功能，请安装驱动：<a href="https://cloud.tencent.com/document/product/560/30060">GPU 云服务器 安装 NVIDIA GRID 驱动 - 操作指南 - 文档中心 - 腾讯云 (tencent.com)</a></p><h1 id="服务器内操作"><a href="#服务器内操作" class="headerlink" title="服务器内操作"></a>服务器内操作</h1><h2 id="方案一：命令行渲染（稳定）"><a href="#方案一：命令行渲染（稳定）" class="headerlink" title="方案一：命令行渲染（稳定）"></a>方案一：命令行渲染（稳定）</h2><p>直接通过对象存储链接，内网下载文件</p><p><img src="https://res.arsrna.cn/blog-images/1976489/127f2e0fc2804717ac1c72a68afa35d2.png"></p><p>.按照之前操作，安装好Blender <a href="https://www.blender.org/download/">Download — blender.org</a></p><p>建议使用zip安装，解压到指定位置</p><p><img src="https://res.arsrna.cn/blog-images/1976489/2c59c18dd2902e96df8651c7107f25d6.png"></p><p><strong>配置环境变量</strong></p><p>右击此电脑，属性，高级，环境变量</p><p><img src="https://res.arsrna.cn/blog-images/1976489/f2beefb176b9808b0a7a47f9f5e77ef0.png"></p><h3 id="重启服务器"><a href="#重启服务器" class="headerlink" title="重启服务器"></a>重启服务器</h3><p>开机后运行Windows+R键，输入CMD</p><p><img src="https://res.arsrna.cn/blog-images/1976489/d165002418b4d2ae0b78c15f1b94dc9e.png"></p><p>命令行输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">blender<br></code></pre></td></tr></table></figure><p>如果能够启动blender页面，证明已经成功</p><p><img src="https://res.arsrna.cn/blog-images/1976489/da4eb0a53e62d0b10d96e9958c0b26c0.png"></p><h3 id="渲染参数设定"><a href="#渲染参数设定" class="headerlink" title="渲染参数设定"></a>渲染参数设定</h3><p>建议直接在blender里面设定好所有的参数，命令行只是确定渲染的帧数</p><p><img src="https://res.arsrna.cn/blog-images/1976489/125eb85da484fc39de87409f86db9987.png"></p><p>建议将工程文件（blend）保存在好记的位置，这里以C:\test.blend为例</p><h3 id="简单图像命令行"><a href="#简单图像命令行" class="headerlink" title="简单图像命令行"></a><strong>简单图像命令行</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">blender -b <span class="hljs-string">&quot;C:\test.blend&quot;</span> -o frame_##### -f <span class="hljs-number">2128</span><br></code></pre></td></tr></table></figure><p>运行上述代码后，将会执行</p><p><img src="https://res.arsrna.cn/blog-images/1976489/d4d93c79df44f167403a3bdbc13910d0.png"></p><p>一段时间后，就可以在工程目录下看到输出的内容了</p><p>上述代码的作用</p><table><thead><tr><th align="left">参数</th><th align="left">内容</th></tr></thead><tbody><tr><td align="left">-b</td><td align="left">静默运行（不运行GUI界面），后跟工程目录地址，如果带有空格的，要加双引号</td></tr><tr><td align="left">-o</td><td align="left">输出目录及文件名，#代表帧号，一个#代表一位数，不足的会补0</td></tr><tr><td align="left">-f</td><td align="left">渲染的帧号，要保证这个参数在最后面</td></tr></tbody></table><h3 id="动画图像命令行"><a href="#动画图像命令行" class="headerlink" title="动画图像命令行"></a>动画图像命令行</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">blender -b <span class="hljs-string">&quot;C:\test.blend&quot;</span> -o <span class="hljs-string">&quot;/out/frame_#####&quot;</span> -s <span class="hljs-number">2128</span> -e <span class="hljs-number">3000</span><br></code></pre></td></tr></table></figure><p>将会渲染<strong>2128</strong>到<strong>3000</strong>帧，并输出到 <strong>工程目录&#x2F;out&#x2F;</strong> 目录下</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>命令行没有指定的参数，都要通过工程文件来设置，否则将按照工程文件的设置进行输入</p><p>例如上述代码，如果没有设置起始与结束帧，将会按照工程文件里的设置进行输出</p><p><img src="https://res.arsrna.cn/blog-images/1976489/3044462353304258aa12fd2b4b2ec881.png"></p><p>命令行更多参数请查阅 <a href="https://docs.blender.org/manual/zh-hans/dev/advanced/command_line/render.html">命令行渲染 — Blender Manual</a></p><h2 id="方案2：命令行渲染助手（简单操作）"><a href="#方案2：命令行渲染助手（简单操作）" class="headerlink" title="方案2：命令行渲染助手（简单操作）"></a>方案2：命令行渲染助手（简单操作）</h2><p>在<a href="https://www.arsrna.cn/app/render">https://www.arsrna.cn/app/render</a> 下载完软件之后，解压打开</p><p>按照提示运行即可</p><p><img src="https://res.arsrna.cn/blog-images/1976489/e13d1a95ec6de3fe556c856d4eead199.png"></p><h2 id="方案3：blender直接渲染（纯原生）"><a href="#方案3：blender直接渲染（纯原生）" class="headerlink" title="方案3：blender直接渲染（纯原生）"></a>方案3：blender直接渲染（纯原生）</h2><p>设置好所有参数之后，直接在工具栏-渲染-渲染图像（或者渲染动画）</p><p><img src="https://res.arsrna.cn/blog-images/1976489/5dc5a6f2a641668ed58a5866fb6bb10b.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>腾讯云GPU服务器提供了强大的处理性能，云端的高可用性，以及提供了GRID图型驱动license，与本地相比，省去了申请GRID License的时间以及费用</p><p>经过本人的测试，80G的内存渲染1整天，blender没有出现闪退的情况，即使出现紧急情况，也可以使用手机远程桌面修复问题，本地如果没有搭建好远程桌面环境，很难解决突发情况</p><p>云端可以随时切换配置，如果配置不够可以随意升级，而本地无法弹性无缝切换，业务会中断</p><p>到此，教程就结束了，更多可能需要大家一同探索</p><p>Powered by Ar-Sr-Na</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GPU,云服务器渲染,blender</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【blender X MMD】摄像机景深对焦篇——百度都不一定找得到的问题</title>
    <link href="/posts/1972305/"/>
    <url>/posts/1972305/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2022年了，blender的用户其实也不少，我就是其中之一，正因为它的Eevee渲染器和GPL开源免费的特性，让我极快离开了C4D来到了Blender，因为是个开源免费软件，所以问题自然很多，闪退，保存未响应，各种报错，各种乱码，都是很正常的，而今天我遇到的这个问题，在搜索了无数页必应，都找不到需要的答案，摄像机自动对焦不准确</p><p><img src="https://res.arsrna.cn/blog-images/1972305/c2e89079bbe920318974d4d226a01ada.png"></p><p><img src="https://res.arsrna.cn/blog-images/1972305/a198bf59efe98baba4c35702ca71ddc4.png"></p><p><img src="https://res.arsrna.cn/blog-images/1972305/362012f6352a7cb446ef1c60b9cb58c5.png"></p><p>对焦明明选择了脸，但是脸还是一片糊</p><p><img src="https://res.arsrna.cn/blog-images/1972305/c9fc17423d1beec1c2402a8a37440540.png"></p><p><img src="https://res.arsrna.cn/blog-images/1972305/e96dfd7849e95a6dc7e019789920c2db.png"></p><p>仔细一看，摄像机焦点和物体位置偏离了非常远的距离</p><p><img src="https://res.arsrna.cn/blog-images/1972305/7ace8c4124c174b4079f60870638988c.png"></p><p><em>添加描述</em></p><p>究其原因，可能是物体中心点的问题，也有可能是mmd tools插件生成的动画不会改变物体位移的原因，所以自动跟踪显然是不行的</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h2 id="计算距离（失败）"><a href="#计算距离（失败）" class="headerlink" title="计算距离（失败）"></a>计算距离（失败）</h2><p>而我偶然间发现一种思路，可以使用blender变量，测量摄像机到物体的距离，然后设置摄像机对焦距离，这样估计就成了</p><p>可这个方案，就是blender实现物体对焦的方案，所以，失败了</p><h2 id="利用空物体辅助对焦（成功）"><a href="#利用空物体辅助对焦（成功）" class="headerlink" title="利用空物体辅助对焦（成功）"></a>利用空物体辅助对焦（成功）</h2><p>既然物体本身存在顶点问题导致对不上焦，那么我们就使用一个新物体，顶点在中心的物体，让摄像机跟踪，焦点就是顶点，然后这个空物体跟着我们要运动的模型一起运动，是不是就行了？</p><p>实际上是——成功了</p><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><h2 id="1-新建空物体"><a href="#1-新建空物体" class="headerlink" title="1.新建空物体"></a>1.新建空物体</h2><p>建议使用与对焦物体相似的形状，我使用的是球体（头部）</p><p><img src="https://res.arsrna.cn/blog-images/1972305/7f66e7c6cc1dc51acc05e9499efbdb21.png"></p><h2 id="2-设置摄像机对焦"><a href="#2-设置摄像机对焦" class="headerlink" title="2.设置摄像机对焦"></a>2.设置摄像机对焦</h2><p>摄像机开启景深，将<strong>聚焦到物体</strong>这一项选择到刚刚新建的空物体上</p><p><img src="https://res.arsrna.cn/blog-images/1972305/6620704da6dc7041c745762e9894152f.png"></p><p><em>其他设置按照之前工程来进行，比如光圈因项目而异，是调整景深深浅度的数值</em></p><p>这时候移动空物体，焦点就会随之变化</p><p><img src="https://res.arsrna.cn/blog-images/1972305/a8c6e0871146b7162b3637acb1fde993.png"></p><p><img src="https://res.arsrna.cn/blog-images/1972305/4e58e77e2cbca2d75669afd7b06d9b4b.png"></p><p>但是现在只能手动移动，我们要做的是跟踪对焦物体</p><h2 id="3-跟踪对焦物体"><a href="#3-跟踪对焦物体" class="headerlink" title="3.跟踪对焦物体"></a>3.跟踪对焦物体</h2><p>选择空物体</p><p><img src="https://res.arsrna.cn/blog-images/1972305/43022deab3b470c4456f5b2c75f3437c.png"></p><p>在<strong>物体属性-关系</strong>处，将<strong>父级选择</strong>_<strong>对焦的物体的骨骼</strong>_，父级类型选择<strong>骨骼，</strong>父级骨骼选择控制跟踪对象的骨骼</p><p><img src="https://res.arsrna.cn/blog-images/1972305/9b1d107d388c53ac3f02551556133317.png"></p><p>如果没有骨骼，父级就选对焦物体，类型选择顶点</p><p><img src="https://res.arsrna.cn/blog-images/1972305/5350fe1c3c4e82ca1d875287b608ee99.png"></p><p>然后将空物体移动到对焦物体上，如果预览页面是合焦的，就成功了</p><p>这时候物体运动将会被跟踪</p><p><img src="https://res.arsrna.cn/blog-images/1972305/56350b8e9eefe769bcb0223ba0041e3d.png"></p><p><img src="https://res.arsrna.cn/blog-images/1972305/297c2f485f4aabc11fd75e8916fd81f5.png"></p><p>现在不管怎么乱飞，都是合焦的了，哪怕是一只拖鞋也可以完美对焦刀锐奶化</p><p>到此，教程就结束了，感谢支持</p><p>Powered by Ar-Sr-Na <a href="https://www.arsrna.cn/">www.arsrna.cn</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摄影,渲染,跟踪,对焦,3d,blender,焦距</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【对象存储COS】利用数据万象CI对影像内容空间进行优化</title>
    <link href="/posts/1961325/"/>
    <url>/posts/1961325/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>业务量的不断扩大，导致对象存储的存储空间以及流量迅速增大，尤其是图片业务，web中最关键的部分，由于html的同步加载特性，通常是一张加载完才能加载下一张，在本地降低分辨率会丢失图片大部分细节，那么除了让本地图片一张张压缩之外，还有什么办法大幅度减小图片体积呢？</p><p>腾讯云对象存储与数据万象提供了极致性价比的压缩：<a href="https://cloud.tencent.com/document/product/436/60450">对象存储 图片压缩 - API 文档 - 文档中心 - 腾讯云 (tencent.com)</a></p><h2 id="计费方面"><a href="#计费方面" class="headerlink" title="计费方面"></a>计费方面</h2><table><thead><tr><th align="left">输出格式</th><th align="left">价格</th></tr></thead><tbody><tr><td align="left">TPG</td><td align="left">0.1元&#x2F;千次</td></tr><tr><td align="left">HEIF</td><td align="left">0.1元&#x2F;千次</td></tr><tr><td align="left">AVIF</td><td align="left">0.3元&#x2F;千次</td></tr></tbody></table><h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><p><a href="https://www.arsrna.cn/test/img.html">https://www.arsrna.cn/test/img.htm</a>l</p><p><img src="https://res.arsrna.cn/blog-images/1961325/527cafc68ff4d343e4160bd05f0e5398.png"></p><p>可以看到，HEIF对比原图，下降了80%左右的大小，而画质基本不变，并且在速度上，HEIF加载也是最快的，因为只有7.8kb</p><p><img src="https://res.arsrna.cn/blog-images/1961325/939ba6799059bc704bfb79a5a9ee2102.png" alt="HEIF   700k"></p><p><img src="https://res.arsrna.cn/blog-images/1961325/9bc29e5cb98de7162f50e7ae22453af1.png" alt="原图PNG  30M"></p><p>可以看到，压缩前后图片画质基本没有区别，色彩空间有所压缩，但是图片大幅下降了大小</p><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><p>因为AVIF是一种较新的类似AV1格式，只有在较新的浏览器才可以浏览，所以在这里建议使用HEIF，各个图片的兼容性如下（亲测）：</p><table><thead><tr><th align="left">格式</th><th align="left">Android 12</th><th align="left">iOS15.4</th><th align="left">Windows11</th><th align="left">压缩</th></tr></thead><tbody><tr><td align="left">PNG</td><td align="left">√</td><td align="left">√</td><td align="left">√</td><td align="left">无</td></tr><tr><td align="left">JPG</td><td align="left">√</td><td align="left">√</td><td align="left">√</td><td align="left">无</td></tr><tr><td align="left">AVIF</td><td align="left">×</td><td align="left">×</td><td align="left">需要扩展</td><td align="left">↓50+%</td></tr><tr><td align="left">HEIF</td><td align="left">√</td><td align="left">√</td><td align="left">需要扩展</td><td align="left">↓30+%</td></tr><tr><td align="left">TPG</td><td align="left">仅qq浏览器</td><td align="left">仅qq浏览器</td><td align="left">仅qq浏览器</td><td align="left">↓50+%</td></tr><tr><td align="left">WebP</td><td align="left">√</td><td align="left">√</td><td align="left">√</td><td align="left">↓20+%</td></tr></tbody></table><h1 id="相关基础配置"><a href="#相关基础配置" class="headerlink" title="相关基础配置"></a>相关基础配置</h1><h2 id="对象存储设置开通"><a href="#对象存储设置开通" class="headerlink" title="对象存储设置开通"></a>对象存储设置开通</h2><p>首先前往数据万象CI产品控制台开通  <a href="https://console.cloud.tencent.com/ci">概览 - 数据万象 - 控制台 (tencent.com)</a></p><p>在对象存储开通高级压缩</p><p><img src="https://res.arsrna.cn/blog-images/1961325/d4f2e1b04b9de8af67ae26fe532c613e.png"></p><h1 id="存量数据处理"><a href="#存量数据处理" class="headerlink" title="存量数据处理"></a>存量数据处理</h1><h2 id="控制台处理"><a href="#控制台处理" class="headerlink" title="控制台处理"></a>控制台处理</h2><p>在对象存储数据工作流-公共配置中，设创建模板</p><p><img src="https://res.arsrna.cn/blog-images/1961325/60722196d4dd97ee56a7661ead84e6cd.png"></p><p>设置名称，参数</p><p><img src="https://res.arsrna.cn/blog-images/1961325/00429a3555ec961df511455728fb9c29.png"></p><p>不缩略，输出格式AVIF或者HEIF</p><p>保存以后在 任务 处创建图片压缩任务</p><p><img src="https://res.arsrna.cn/blog-images/1961325/1f36a2d77104b21538522079327ac787.png"></p><p>设置所有参数，输出文件名按需设置</p><p>完成之后确定即可开始进程</p><p>此方式优点：设置简单</p><p>缺点：批量数据很难实现处理，比较繁琐</p><p>建议开启上传的时候开启数据流处理</p><h2 id="工作流处理"><a href="#工作流处理" class="headerlink" title="工作流处理"></a>工作流处理</h2><h3 id="设置工作流"><a href="#设置工作流" class="headerlink" title="设置工作流"></a>设置工作流</h3><p>在对象存储工作流控制台 ：<a href="https://console.cloud.tencent.com/cos/workflow/list">数据工作流 - 对象存储 - 控制台 (tencent.com)</a></p><p>创建工作流，名称自定义，选择对应处理的存储桶，建议开启格式匹配-图片文件</p><p>配置工作流。输入后执行图片处理</p><p><img src="https://res.arsrna.cn/blog-images/1961325/0750d87cef7ba393f4e9ec36def69f8c.png"></p><p>选择刚刚设置的存储桶</p><p><img src="https://res.arsrna.cn/blog-images/1961325/20f7acf3ed01c87f69430b90a0a7b546.png"></p><p>然后保存</p><h3 id="执行工作流"><a href="#执行工作流" class="headerlink" title="执行工作流"></a>执行工作流</h3><p>在工作流控制台 <a href="https://console.cloud.tencent.com/cos/workflow/list">数据工作流 - 对象存储 - 控制台 (tencent.com)</a></p><p>在刚刚创建的工作流操作里，点击执行工作流</p><p><img src="https://res.arsrna.cn/blog-images/1961325/6a6ab01cbae220e27cba74bf1a9bc6fc.png"></p><p>扫描任务名称自定义，扫描模式多个文件执行工作流</p><p>剩下的根据需要设置</p><p><img src="https://res.arsrna.cn/blog-images/1961325/3d612b7ee29a83b08da7bdc8bd2cf90e.png"></p><p>完成之后执行工作流即可</p><p><img src="https://res.arsrna.cn/blog-images/1961325/c1b84631677e38d23a813905e750266e.png"></p><p>该方式优点：一次设置，次次方便，批量的时候非常方便</p><p>缺点：第一次设置较复杂，容易导致参数过多忘记</p><h1 id="上传数据处理"><a href="#上传数据处理" class="headerlink" title="上传数据处理"></a>上传数据处理</h1><h2 id="数据工作流（推荐）"><a href="#数据工作流（推荐）" class="headerlink" title="数据工作流（推荐）"></a>数据工作流（推荐）</h2><p>在数据工作流里面打开上传触发执行即可</p><p><img src="https://res.arsrna.cn/blog-images/1961325/88a57df15403211ca1af08251f935c8b.png"></p><p>每次上传到任务流设置的指定路径就会执行</p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>由于需要存储到存储桶里，API只能做到实时处理无法直接保存到文件，所以需要通过持续化将图片，在上传的时候要加入参数，让图片自动保存<a href="https://cloud.tencent.com/document/product/460/18147">数据万象 图片持久化处理 - API 文档 - 文档中心 - 腾讯云 (tencent.com)</a></p><p>其中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">rules<br></code></pre></td></tr></table></figure><p>这个参数需要自己定义，可以在工作流详情图像处理看得到</p><p><img src="https://res.arsrna.cn/blog-images/1961325/1b02984c1a6bbd74d66f59853b5caed0.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">imageMogr2/format/avif/interlace/<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="直观大小对比"><a href="#直观大小对比" class="headerlink" title="直观大小对比"></a>直观大小对比</h2><p>这里以三张图片为例</p><table><thead><tr><th align="left">原图&#x2F;MB</th><th align="left">HEIF&#x2F;MB</th><th align="left">AVIF&#x2F;MB</th></tr></thead><tbody><tr><td align="left">7.91</td><td align="left">3.2</td><td align="left">1.8</td></tr><tr><td align="left">18</td><td align="left">13</td><td align="left">3.2</td></tr><tr><td align="left">30</td><td align="left">14</td><td align="left">6.9</td></tr></tbody></table><p>很明显地看到，相比原图JPG或PNG格式，HEIF与AVIF大幅度压缩了不少，如果一个文件夹有100000张10M的图片，AVIF就剩下了300+G，换算到腾讯云的标准存储容量包价格，每个月存储省下了24块，流量省下了102块（中国大陆）</p><h2 id="画质对比"><a href="#画质对比" class="headerlink" title="画质对比"></a>画质对比</h2><p>这么大的压缩率，如果是传统的压缩方式，估计已经破败不堪了，但是这两种压缩方式能够尽量保留原色彩和画质，尽量无损</p><p><img src="https://res.arsrna.cn/blog-images/1961325/3c0123f6cf7827cfb017bebca6f486af.png" alt="原图（14M）"></p><p><img src="https://res.arsrna.cn/blog-images/1961325/33f16f92a8b2c66c0a1c5a03bb982663.png" alt="HEIF（3M）"></p><p>测试图片：</p><p><a href="https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif">https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif</a></p><h2 id="优缺点对比"><a href="#优缺点对比" class="headerlink" title="优缺点对比"></a>优缺点对比</h2><table><thead><tr><th align="left"></th><th align="left">高级压缩</th><th align="left">传统压缩</th></tr></thead><tbody><tr><td align="left">速度</td><td align="left">云端处理，速度快</td><td align="left">本地处理，根据处理设备决定</td></tr><tr><td align="left">画质</td><td align="left">近乎无损</td><td align="left">有损压缩</td></tr><tr><td align="left">压缩率</td><td align="left">极高</td><td align="left">一般</td></tr><tr><td align="left">成本</td><td align="left">低</td><td align="left">根据处理设备决定</td></tr><tr><td align="left">兼容性</td><td align="left">中等</td><td align="left">极强</td></tr></tbody></table><p>由于AVIF，HEIF还是比较小众的图片格式，鉴于原生iOS就是HEIF的优势，在iOS平台上强烈建议使用HEIF方式，Windows平台建议Webp和AVIF。</p><p>希望不久的将来，图片空间与图片压缩算法的发展，我们的数据将会在质的提升时，控制量的剧变</p><h1 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h1><h2 id="图像过大处理失败"><a href="#图像过大处理失败" class="headerlink" title="图像过大处理失败"></a>图像过大处理失败</h2><p>体积限制：处理图片原图大小不超过32MB、宽高不超过30000像素且总像素不超过2.5亿像素，处理结果图宽高设置不超过9999像素；针对动图，原图宽 x 高 x 帧数不超过2.5亿像素。</p><p>如果超出限制则会导致失败，建议使用Photoshop或者其他软件将图片缩小到范围之内再进行处理</p><h2 id="无法开始处理"><a href="#无法开始处理" class="headerlink" title="无法开始处理"></a>无法开始处理</h2><p>请确认是否开通图像高级压缩和数据万象，同时确认是否后付费留有足够的余额</p><h2 id="处理时间过长"><a href="#处理时间过长" class="headerlink" title="处理时间过长"></a>处理时间过长</h2><p>一般一张图片10分钟左右肯定能完成，如果太长，请关闭任务重新开始，如果还是不行，请核实图片内容是否过于复杂，建议优化图片内容</p><p>如果还是不行，建议提交工单确认账号或系统问题</p><hr><p>到此，教程就结束了，更多可能，需要我们一起发现</p><p>Powered by Ar-Sr-Na <a href="http://www.arsrna.cn/">www.arsrna.cn</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据万象,对象存储,图像处理,大数据解决方案</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>春节期间部分服务SLA公告：[08-1202/08-1203]D</title>
    <link href="/posts/%5B08-1202-08-1203%5DD/"/>
    <url>/posts/%5B08-1202-08-1203%5DD/</url>
    
    <content type="html"><![CDATA[<p>节目编号：[08-1202&#x2F;08-1203]D：春节期间部分服务SLA公告</p><p>2月10日是今年的春节，去年的春节平平淡淡，甚至还遭受了DDoS攻击，人身攻击，非常不容易</p><p>人放假，服务不放假，大家的制作需求以及渲染机器需求将会由serverless调度完成，任何问题可以联系我，服务依然在线</p><p>服务不放假，更新计划也不放下，目前下一期的制作正和合作方进行联系，共同解决难题后才能下一步制作，同时，javalearn Ar-Sr-Na Serverless分支也在不断更新：<a href="https://java.arsrna.cn/docs/">JavaLearn Ar-Sr-Na</a><br>网站出现问题也会第一时间修复</p><p>网课，会议等一系列服务将持续提供RTC实时音视频系统，去年开发的RTC今年仍然持续运行，全球延迟低至14ms，<a href="https://rtc.arsrna.cn/">点击进入</a></p><p>** 感谢所有为我们支持与付出的开发者，观众，用户们！ **</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【腾讯云前端性能(RUM)优化大赛】针对前端的通用用户首屏体验(LCP)优化</title>
    <link href="/posts/1928176/"/>
    <url>/posts/1928176/</url>
    
    <content type="html"><![CDATA[<p><img src="https://res.arsrna.cn/blog-images/1928716/6df4782deccb2d980e16bf366f1f38a7.jpeg"></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="根据文档接入腾讯云RUM"><a href="#根据文档接入腾讯云RUM" class="headerlink" title="根据文档接入腾讯云RUM"></a>根据文档接入腾讯云RUM</h2><p><a href="https://cloud.tencent.com/document/product/1464/58134">前端性能监控 快速入门 - 文档中心 - 腾讯云 (tencent.com)</a></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">const</span> aegis = <span class="hljs-keyword">new</span> Aegis(&#123;<br>        id: <span class="hljs-string">&#x27;xxxx&#x27;</span>, <span class="hljs-comment">// 上报 id</span><br>        uin: <span class="hljs-string">&#x27;xxx&#x27;</span>, <span class="hljs-comment">// 用户唯一 ID（可选）</span><br>        reportApiSpeed: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 接口测速</span><br>        spa: <span class="hljs-literal">true</span> <span class="hljs-comment">// spa 应用页面跳转的时候开启 pv 计算</span><br>    &#125;);<br></code></pre></td></tr></table></figure><h2 id="检查是否完成接入"><a href="#检查是否完成接入" class="headerlink" title="检查是否完成接入"></a>检查是否完成接入</h2><p>部署已经完成构建的站点</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">serverless -deploy</span><br></code></pre></td></tr></table></figure><p>console中键入 <code>&lt;aegis&gt;</code>出现</p><p><img src="https://res.arsrna.cn/blog-images/1928716/3c7f7e41a0806a4d7a686102993d4f66.png"></p><p>即可</p><hr><h1 id="数据结果分析"><a href="#数据结果分析" class="headerlink" title="数据结果分析"></a>数据结果分析</h1><p><img src="https://res.arsrna.cn/blog-images/1928716/aceec8a6f6822dc8707785ddc5e1298a.png"></p><p>针对首屏加载，需要注意的分为以下几项：</p><h2 id="1-网络优化"><a href="#1-网络优化" class="headerlink" title="1.网络优化"></a>1.网络优化</h2><p>网络的问题可以通过DNS优化，CDN，后端的优化</p><p>利用ping等工具 可以直观了解到各个地区的速度情况</p><p><img src="https://res.arsrna.cn/blog-images/1928716/2d4d392016e20937d64b1977c7bc33c9.png"></p><p>由于站点部署在中国香港，所以大陆西北地区速度会下降，解决办法就是多部署几个后端，然后负载均衡，必要的时候还要对网络运营商进行分别解析，均衡</p><p>由于本站的后端是架设在腾讯云的对象存储上的，所以对于地域的切换与管理比较灵活</p><p>对于未备案站点：华南地区优化建议解析中国香港，华北地区建议解析俄罗斯</p><p>如果是备案站点：直接接入CDN，更灵活地改变地域性能以及速度，延迟</p><p>因为网络一旦确定，就无法更改他的性能，而且受运营商和服务商的影响较大，但是对于用户来说，网络性能不是重点，因为合格的服务商，速度都不会太慢，大部分都在500ms以内，本地有的可以到达10ms以内</p><p>这个延迟也会影响性能，不断地请求，数据量巨大，每个数据就得经历这一个个延迟，所以于网络优化对前端性能优化数据也是至关重要的</p><h2 id="2-资源"><a href="#2-资源" class="headerlink" title="2.资源"></a>2.资源</h2><p>除了延迟，网络速度也是很重要的一关，由于html的特性，资源都是由文档上往下同步加载，即加载完A再加载B，比如</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;资源A&quot;</span>&gt;<br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;资源B&quot;</span>&gt;<br>&lt;script <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;资源C&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>若资源A耗时0.1s，资源B耗时0.2s，资源C耗时0.5s，总共加起来就是0.8s</p><p><img src="https://res.arsrna.cn/blog-images/1928716/4f11c3bb72a3b460e8108388e90cd111.png"></p><p>首屏速度最关键的是LCP，也就是框架加载出来的时间，这对index要求很高，如果大块文件在index太慢，则会拖慢速度</p><p>在后端的index，一般100k以内最好</p><p>如果是php渲染的index，不仅加载的时候会占用服务器后端资源，前端也会一片空白，非常缓慢，就如WordPress和hexo两者性能一样</p><p>例如这一段代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xxxxx&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;xxx.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">$(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">$(<span class="hljs-string">&#x27;#text&#x27;</span>).<span class="hljs-title function_">html</span>(<span class="hljs-string">&#x27;我永远喜欢薇尔莉特&#x27;</span>)</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>    薇尔莉特·伊芙加登是日本轻小说作家晓佳奈创作的轻小说《紫罗兰永恒花园》及其衍生作品中的女主角<br>    隶属C·H邮政公司的「自动手记人偶」少女，拥有罕见的战斗力。<br>    幼年时被迪特福利特上校从战争中捡到，在发觉薇尔莉特有着非凡的战斗天赋后将其作为「战斗兵器」赠送给他的弟弟——基尔伯特·布甘比利亚少校。<br>    此后薇尔莉特就跟随着基尔伯特少校，两人的关系在战争中也愈加紧密<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://res.arsrna.cn/wallpaper/WELT%20(17).jpg_copwh&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xxxxx&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>他的加载顺序如下：</p><p><img src="https://res.arsrna.cn/blog-images/1928716/45dc0d349b47b5094b109f32488ce055.png"></p><p>当我们打开页面时，先加载了header最顶端的Script，同时CSS异步加载</p><p>当JavaScript加载完成时开始加载DOM，同时CSS继续渲染</p><p>DOM的加载也是从上到下，先到最大的div，再依次加载</p><p>图片和视频是大文件，html可以让他们异步加载，所以图中video实际上是dom的加载，资源的加载在后面的互动资源加载</p><p>LCP不记录后面资源的加载，所以这一步video对LCP性能影响不大，影响的是img，因为img需要显示出图片才算加载完框架了，而video则是根据用户设置的宽高就算加载完</p><p>到这里整个页面已经出来了</p><p>$(document).ready()方法也开始执行，H1开始渲染出内容<strong>“我永远喜欢薇尔莉特”</strong></p><p>视频和图片在这里占据大量的资源，如果不是在最头部或者很重要的话，建议加上 preload&#x3D;”none” 属性，等待用户手动操作再加载，这样就不会占用其他资源加载的时间了</p><p>JavaScript代码，如果是jQuery这类要在页面没加载前执行的，可以放在头部；如果是用户触发才执行或者是插件的话，建议放在body外面，先加载完dom再加载脚本，减少dom渲染时间</p><p>同样地，因为每次加载都要请求一遍，所以这些小资源尽量做成一个bundle，即一堆js写在一个js里面，不然每次都需要请求请求请求，占据大量时间</p><p>很多很多的小图片，也建议像上面的方法进行处理，变成一张大图，后续通过background位置去调整要显示的地方</p><h2 id="3-渲染性能"><a href="#3-渲染性能" class="headerlink" title="3.渲染性能"></a>3.渲染性能</h2><p>后续用户会点击视频，点击的时候就会触发加载，互动事件启动</p><p>如果是JavaScript在计算的，由于JavaScript原生异步，所以只按照时长最长的事件计算时间</p><p>同步部分继续计时（延迟操作setTimeout或者计时器setInterval除外）</p><p><img src="https://res.arsrna.cn/blog-images/1928716/dcb3b77eb12533173a2d772449a8f9e6.png"></p><h2 id="少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费"><a href="#少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费" class="headerlink" title="少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费"></a>少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费</h2><p>能纯前端尽量纯前端，减少ajax造成的耗时</p><p>媒体大文件，无必要建议不预加载</p><h2 id="4-适当利用缓存"><a href="#4-适当利用缓存" class="headerlink" title="4.适当利用缓存"></a>4.适当利用缓存</h2><p>为浏览器设置足够合适的缓存</p><p>html建议2小时，css，视频等不常更新的资源建议设置5天，这样用户重复加载的时候就不会从头开始慢慢缓存，</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;meta http-equiv<span class="hljs-operator">=</span><span class="hljs-string">&quot;Cache-Control&quot;</span> content<span class="hljs-operator">=</span><span class="hljs-string">&quot;max-age=7200&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>做好以上这些，可以大大提升前端性能，本网站</p><p>优化前网络：腾讯云对象存储-中国香港直连  南方48ms  北方100ms</p><p>优化后网络：腾讯云对象存储-中国香港，俄罗斯，新加坡  20ms-80ms</p><p>优化前LCP：8000ms</p><p>优化后LCP：1500ms</p><p><img src="https://res.arsrna.cn/blog-images/1928716/28010cf21f121b8fb828e2d555c3e30e.png" alt="1500ms的时候已经加载完框架，2000ms的时候已经加载完整个页面"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>网络优化：多地区设置多解析，针对地域进行优化</p><p>加载优化：打包JavaScript，css，不必要脚本丢页底</p><p>内容优化：减少不必要的DOM和视频图片预加载</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摄影,渲染,跟踪,对焦,3d,blender,焦距</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】纯原生异步特性，教你用JavaScript快速获取壁纸站</title>
    <link href="/posts/08-1202S-08-1203R/"/>
    <url>/posts/08-1202S-08-1203R/</url>
    
    <content type="html"><![CDATA[<p>节目编号：08-1202S&#x2F;08-1203R</p><p>切记请勿用于违法用途，一切后果与作者无关！请尊重原作者著作权，除学习外禁止未经同意随意抓取数据，禁止应用于商业化行为！</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/lovi5rlpmf.jpg"></p><hr><h1 id="原理架构分析"><a href="#原理架构分析" class="headerlink" title="原理架构分析"></a>原理架构分析</h1><p>众所周知网页渲染出来还是html，而html都是由一部分一部分的标签组成的，对于表格，图库这类网站来说，这一部分和一部分是相似的结构，比如<code>&lt;tr&gt;&lt;td&gt;</code>，<code>&lt;div class=&quot;xxx&quot;&gt;</code>，通过class，id，tagName的规律，不难找到相似元素，本期就以壁纸站为例：</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/ky190sc2fk.png"></p><p>第一步，打开F12,开发者工具分析结构</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/kee1hww7qx.png"></p><p>这一个个整齐的DIV，就是每一个图块对应的结构，他们的query选择器为’.thumb-container-big’</p><p>再把元素展开看看</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/mjtnu4mik4.png"></p><table><thead><tr><th align="left">元素Class</th><th align="left">内容</th></tr></thead><tbody><tr><td align="left">boxgrid</td><td align="left">图片容器，放上面那张缩略图的</td></tr><tr><td align="left">boxcaption</td><td align="left">图片的一些描述，下面的描述文字</td></tr></tbody></table><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/91p454stak.png"></p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/wyur18v7xf.png"></p><p>我们正好只要这两部分，原图和标题</p><p>接下来展开boxgrid</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/w7hfd9iv9p.png"></p><table>  <tr>    <th class="align-left">元素</th>    <th class="align-left">属性</th>    <th class="align-left">内容</th>  </tr>  <tr>    <td>a</td>    <td>href</td>    <td>跳转地址</td>  </tr>  <tr>    <td rowspan="3">picture</td>    <td>source</td>    <td rowspan="3">全都是图片源，我们要的就是这个</td>  </tr>  <tr>    <td>source</td>  </tr>  <tr>    <td>source</td>  </tr></table><p>控制台里发现最大的一张</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/m7ryazhrbc.png"></p><p>600*375显然不是我们要的分辨率，进入图片详情看看</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/9kn9cecppd.png"></p><p>1920*1080的，他们的URL分别如下：</p><p>缩略：533&#x2F;thumbbig-533007.png</p><p>原图：533&#x2F;533007.png</p><p>多看几张，缩略图都是thumbbig-xxx.webp，原图都是xxx.png</p><p>所以我们只需要替换掉thumbbig-为空，.webp为png即可</p><p>或者如果我们注意到元素id正好对应图片的名称</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/hp08it29w4.png"></p><p>替换掉thumb_即可，但是我们就无法获取上级目录了</p><p>如果要获取，就得用indexOf索引内容，太过于复杂，所以还是老老实实根据Picture里面的source属性吧</p><h1 id="理论存在实践开始"><a href="#理论存在实践开始" class="headerlink" title="理论存在实践开始"></a>理论存在实践开始</h1><p>考虑到一些网站没有jquery，所以整个过程全部是原生js运行</p><h2 id="捕捉父级元素"><a href="#捕捉父级元素" class="headerlink" title="捕捉父级元素"></a>捕捉父级元素</h2><p>案例中的元素class为thumb-container-big</p><p>所以引入方法</p><pre><code class="JavaScript">document.getElementsByClassName()</code></pre><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/c1u3l8bmv5.png"></p><p>已经捕获到了31个元素，先用第一个元素分析</p><h2 id="捕捉子元素"><a href="#捕捉子元素" class="headerlink" title="捕捉子元素"></a>捕捉子元素</h2><pre><code class="JavaScript">document.getElementsByClassName(&#39;thumb-container-big&#39;)[0].childNodes</code></pre><p>一步一步抓下去</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/q06mry330c.png"></p><p>PS：这里用jQuery会更方便些</p><p>最后得到代码：</p><pre><code class="JavaScript">document.getElementsByClassName(&#39;thumb-container-big&#39;)[0].childNodes[1].childNodes[1].childNodes[1].childNodes[1].childNodes[1]</code></pre><p>这时候已经获取到我们的Picture元素了</p><p>只需要获取他的属性srcset就能获得缩略图地址</p><p>所以我们用attributes对象获得属性：</p><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/cggfz46gpc.png"></p><pre><code class="JavaScript">attributes[1]</code></pre><p>正是我们想要的链接</p><p>但是获取出来的确实一个xml格式的内容：</p><pre><code class="html">srcset=&quot;https://images8.alphacoders.com/533/thumb-350-533007.webp&quot;</code></pre><p>转化为文本：.textContent</p><pre><code class="JavaScript">document.getElementsByClassName(&#39;thumb-container-big&#39;)[0].childNodes[1].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes[1].textContent这就是我们第一个元素捕获的方法，接下来就很简单了，把它封装为一个方法，方便调用：````JavaScriptfunction getLink(count) &#123;  return(document.getElementsByClassName(&#39;thumb-container-big&#39;)[count].childNodes[1].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes[1].textContent)&#125;</code></pre><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/o534hccr4l.png"></p><h2 id="获得原图"><a href="#获得原图" class="headerlink" title="获得原图"></a>获得原图</h2><p>根据上面的分析，我们对链接进行字符串替换：</p><pre><code class="JavaScript">getLink(0).replace(&#39;thumb-350-&#39;,&#39;&#39;).replace(&#39;.webp&#39;,&#39;.png&#39;)</code></pre><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/gfb7mr8vh3.png"></p><h2 id="遍历循环"><a href="#遍历循环" class="headerlink" title="遍历循环"></a>遍历循环</h2><p>由于class的数量正好是图片数量，所以直接根据class进行遍历</p><pre><code class="JavaScript">var elem = document.getElementsByClassName(&#39;thumb-container-big&#39;)for(i0=0;i0&lt;elem.length;i0++)&#123;  console.log(getLink(i0).replace(&#39;thumb-350-&#39;,&#39;&#39;).replace(&#39;.webp&#39;,&#39;.png&#39;))&#125;</code></pre><p><img src="https://res.arsrna.cn/blogs/08-1202S-08-1203R/a9u4sqtk7k.png"></p><p>我们的代码已经很完美，但是我不希望在控制台里输出，想要保存到文本文档怎么办？直接post到一个支持保存文件的后端即可，在这里不介绍</p><p>代码运行速度非常地快，回车一瞬间就全部跑完了，可见异步执行的威力</p><h1 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h1><p>优点：迅速，轻量，便捷</p><p>缺点：需要手动翻页，手动运行代码，半自动化</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>关于友情链接图片无法加载的问题</title>
    <link href="/posts/announcement-202109/"/>
    <url>/posts/announcement-202109/</url>
    
    <content type="html"><![CDATA[<p>如果是2021年8月以后申请的链接可以忽略这个问题，以前的就要注意了！！！</p><p>为了防盗刷流量，所以我开启了防盗链，只有我本人的域名可以进行读取，其他域名将会返回403，包括浏览器直接访问</p><p>不信你看这张图：</p><p><img src="https://res.arsrna.cn/wallpaper%2F996134.jpg"></p><p><a href="https://res.arsrna.cn/wallpaper%2F996134.jpg">https://res.arsrna.cn/wallpaper%2F996134.jpg</a></p><p>用浏览器打开或者放到其他网站试逝？</p><h1 id="出问题解决办法"><a href="#出问题解决办法" class="headerlink" title="出问题解决办法"></a>出问题解决办法</h1><p>如果真的在之前申请的友链，麻烦联系我：<br><a href="%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F">https://www.arsrna.cn/communication</a></p><h2 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1."></a>解决方案1.</h2><p>提供您的站点地址，我会将一份签名好的链接（有效期10年）送回给您，10年后再申请一次</p><p>优点：及时更新，图片是最清晰且最稳定的版本，腾讯云对象存储沉厚经验</p><p>缺点：网址较长</p><h2 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2."></a>解决方案2.</h2><p>将图片地址替换为 <a href="https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp">https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp</a></p><p>优点：网址短</p><p>缺点：我不能管理，更新较慢</p>]]></content>
    
    
    <categories>
      
      <category>通告</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【印刷的艺术】浅谈激光照排技术与电路板设计的艺术</title>
    <link href="/posts/08-0902P-A/"/>
    <url>/posts/08-0902P-A/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a><strong>导言</strong></h1><p>2021年，PCB打样的价格越来越低，电子爱好者们狂喜，不得不提的就是EDA软件，它是设计电路板，设计原理图，仿真等功能为一体的电气工程软件，电子爱好者往往比较个性，pcb自然也会有自己的风格，一般我们往丝印层加的都是元器件编号，或者公司logo，自己的昵称，所以印刷时同一个颜色阻焊，板厂用的打印机也只有一种颜色，如果想要打印图片就惨不忍睹了，细节全丢，如何解决这个问题？</p><h1 id="想法和原理"><a href="#想法和原理" class="headerlink" title="想法和原理"></a><strong>想法和原理</strong></h1><h2 id="类比推理"><a href="#类比推理" class="headerlink" title="类比推理"></a><strong>类比推理</strong></h2><p>如果你很细心观察身边的屏幕的话，你应该发现，彩色图片展现给你是因为有数万颗灯珠显示出来的，每颗灯珠又分为R,G.B三原色，通过改变RGB的电压就能调节颜色，比如R 4V，G 1V，B 0V，那么你得到的就是一个粉红色</p><p>把照片打印出来，你会发现惨不忍睹，颗粒感特别严重，虽然现在的打印机都有5000*5000以上的分辨率，但是观感却不如720p的电脑屏幕，这是为什么</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/27d0c8hz88.png"><br>如果我们把它扫描后放大</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/maph9t3oke.png"><br>就会出现网格状的点阵</p><p>这是因为打印机没法打印出深浅通道的墨水，打印的原色是CMYK，不能像RGB那样调节亮度，显示原理也不同，屏幕是发光源，而打印纸上的是因为环境光的漫反射产生的图像，环境光时时刻刻影响着打印质量。打印机不可能改变你眼睛看到的环境光，也不可能为了彩色照片去设计上万种颜色，但是人类的眼睛有一种特性，如果黑色点很密集，那就是黑色，如果拆散黑点，缩小，你会看到灰色，利用这一个特性，去延伸到更多颜色，实现深浅调节，所以这就不得不引出一个技术</p><h2 id="激光照排技术"><a href="#激光照排技术" class="headerlink" title="激光照排技术"></a><strong>激光照排技术</strong></h2><p>中国的汉字印刷发展史也有很长一段时间了，汉字在激光照排技术里，过程就是把汉字先分解为点阵然后通过一系列工序定影，类似胶片，这样文字就能够在纸张上呈现了。同样可以运用到图像上，将图像的通道分离为CMYK，根据色深度对每一个通道的点阵进行打散，最后输出到打印机</p><p>这样似乎解决了问题，不过，颜色的干扰会变得很明显，比如浅绿色，屏幕上面只要改变G的电压就行，只改变了一个像素；而纸张上，把一个绿色像素点拆分，可能就成了10个像素点，虽然打印分辨率和屏幕不是点对点，但是由于纸张的物理性质，墨水的表面张力会渗透到其它像素上，尤其是那些纸张很小的时候。计算机甚至不能处理点阵导致失真，如果你对着一段文字截图，然后缩小打印出来，就会看到像素重合造成的黑块，这也是文字边缘本身的问题，所以还是要回归问题的根源</p><h2 id="二值化技术"><a href="#二值化技术" class="headerlink" title="二值化技术"></a><strong>二值化技术</strong></h2><p>打印的墨水只有黑和无，那么我们的打印件也要有和无，也就是色阶只有0和255，比较常用的二值化方法则有：<strong>双峰法</strong>、<strong>P参数法</strong>、<strong>迭代法</strong>和<strong>OTSU法</strong>等。</p><p>最简单方法就是把色阶压缩，四舍五入，低于50%的全部空白，高于50%的全部是黑色，这种简单粗暴的方法必然导致数据的丢失</p><p>改变空白和全黑的阈值就能针对不同图片颜色差距上的修改</p><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a><strong>应用</strong></h1><p>如同开头所描述的电子爱好者的个性需求，我也是个性需求者之一，设计过许多PCB，也多多少少会放置几张图</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/fhu0xo2gtb.jpg"></p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/3ikeico4im.png"><br>这是原图</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/jprb9ku4wg.png"><br>如果直接用eda软件插入</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/8ip3ykttbd.png"><br><img src="https://res.arsrna.cn/blogs/08-0902P-A/32jmkw3gqd.png"><br>和刚刚一对比，细节少了不少，很多地方断线，这是因为EDA处理二值化不是那么好</p><p>所以我们手动处理，不让eda软件破坏细节</p><p>这里实践用的是线稿，位图可以按照上面所说的激光照排散点</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a><strong>教程</strong></h2><p>首先先把照片变为线稿，可以临摹，可以二阶最小值</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/0uga1hyym1.png"><br>ps里转线稿的方式很多，视频教程请见：<a href="https://www.bilibili.com/video/BV1pb411n72J">https://www.bilibili.com/video/BV1pb411n72J</a></p><p>到这一步很成功就算完成一半了，因为后续图片质量如何就取决于这一步</p><p>首先将这张图片的色阶稍微拉一下，让图片的颜色集中</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/0t23liux9p.png"><br>选择-色彩范围，点击背景，吸取下背景，然后delete删除背景（一定要是栅格图层或者普通图层，不能是智能图层）</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/q0x54dpvep.png"><br>右键画布反选选区，然后选择-修改-扩展选区1个像素</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/jfjyejzm4y.png"><br><img src="https://res.arsrna.cn/blogs/08-0902P-A/pk86j3vgup.png"><br>编辑-填充-颜色，选择黑色，确定</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/kbuyb4irem.png"><br><img src="https://res.arsrna.cn/blogs/08-0902P-A/n38lp9z5vk.png"><br>这时候你的图片已经完成二值化了，如果像我上图那样有方框和莫名其妙的噪点，多半是线稿化那一步的问题，最小值调整一下就好</p><p>导出为png格式的图片，导入eda，简化，平滑全部设置为0，看看成品</p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/z5pv8ehiwx.png"><br><img src="https://res.arsrna.cn/blogs/08-0902P-A/y4w3t0c0mb.png"><br><strong>重点来了：打板的时候一定要选择白色，这样才能更好呈现，因为你电脑编辑的时候是白底黑边，绿色的你也懂</strong></p><p><img src="https://res.arsrna.cn/blogs/08-0902P-A/jnrr2u70t0.png"></p><h2 id="到此，教程结束，感谢谢大家的支持"><a href="#到此，教程结束，感谢谢大家的支持" class="headerlink" title="到此，教程结束，感谢谢大家的支持"></a><strong>到此，教程结束，感谢谢大家的支持</strong></h2><h2 id="www-arsrna-cn-Ar-Sr-Na"><a href="#www-arsrna-cn-Ar-Sr-Na" class="headerlink" title="www.arsrna.cn Ar-Sr-Na"></a><strong><a href="http://www.arsrna.cn/">www.arsrna.cn</a> Ar-Sr-Na</strong></h2>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>硬件,电子,EDA,EDA软件,科技,二值化,技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021，大半年来，我们向大家交出一份答卷</title>
    <link href="/posts/2021-4ybirth/"/>
    <url>/posts/2021-4ybirth/</url>
    
    <content type="html"><![CDATA[<p>节目编号：</p><h1 id="我们学会了什么"><a href="#我们学会了什么" class="headerlink" title="我们学会了什么"></a>我们学会了什么</h1><h2 id="科普"><a href="#科普" class="headerlink" title="科普"></a>科普</h2><p>2019年7月，这是我来到广西南宁后第一次参加南宁良牙文化传播举办的月邪漫展，是南宁市一年两度的大展，两年后的1月29，我通过邮件联系上了这家公司，为了科普项目的需要，我们了解了举办一次展会需要多少资金，收入从哪来，如何推测观众渴望的嘉宾，怎么才能估算规模，提前几个月开始策划，只为了提供游客最好的体验，做科普项目也有两年了，这个项目，不仅仅只是我自己的只是储量展现给大家，如同大家上学的时候，接触的知识绝不止于学校围墙内的知识，社会动荡和一些娱乐圈子每天都能接触不同的瓜，但是大家可能不会深钻这些“瓜”，而我作为科普自媒体，想要了解为什么这么发生了，就必须得深究。如今，我们正和数十家公司和小伙伴们不断联系，互相交往，互相促进，这正是知识的力量</p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><p>2021，我接触了后端到前端的过渡开发，从前端再到全栈开发，她们的第一个应用是RTC实时音视频系统，为音视频通话提供动力，虽逻辑不是很紧密，但是仅靠这几千行代码就能在千里之外连接彼此，或许这正是代码的力量吧</p><p>4月，为了参加一个AI相关的比赛，通过腾讯云API完成应用，对于鉴权等方面我还是很不熟悉，自己搭建了个Node.js的应用，但是上线之前发现我还要把它搬到云端，我是Serverless重度应用，必须迁移到Serverless架构，这意味着所有代码都得改造，我去求助腾讯云的工程师，他非常耐心的解决问题，直到半夜两点，为什么？我问他，同时也在问我自己——为了尽仅有的一份力突破技术边界去探索</p><h2 id="新领域——电子"><a href="#新领域——电子" class="headerlink" title="新领域——电子"></a>新领域——电子</h2><p>与电子的故事从2015年就能说起，电子是一个无穷无尽的领域，偶然间接触到了伊朗作死哥的视频，从一开始看整活到后面真真正正的学习</p><p>最近又有一个好玩的东西——LM3915，关于他的故事，我么下期再讲。</p><p>同时我不得不感谢那天接通我电话的客服，虽然我的问的都是奇怪的问题，比如导入BOM清单，PCB转原理图，焊盘打过孔……真正有价值的是她的一句话：“立创eda现在有个训练营活动，您可以去公众号了解一下”我并没有当做广告忽视掉它，我详细了解了活动，报名了活动，接下来是这个作品的故事：</p><p>我在7月12填了表，许多人可能在这一步就感觉输给了对手，我觉得这个训练营没有名次，有的只是训练的机会</p><p>7月13,14……21,22每天都在更新我的作品，从最开始的TDA2030，到TDA7297，到TDA2003</p><p>只有功放功能或许太单调，来点个性化的吧</p><p><img src="https://res.arsrna.cn/blogs/2021-4ybirth/20210814152648.png_copwh"></p><p>它是一款均衡器和功放，花了一个月时间去设计，优化，调试</p><p>就连以前捣鼓的前端也没有继续完成，因为电子实在是有无穷大的魅力，要是软件与硬件结合起来，只要感想，它们就能做。<br>甚至于与元器件们产生了感情；第一次设计，花了2周，回来发现功放和均衡器电源短路，又花了1周改进均衡器成功了，但是功放没声音，结果发现买了假芯片非常无语。第三次不用这颗芯片转而使用便宜点的2003，到手后，花了一下午焊接，通电，灯光正常，接入音响然后</p><p><strong>它响了</strong></p><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1277,    vcode: '3fbd60cdabefef47',    autoPlay: false});</script><p>非常洪亮，非常清晰，虽然不及所谓的通透，但至少它响了，这是我第一次制作功放，这一声响证明了一个月的努力没有白费，也感谢oshwhub的刘工给予了非常多的技术支持，也感谢特别可爱的小橘，更离不开的是我们的群友，好的精神不断感染着我，从一开始的放弃，到群友们的作品给我的动力，直到灯亮音响，虽没获得好的名次，但我是2200人参加中，550人制作里，116人完成的获奖25人之一，我也是获奖名单中唯二一个两个工程获奖的用户（嘴上说奖没我的份了，结果还是进了个榜单）</p><p><img src="https://res.arsrna.cn/blogs/2021-4ybirth/3FFC371353887F89C10B099B3EE00CF2.JPG_copwh" alt="最长那个是我，两个工程"></p><p>颁奖就在昨天，吃着饭，看着直播，每一个环节甚是期待</p><p><a href="%E5%B7%A5%E7%A8%8B-%E5%8A%9F%E6%94%BE">https://oshwhub.com/13026918161/gflm3915</a></p><p><a href="%E5%B7%A5%E7%A8%8B-%E5%9D%87%E8%A1%A1%E5%99%A8">https://oshwhub.com/13026918161/lm3600_5</a></p><p>电子的世界，难以描述，难以想象，一颗不起眼的电子却能推动全人类的发展，小到01005大到拳头的电阻电容，无形中改变着我们对科技的认知，物联网这个圈子，蕴含着无限潜能，如同我们的标语，跨越边界，触碰极限，只要敢想，甚至天马行空，就能够从中取得灵感，实现梦想的前提是想，我们有团队，也有朋友，你们也有，大家都有，想得出来分享给大家，我们共同实现这触碰极限的梦想，这是骨子里的叛逆，超越一切不可能，改变一切理所应当，我们与大家共同探索，一同超越，为每一颗电子注入青春活力</p><p>如今，用自己的努力换来了别人的认可，立创eda也希望我们能够继续坚持自己的这份热情，同时也会在资金上给予支持，“只要你有梦想，我们帮你实现”</p><h2 id="做视频"><a href="#做视频" class="headerlink" title="做视频"></a>做视频</h2><p>因为今年精力都不在做视频上了，更新频率较低，有一天晚上我在反思还要不要做下去，想起很久以前我视频的经历，在这里有一个小问题问大家</p><p><em><strong>大家还记得 <strong>爱拍</strong> 这个原创平台吗？</strong></em></p><p>我人生中第一个视频就是在爱拍上发的，当年的生死狙击，4399的视频全是在那看的，不知在哪年，它突然终止了服务</p><p>做视频可以改变你对生活的角度，从主观到客观，但绝不是活在别人眼里，活在镜头里，甚至被101010的数据困在笼子里，我们要的是自由的生活，但是自由是在客观下的自由，做视频不仅仅是分享自己的生活，也要让观众产生共鸣，所以不可或缺的就是在别人眼里被接受。</p><p>今天无意间才想到爱拍，现在发视频都是在腾讯云+社区和bilibili，爱拍见证了我视频质量的提高，同时b站记录了我对领域边界的突破，腾讯云+社区上的技术文章让我理解藐视理所当然，每一个视频平台都有着他们的故事，上演的确是我们的故事，改变故事的，是我们</p><p>所以，爱拍会回来吗</p><p>2021-8-14 Ar-Sr-Na 有感写下</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>#第六届立创电赛#LA3600 5段前级均衡器</title>
    <link href="/posts/08-0902-E-LA3600/"/>
    <url>/posts/08-0902-E-LA3600/</url>
    
    <content type="html"><![CDATA[<p>为了让音频各频段饱满，弥补音响缺陷，加了LA3600 五段均衡器芯片<br>搭配功放使用</p><p><img src="/LA3600%E5%9D%87%E8%A1%A1%E6%A8%A1%E5%9D%97" alt="https://image.lceda.cn/documents/a22fda8593ed4beea50c29c0f437e5fb.png"></p><p><img src="/PCB_LA3600%E5%9D%87%E8%A1%A1%E5%99%A8%E6%A8%A1%E5%9D%97" alt="https://image.lceda.cn/documents/efdcce019faf453185c18ca449f3bfe6.png"></p><h1 id="工程详情"><a href="#工程详情" class="headerlink" title="工程详情"></a>工程详情</h1><p><a href="%E5%B7%A5%E7%A8%8B%E8%AF%A6%E6%83%85">https://oshwhub.com/13026918161/la3600_5</a></p><h1 id="视频讲解"><a href="#视频讲解" class="headerlink" title="视频讲解"></a>视频讲解</h1><iframe src="https://player.bilibili.com/player.html?aid=889584279&bvid=BV1VP4y1x74G&cid=383161951&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电子,设计,前级,HiFi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Ar-Sr-Na X 南宁十中】继续前行-2021高考加油！</title>
    <link href="/posts/0000-D-2021gk/"/>
    <url>/posts/0000-D-2021gk/</url>
    
    <content type="html"><![CDATA[<p>在南宁十中上津校区进行1星期的拍摄，捕捉高三学子最真实的一面</p><p>无论大风大雨，大家都在不断前行</p><p>感谢：南宁市第十中学提供场地与拍摄环境</p><p>明天就是高三学子们踏入战场的时刻，十年铸剑，只为炉火纯青，一朝出鞘，定当倚天长鸣！</p><p>待到金榜题名时，何人笑我曾痴狂；愿所有中高考学子都能无怨无悔，都能实现自己心里最大的梦想！</p><p>制作时长：17小时</p><p>个人网站<a href="http://www.arsrna.cn、www.arsrna.ltd/">www.arsrna.cn、www.arsrna.ltd</a></p><div id="player"></div><script src="https://player.dogecloud.com/js/loader"></script><script>var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1277,    vcode: '358b2023498c2e15',    autoPlay: false});</script>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【教程】纯前端做一个歌词显示的音乐播放器</title>
    <link href="/posts/08-1202L-08-1203K/"/>
    <url>/posts/08-1202L-08-1203K/</url>
    
    <content type="html"><![CDATA[<p>节目：[08-1202L&#x2F;08-1203K]：【教程】纯前端做一个歌词显示的音乐播放器</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/r7yxduv7vk.png" alt="效果"></p><h1 id="用到的文件："><a href="#用到的文件：" class="headerlink" title="用到的文件："></a>用到的文件：</h1><p>Bootstrap 4.6.0 CSS：<a href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css">https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css</a></p><p>一段音乐及这首歌的lrc歌词（只要带时间的都可以，这里用lrc举例）</p><p>浏览器</p><p>jquery（可选，为了查找元素更方便）：<a href="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js">https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js</a></p><h1 id="原理及实现："><a href="#原理及实现：" class="headerlink" title="原理及实现："></a>原理及实现：</h1><h2 id="音乐播放"><a href="#音乐播放" class="headerlink" title="音乐播放"></a>音乐播放</h2><p>通过html5的<code>&lt;audio&gt;</code>属性进行播放</p><p>这里为了方便不开发进度条和控制进度的工具，直接用各个浏览器渲染的audio标签</p><p>并且宽度设置为100%</p><pre><code>&lt;audio id=&quot;audio&quot; src=&quot;mp3/Flower - 秋風のアンサー.mp3&quot; controls style=&quot;width:100%&quot;&gt;&lt;/audio&gt;</code></pre><p><strong>注意，audio要指定一个id，方便后续获取</strong></p><h2 id="歌曲显示"><a href="#歌曲显示" class="headerlink" title="歌曲显示"></a>歌曲显示</h2><p>自己设置好</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/u0ek1jo0fc.png"></p><p>为了美观，我用Bootstrap的jumbotrom大块屏</p><pre><code>&lt;div class=&quot;jumbotron&quot;&gt;        &lt;h1 class=&quot;display-4&quot;&gt;秋風のアンサー&lt;/h1&gt;        &lt;p class=&quot;lead&quot;&gt;Flower&lt;/p&gt;&lt;/div&gt;</code></pre><h1 id="歌词显示（核心部分）"><a href="#歌词显示（核心部分）" class="headerlink" title="歌词显示（核心部分）"></a>歌词显示（核心部分）</h1><h2 id="预设置："><a href="#预设置：" class="headerlink" title="预设置："></a>预设置：</h2><p>因为LRC是timelrc 的格式，js不能读取，但js有个很相似的格式：json，因此我们可以把lrc转为json，类似于：</p><pre><code>[00:01.00]powered[00:02.00]by[00:03.00]Ar-Sr-Na</code></pre><pre><code>&#123;&quot;time&quot;:1,&quot;lrc&quot;:&quot;Powered&quot;&#125;,&#123;&quot;time&quot;:2,&quot;lrc&quot;:&quot;by&quot;&#125;,&#123;&quot;time&quot;:3,&quot;lrc&quot;:&quot;Ar-Sr-Na&quot;&#125;,</code></pre><p>所以先要处理lrc</p><p>用sublime打开lrc</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/v92y1vmqj6.png"></p><p>鼠标对准第一个中括号，按住中键不放，指针将会一直沿着你鼠标的方向选择，滑到最底部选中所有时间</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/0lhfuwmmxc.png"></p><p>Ctrl+C复制，在Excel里粘贴</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/xndrtzk5wl.png"></p><p>最好留两个单元格计算</p><p>分钟单元格输入函数：&#x3D;LEFT(C2,2)；C2是你的LRC时间所在单元格，下同</p><p>秒数单元格输入函数：&#x3D;RIGHT(C2,5)</p><p>这样分秒就分离了</p><p>然后将分钟+秒变成js能读取的时间</p><p>输入函数：&#x3D;分钟单元格*60+秒钟单元格</p><p>鼠标在单元格右下角下拖快速填充到底</p><p>同样用Sublime，在第一个”]”右中括号那里按住中键选择（注意最好选择进中键，不然对于有些空行的歌词会复制不了）</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/3wlg6vt78v.png"></p><p>粘贴进Excel</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/3foiexpflb.png"></p><p>然后替换 ] 为 空</p><p>复制具有时间和歌词的两列，去到Excel转json的网站</p><p><a href="https://www.bejson.com/json/col2json/">在线Excel、CSV转JSON格式-BeJSON.com</a></p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/lexcaixaw8.png"></p><p>转换完毕，接下来就是匹配歌词然后播放了</p><h2 id="匹配音频和歌词时间点"><a href="#匹配音频和歌词时间点" class="headerlink" title="匹配音频和歌词时间点"></a>匹配音频和歌词时间点</h2><p>这部分我想了很久，一直没办法找到方法，现在有个问题，我想让每句播放的时候来个动画，但是现在刷新频率太快，各位大佬支个招吧</p><p>html里添加个显示歌词的元素，我用span，并且用Bootstrap的字体</p><pre><code>&lt;span id=&quot;lrc&quot; class=&quot;lead&quot;&gt;&lt;/span&gt;</code></pre><p><strong>注意，文本要指定一个id，方便后续获取</strong></p><p>js里有个操作，currentTime</p><p>给歌词json赋值</p><pre><code>var lrcjson = &#123;&quot;time&quot;:261.96,&quot;lrc&quot;:&quot;ごめんね 好きなの Answer to you&quot;&#125;,&#123;......&#125;;</code></pre><p>获取音频和文字控件：</p><pre><code>var audio = document.getElementById(&#39;audio&#39;);var lrcHTML= document.getElementById(&#39;lrc&#39;);</code></pre><p>要匹配音频和歌词时间点，就要不断判断和遍历歌词数组</p><p>遍历数组可以这样来：</p><pre><code>for(i1=0;i1&lt;lrcjson.length;i1++) &#123;//每句歌词时间：lrcjson[i1].time//每句歌词：lrcjson[i1].lrc]</code></pre><h2 id="判断音频与对应歌词"><a href="#判断音频与对应歌词" class="headerlink" title="判断音频与对应歌词"></a>判断音频与对应歌词</h2><p>直接用audio.currentTime与上述遍历数组查找lrcjsoni1.time是行不通的，因为他们的时间点不可能完全精确，有0.01ms的误差都不行</p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/4df1i9zmn6.png" alt="浏览器获取的音频进度"></p><p><img src="https://res.arsrna.cn/blogs/08-1202L08-1203K/n5ghnu2m1r.png" alt="应该对应的歌词"></p><pre><code>&#123;&quot;time&quot;:122.09,&quot;lrc&quot;:&quot;不安なのよ だからお願い&quot;&#125;,</code></pre><p>所以只能用模糊搜索</p><h3 id="当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示"><a href="#当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示" class="headerlink" title="当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示"></a>当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示</h3><p>当音频播放时不断执行事件：</p><pre><code>audio.ontimeupdate=function(e) &#123; &#125;</code></pre><p>遍历歌词的同时不断查找匹配歌词</p><pre><code>for(i1=0;i1&lt;lrcjson.length;i1++) &#123;    if (audio.currentTime &gt; lrcjson[i1].timeout) &#123;   //歌词：lrcjson[i1].lrc    &#125;   &#125;</code></pre><p>播放的时候不断查找，不断遍历数组</p><pre><code>audio.ontimeupdate=function(e)&#123;for(i1=0;i1&lt;lrcjson.length;i1++) &#123;  if(audio.currentTime &gt; lrcjson[i1].timeout) &#123;  //歌词：lrcjson[i1].lrc   &#125; &#125;&#125;</code></pre><p>如果你用console输出，就会看到速度非常快，所以不适合在html创建元素或者document.write，只能用innerHTML不断刷新元素</p><p>前面已经讲到获取歌词元素了，所以直接可以对歌词操作：</p><pre><code>lrc.innerHTML=lrcjson[i1].lrc;</code></pre><h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><p>Javascript</p><pre><code>lrcjson = &#123;&quot;time&quot;:261.96,&quot;lrc&quot;:&quot;ごめんね 好きなの Answer to you&quot;&#125;,&#123;...&#125;lrc = document.getElementById(&#39;lrc&#39;);audio.ontimeupdate=function(e) &#123;for(i1=0;i1&lt;lrcjson.length;i1++) &#123;    if (audio.currentTime &gt; lrcjson[i1].time) &#123;        lrc.innerHTML=lrcjson[i1].lrc;    &#125;   &#125;&#125;</code></pre><p>HTML：</p><pre><code>&lt;div class=&quot;jumbotron&quot;&gt;    &lt;h1 class=&quot;display-4&quot;&gt;秋風のアンサー&lt;/h1&gt;    &lt;p class=&quot;lead&quot;&gt;Flower&lt;/p&gt;    &lt;span class=&quot;lead&quot; type=&quot;text&quot; id=&quot;lrc&quot;&gt;&lt;/span&gt;    &lt;br /&gt;    &lt;audio id=&quot;audio&quot; src=&quot;mp3/Flower - 秋風のアンサー.mp3&quot; controls style=&quot;width:100%&quot;&gt;&lt;/audio&gt;&lt;/div&gt;</code></pre><p>预览：</p><p><a href="https://codepen.io/arsrna/full/vYxyqaK">https://codepen.io/arsrna/full/vYxyqaK</a></p><h1 id="Powered-by-Ar-Sr-Na（www-arsrna-cn）"><a href="#Powered-by-Ar-Sr-Na（www-arsrna-cn）" class="headerlink" title="Powered by Ar-Sr-Na（www.arsrna.cn）"></a>Powered by Ar-Sr-Na（<a href="https://www.arsrna.cn/">www.arsrna.cn</a>）</h1><h1 id="到此，教程结束-未经允许禁止转载！"><a href="#到此，教程结束-未经允许禁止转载！" class="headerlink" title="到此，教程结束 未经允许禁止转载！"></a>到此，教程结束 未经允许禁止转载！</h1>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>我开发了一根进度条 [08-1202H/08-1203G]</title>
    <link href="/posts/08-1202H-08-1203G/"/>
    <url>/posts/08-1202H-08-1203G/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css"><link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css" rel="stylesheet"><link href="https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css" rel="stylesheet"><script src="https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js"></script><div id='test'></div><link rel="stylesheet" href="arloading.css"><script src="arloading.js"></script><p><code>&lt;button class=&quot;btn btn-primary&quot; onclick=&quot;arLoading(&#123;text:&#39;Ar-Sr-Na (SAO) Serverless Automatic Organization&#39;,color: &#39;#DDDDDD&#39;,id:&#39;test&#39;&#125;)&quot;&gt;</code>点我查看效果<code>&lt;/button&gt;</code></p><p>效果↑</p><p>地址： <a href="https://github.com/ArSrNa/ArUI-Progress">github</a> | <a href="https://gitee.com/arsrna/ArUI-Progress">gitee</a></p><h1 id="ArUI-Progress"><a href="#ArUI-Progress" class="headerlink" title="ArUI-Progress"></a>ArUI-Progress</h1><p>一根非常简单的进度条</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>必要模块：Bootstrap CSS，FontAwsome</p><pre><code class="html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css&quot;&gt;&lt;link href=&quot;https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css&quot; rel=&quot;stylesheet&quot;&gt;</code></pre><p>引入ArUI-Progress js与css：</p><pre><code class="html">&lt;link href=&quot;https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js&quot;&gt;&lt;/script&gt;</code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>首先在div里创建一个div，包含id</p><p><code>&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;</code></p><p>然后执行函数</p><pre><code class="JavaScript">arLoading(&#123;    text:&#39;Ar-Sr-Na SAO-Serverless Automatic Organization&#39;,    color: &#39;#DDDDDD&#39;,    id: &#39;test&#39;    size: &#39;3&#39;,    icon: &#39;fa-info-circle&#39;&#125;)</code></pre><p>其中：</p><table><thead><tr><th>字段</th><th>类型</th><th>描述</th><th>注意</th><th>默认值</th></tr></thead><tbody><tr><td>text</td><td>String</td><td>显示的文本，可以使用html格式，例如 <code>&quot;我永远喜欢御坂美琴&quot;或&quot;我永远喜欢御坂美琴&lt;br&gt;其他都是我小号</code>“</td><td>内置了 <code>&lt;h5&gt;</code>标签</td><td>&#x2F;</td></tr><tr><td>color</td><td>String</td><td>背景颜色，支持css格式</td><td>例如white或#66CCFF</td><td>white</td></tr><tr><td>id</td><td>String</td><td>创建进度条的控件id</td><td>仅支持DIV</td><td>&#x2F;</td></tr><tr><td>size</td><td>number&#x2F;String</td><td>图标大小</td><td>Fontawsome的fa-*x</td><td>3</td></tr><tr><td>icon</td><td>String</td><td>图标，Fontawsome的fa-xxxxx</td><td>仅支持FontAwsome图标</td><td>fa-info-circle</td></tr></tbody></table><h1 id="example"><a href="#example" class="headerlink" title="example"></a>example</h1><pre><code class="html">&lt;div id=&#39;test&#39;&gt;&lt;/div&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;arloading.css&quot;&gt;&lt;script src=&quot;arloading.js&quot;&gt;&lt;/script&gt;&lt;script&gt;arLoading(&#123;    text:&#39;Ar-Sr-Na SAO-Serverless Automatic Organization&#39;,    color: &#39;#DDDDDD&#39;,    id:&#39;test&#39;&#125;)&lt;/script&gt;</code></pre><h2 id="Powered-By-Ar-Sr-Na-云计算项目团队"><a href="#Powered-By-Ar-Sr-Na-云计算项目团队" class="headerlink" title="Powered By Ar-Sr-Na 云计算项目团队"></a>Powered By Ar-Sr-Na 云计算项目团队</h2>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>DDoS攻击者，感谢有你</title>
    <link href="/posts/08-1202G-08-1203E/"/>
    <url>/posts/08-1202G-08-1203E/</url>
    
    <content type="html"><![CDATA[<p>励志鸡汤不说，我们的故事可以看：<a href="https://www.arsrna.ltd/posts/SLA2020/">2020云计算SLA总结</a></p><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1277,    vcode: '1d570c4e069418c6',    autoPlay: false});</script><p><img src="https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png)"><br><img src="https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07135-sy.jpg_copwh"><br><img src="https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07134-sy.jpg_copwh"><br><img src="https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07142.JPG_copwh"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaServerless Learn-基础</title>
    <link href="/posts/%5B08-1202-08-1203%5DB/"/>
    <url>/posts/%5B08-1202-08-1203%5DB/</url>
    
    <content type="html"><![CDATA[<p>节目编号：[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p><h1 id="Ar-Sr-Na-Java-Serverless-Learn项目-基础"><a href="#Ar-Sr-Na-Java-Serverless-Learn项目-基础" class="headerlink" title="Ar-Sr-Na Java Serverless Learn项目-基础"></a>Ar-Sr-Na Java Serverless Learn项目-基础</h1><p>节目编号：[08-1202&#x2F;08-1203]B：Ar-Sr-Na Java Serverless Learn项目-基础</p><h2 id="教程介绍"><a href="#教程介绍" class="headerlink" title="教程介绍"></a>教程介绍</h2><p>本教程面向Serverless开发，不针对本地开发，意味着需要有较好Java基础，英语基础，熟悉逻辑关系，了解Serverless架构。</p><h2 id="教程初衷"><a href="#教程初衷" class="headerlink" title="教程初衷"></a>教程初衷</h2><p>在这个云计算盛行也是趋势的时代，本地函数带来的成本问题不占少数，尤其是当应用上线时，大量请求压榨服务器导致宕机，采购高性能服务器成本太高，所以Serverless出现了，效率更高，成本更低，扩展性，计算资源等层面具有众多优势，所以，它不香么？</p><p>创业路上并不是一帆风顺，我们也希望能帮助大家实现梦想，努力总比站在原地更接近成功！</p><h1 id="Serverless介绍"><a href="#Serverless介绍" class="headerlink" title="Serverless介绍"></a>Serverless介绍</h1><p>Serverless Computing，一种全新的函数架构，意味着无服务器，节省资源，也降低了成本。Serverless被称为FaaS（Function-as-a-Service），以平台即服务（PaaS）为基础，意味着需要一个平台来支撑函数服务。</p><p>本站建议使用腾讯云Serverless云函数服务<a href="https://console.cloud.tencent.com/scf/">https://console.cloud.tencent.com/scf/</a></p><h1 id="Java语言简介"><a href="#Java语言简介" class="headerlink" title="Java语言简介"></a>Java语言简介</h1><p>java是计算机编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。</p><p>Java功能强大，扩展性高，虽说在Java领域，专业的东西很多，未必一下子能理解完，</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>无论是张浩扬的QQ程序，up主的数据可视化，都以java为后端程序，当然<a href="https://github.com/ArSrNa/bilibiliData-TCV">bilibili数据可视化</a>这个是PHP的</p><h3 id="项目在不断完善中，希望大家多多支持：QQ群：1097347557"><a href="#项目在不断完善中，希望大家多多支持：QQ群：1097347557" class="headerlink" title="项目在不断完善中，希望大家多多支持：QQ群：1097347557"></a>项目在不断完善中，希望大家多多支持：QQ群：1097347557</h3><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="云端准备"><a href="#云端准备" class="headerlink" title="云端准备"></a>云端准备</h2><p>腾讯云账户</p><p>腾讯云秘钥ID与Key（必须放行组件的权限）</p><h2 id="本地机的准备"><a href="#本地机的准备" class="headerlink" title="本地机的准备"></a>本地机的准备</h2><p>NPM：<a href="https://www.npmjs.com/get-npm">npm | get npm (npmjs.com) </a>（这里就不放出教程了）</p><p>Serverless CLI：npm install -g serverless</p><p>教程：<a href="https://www.serverless.com/cn/framework/docs/quickstart/installation">下载安装 (serverless.com)</a></p><h1 id="开始第一个无服务器程序"><a href="#开始第一个无服务器程序" class="headerlink" title="开始第一个无服务器程序"></a>开始第一个无服务器程序</h1><h2 id="云端配置函数"><a href="#云端配置函数" class="headerlink" title="云端配置函数"></a>云端配置函数</h2><p>打开腾讯云的<a href="https://console.cloud.tencent.com/scf/">云函数控制台</a></p><p><img src="https://res.arsrna.cn/gg4ureyez9.png"><br>点击函数服务</p><p><img src="https://res.arsrna.cn/93gzdy3koa.png"><br>新建一个函数</p><p><img src="https://res.arsrna.cn/wi8vcnc8es.png"><br>输入名称，语言选择Java，点击下一步</p><p><img src="https://res.arsrna.cn/f3xxq8ogro.png"><br><img src="https://res.arsrna.cn/agmh0ztnjg.png"><br>要注意此处的执行方法，它定义了调用云函数时需要从哪个文件中的哪个函数开始执行。</p><p>如上图是example.Hello::mainHandler</p><p>所以函数就得这么设置，从mainHandler开始执行：</p><pre><code class="java">public String mainHandler(KeyValueClass kv)    &#123;       return String.format(&quot;Hello World&quot;);    &#125;</code></pre><p>创建完成后，需要上传函数</p><p><img src="https://res.arsrna.cn/yyy8ijr3a8.png"><br>需要把源代码改为index.java，然后打包为zip上传，就完成了</p><h2 id="本地配置函数"><a href="#本地配置函数" class="headerlink" title="本地配置函数"></a>本地配置函数</h2><p>如果想要本地调试再部署到云端更方便些，可以使用Serverless.yml和.env文件</p><p>它类似这样：</p><pre><code class="yaml">component: websitename: websiteorg: test # (可选) 用于记录组织信息，默认值为您的腾讯云账户 APPIDapp: JavaLearn # (可选) 该 website 应用名称stage: dev # (可选) 用于区分环境信息，默认值是 dev</code></pre><p>他声明了用到的组件，需要的云产品，以及环境，各种方便辨认的信息</p><table><thead><tr><th align="left">名称</th><th align="left">必要性</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">component</td><td align="left">√</td><td align="left">引用组件名称</td></tr><tr><td align="left">name</td><td align="left">√</td><td align="left">组件实例名称</td></tr><tr><td align="left">org</td><td align="left">可选</td><td align="left">组织信息（默认是你腾讯云APPID）</td></tr><tr><td align="left">app</td><td align="left">可选</td><td align="left">改xxx组件的应用名称</td></tr><tr><td align="left">stage</td><td align="left">可选</td><td align="left">开发环境，用于区分</td></tr></tbody></table><p>例如我要创建一个网站组件，需要一个产品来存储我的网站资源，毕竟这是Serverless，不可能引用Server服务器组件，所以能存储网站并且部署网站的只有云开发和COS，云开发的能力过于广泛，集成了各种生态资源，所以建议使用COS对象存储的静态网站托管</p><p>此时只需要在yml中加上：</p><pre><code class="yaml">inputs:  bucket: my-bucket  region: ap-guangzhou</code></pre><p>其中：</p><table><thead><tr><th align="left">名称</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">bucket</td><td align="left">存储桶的名称</td></tr><tr><td align="left">region</td><td align="left">存储桶地域</td></tr></tbody></table><p>最终输出地址就为bucket-appID.cos-website.region.myqcloud.com（部署后生效）</p><p>在该目录下打开命令行，输入serverless deploy，登录后即可部署完成</p><p>如果还需要部署其它的配置，例如https等，可以参照以下实例</p><pre><code class="yaml">inputs:  src:    src: ./    index: index.html    # dist: ./dist    # hook: npm run build    # websitePath: ./  region: ap-hongkong  bucketName: javalearn  protocol: http</code></pre><p>定义上传的子目录：src<br>定义主页：index<br>访问协议：protocol</p><p>如果不想每次登录，可以新建.env文件，输入你的腾讯云秘钥</p><pre><code class="yaml">TENCENT_SECRET_ID=xxxxxxxxxxTENCENT_SECRET_KEY=xxxxxxx</code></pre><p><strong>注：腾讯云对的秘钥有关账户和资产安全，不要轻易透露，Deploy的时候会自动忽略.env文件不上传，但是github不一样！切记请不要透露个人的ID和KEY</strong></p><h2 id="部署函数"><a href="#部署函数" class="headerlink" title="部署函数"></a>部署函数</h2><p>在有Serverless.yml的目录下打开命令行</p><p>键入<strong>serverless deploy</strong>或<strong>sls deploy</strong>（注，Powershell中不能使用sls）</p><p>访问输出的地址，就部署完毕了</p><h1 id="ServerlessのApplication"><a href="#ServerlessのApplication" class="headerlink" title="ServerlessのApplication"></a>ServerlessのApplication</h1><h2 id="OCR文字识别"><a href="#OCR文字识别" class="headerlink" title="OCR文字识别"></a>OCR文字识别</h2><h2 id="全栈Web部署"><a href="#全栈Web部署" class="headerlink" title="全栈Web部署"></a>全栈Web部署</h2><p>Ar-Sr-Na的个人网站主要语言为Html，其次是PHP，JavaScript</p><h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><h2 id="文档更新"><a href="#文档更新" class="headerlink" title="文档更新"></a>文档更新</h2><p>2020-5-3 项目开始</p><p>2020-5-4 Ar-Sr-Na加入计划</p><p>2020-6-10 java.arsrna.cn建成</p><p>2020-6-18 文章发布</p><p>2021-1-1 ServerlessSSL生效</p><p>2021-2-1 文章更新</p><p>2021-2-2 内容优化，结构更新，新增章节：准备；开始第一个无服务器程序</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java,学习,Serverless,技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于QQ群内“被踢出本群” XML卡片深入研究</title>
    <link href="/posts/%5B08-1202-08-1203%5DA/"/>
    <url>/posts/%5B08-1202-08-1203%5DA/</url>
    
    <content type="html"><![CDATA[<p>节目编号：[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p><p><em>声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！</em></p><p>以下是破解时直播录像：</p><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1277,    vcode: '2db703b20822d6c7',    autoPlay: false});</script><p>[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p><p>就在昨天，某些群突然看到“您已被移出本群”之类的消息，直接被震惊到了</p><p>结果一进去，消息是“群友捕捉术？”</p><p><em><strong>声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！</strong></em></p><hr><h1 id="原理及分析"><a href="#原理及分析" class="headerlink" title="原理及分析"></a>原理及分析</h1><p>要破解就先知道原理下手，如果你在一些平台转发给QQ好友过一些东西，也会发现这类型的消息也是个卡片，不是链接什么的，点开后有可能是小程序，一个弹窗，一个页面等等，而这次事件也是同性质的卡片。</p><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>卡片消息有很多种，打卡，作业，投票，小程序，分享，红包，语音等等等等繁多种类，若不确定就无法下手，所以就得用“外挂”的方式进行破解</p><h1 id="破解全过程："><a href="#破解全过程：" class="headerlink" title="破解全过程："></a>破解全过程：</h1><p>准备材料：Cheat Engine作弊器；Sublime富文本编辑器；QQ以及诈骗卡片</p><p>为了不影响群友，我用自己的小号和自己开了个群</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/br34rmf606.png"><br>然后对这个群进行侦听</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/lli4tbezrt.png"><br>把这个诈骗卡片转发</p><p>然后CE修改器里搜索卡片的关键词（由于电脑看不到卡片内容，只能使用手机辅助）</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/4qe4yi25zj.png"></p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/976rvgm34.png"><br>把所有值全部修改</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/aqgsp7yxwl.png"><br>然后切回那个群的QQ窗口</p><p>会发现有些值已经恢复</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/2wnwwcblzx.png"><br>再把这个卡片继续转发，手机上查看内容是已经被改变了的，然后再在CE里再次搜索刚刚改变的值</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/zyba5zhqfh.png"><br>同样全部修改，不断搜索最初的那个消息值，会每次改每次变，就不是，如果改了不变的，就是代码所在的内存区了</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/7aa9o636s5.png"><br><strong>1150EABC，查看内存</strong></p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/txl8u07p2a.png"><br>搜索字符的内存值</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/igrhtotofc.png"><br>慢慢翻，直到有?xml的标识出现（记得右边要utf8显示）</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/nzcd4fk14n.png"><br>把值复制下来，16进制转字符</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/7or6s2q4tz.png"><br>代码如下：</p><pre><code class="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;&lt;msg serviceID=&quot;1&quot; templateID=&quot;-1&quot; action=&quot;web&quot; brief=&quot;公安局已介入&quot; sourceMsgId=&quot;0&quot; url=&quot;&quot; flag=&quot;0&quot; adverSign=&quot;0&quot; multiMsgFlag=&quot;0&quot;&gt;  &lt;item layout=&quot;2&quot; advertiser_id=&quot;0&quot; aid=&quot;0&quot;&gt;    &lt;title&gt;公安局已加入该群&lt;/title&gt;    &lt;summary&gt;公安局已开始监控聊天&lt;/summary&gt;  &lt;/item&gt;  &lt;source name=&quot;中国刑警大队已介入，请规范聊天&quot; icon=&quot;&quot; action=&quot;&quot; appid=&quot;0&quot;/&gt;&lt;/msg&gt;</code></pre><p>是一个很标准的xml格式</p><p>拆开分析：</p><pre><code class="xml">&lt;?xml version=&quot;1.0&quot;encoding=&quot;utf-8&quot;standalone=&quot;yes&quot;?&gt;&lt;msg serviceID=&quot;1&quot; templateID=&quot;-1&quot;action=&quot;web&quot;brief=&quot;公安局已介入&quot;sourceMsgId=&quot;0&quot;url=&quot;&quot;flag=&quot;0&quot;adverSign=&quot;0&quot;multiMsgFlag=&quot;0&quot;&gt;  &lt;item layout=&quot;2&quot;       advertiser_id=&quot;0&quot;       aid=&quot;0&quot;&gt;    &lt;title&gt;公安局已加入该群&lt;/title&gt;    &lt;summary&gt;公安局已开始监控聊天&lt;/summary&gt;  &lt;/item&gt;  &lt;source       name=&quot;中国刑警大队已介入，请规范聊天&quot;       icon=&quot;&quot;       action=&quot;&quot;       appid=&quot;0&quot;/&gt;&lt;/msg&gt;</code></pre><p><code>&lt;msg&gt;</code>构成了开头，有点英语基础的看得懂里面的属性的</p><table><thead><tr><th align="left">值</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">serviceID&#x3D;”1”</td><td align="left">应该是服务ID，告诉这是卡片</td></tr><tr><td align="left">templateID&#x3D;”-1”</td><td align="left">模板</td></tr><tr><td align="left">action&#x3D;”web”</td><td align="left">动作，点击后会执行的内容，此处为web</td></tr><tr><td align="left">brief&#x3D;”公安局已介入”</td><td align="left">也就是在主页看到群内简要消息，类似[QQ红包]这种</td></tr><tr><td align="left">sourceMsgId&#x3D;”0”<code>&lt;br&gt;</code>flag&#x3D;”0”   adverSign&#x3D;”0”<code>&lt;br&gt;</code>multiMsgFlag&#x3D;”0”</td><td align="left">未知</td></tr><tr><td align="left">url&#x3D;””</td><td align="left">点击后执行web的URL</td></tr></tbody></table><p>Layout，是个布局，也就是卡片内的布局</p><pre><code class="xml">&lt;title&gt;公安局已加入该群&lt;/title&gt;&lt;summary&gt;公安局已开始监控聊天&lt;/summary&gt;</code></pre><p>这两个8说了，标题和内容，和html一样好读的</p><pre><code class="xml">&lt;source       name=&quot;中国刑警大队已介入，请规范聊天&quot;       icon=&quot;&quot;       action=&quot;&quot;       appid=&quot;0&quot;/&gt;</code></pre><p>source，就是源，应该是显示图标之类的</p><p>icon为图标，action为执行的动作，与前面的相同</p><hr><h1 id="那我要怎么发送这种消息呢？"><a href="#那我要怎么发送这种消息呢？" class="headerlink" title="那我要怎么发送这种消息呢？"></a>那我要怎么发送这种消息呢？</h1><p>直接发xml显然是不行的</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/7wepog3evv.png"></p><p>这时就需要修改内存了</p><p>还记得刚刚是怎么找到那段对话的源码吗，就是不断修改，不断转发，转发过去的就是修改后的内容</p><hr><p>由于电脑是看不到这种消息的，所以就发一个能看到的，例如分享</p><p><img src="https://res.arsrna.cn/blogs/xmlCard/pics/r7csyw3hmb.png"></p><p>按上面那个方法修改</p><p>只不过把值改为xml代码</p><p>然后再回到qq转发那个卡片，就完成了</p><p>（不过不保障100%成功，只提供技术而已，分析原理）</p><hr><p>发送的原理也是更改内存，已经知道了卡片的本质，是一段xml，无可厚非，这些卡片本来是引导用户更方便地获取信息，但一些人缺利用这个功能诈骗，而且还在更新换代，甚至有了无法撤回的版本，跟踪ip的版本</p><p>所以各位群友们，这类信息慎点，一定要确定安全，甚至和普通消息混淆的也有，显然不可能每次看消息，抢红包都要开CE，针对这种情况，MIUI12的模糊定位和隐私保护就起到很关键作用，而QQ在这方面也很完善，例如刚刚的方法，我试了10次都失败了，估计是发现bug了吧，发送后是看不到的，不论是手机还是电脑</p><p>最后，恪守道德遵守法律是每位公民的义务</p><hr><h2 id="到此，教程结束"><a href="#到此，教程结束" class="headerlink" title="到此，教程结束"></a>到此，教程结束</h2><h3 id="本教程在bilibili，企鹅号，腾讯云-社区，www-arsrna-ltd个人博客发布，未经允许禁止转载！"><a href="#本教程在bilibili，企鹅号，腾讯云-社区，www-arsrna-ltd个人博客发布，未经允许禁止转载！" class="headerlink" title="本教程在bilibili，企鹅号，腾讯云+社区，www.arsrna.ltd个人博客发布，未经允许禁止转载！"></a>本教程在bilibili，企鹅号，腾讯云+社区，<a href="http://www.arsrna.ltd个人博客发布,未经允许禁止转载!/">www.arsrna.ltd个人博客发布，未经允许禁止转载！</a></h3>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>MMD转Blender、C4D教程- Blender插件篇</title>
    <link href="/posts/%5B08-120308-010308-0300%5DA/"/>
    <url>/posts/%5B08-120308-010308-0300%5DA/</url>
    
    <content type="html"><![CDATA[<p>Ar-Sr-Na教程 3D&#x2F;MMD项目文章系列：</p><p><strong>Vol1 [08-1203&#x2F;08-0103&#x2F;08-0300]A-Cats插件篇、MMD Bridge篇</strong></p><p>Vol2 [08-1203&#x2F;08-0103&#x2F;08-0300]C-C4D插件、MMD Bridge篇</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/w5jh2rgmqv.png"></p><h1 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a><strong>测试环境</strong></h1><p>Blender：2.81A，2.82</p><p>炫云客户端：6.0.20.11.21608</p><p>Cats：0.18.0</p><p>MikuMikuDance：Bridge</p><p>MikuMikuMoving：2014</p><h1 id="渲染环境"><a href="#渲染环境" class="headerlink" title="渲染环境"></a>渲染环境</h1><p>炫云10集群机器</p><p>Ar-Sr-Na&amp;腾讯云 内存型M5服务器（Cascade Lake 8255C -32C 256G）</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/o64f4vi62m.png"></p><hr><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>必须：Blender，Cats插件</p><p>Cats插件下载地址：<a href="https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip">https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip</a></p><p>Blender下载地址：<a href="https://www.blender.org/download/">https://www.blender.org/download/</a></p><p>不必：MikuMikuMoving，MikuMikuDance</p><p>更多下载链接见文末</p><hr><h1 id="方案一：纯Blender操作"><a href="#方案一：纯Blender操作" class="headerlink" title="方案一：纯Blender操作"></a>方案一：纯Blender操作</h1><p>适合在Blender建模型，做动画的用户</p><p>优点：占用资源少，耗时短、文件产生量少，方便修改材质、无需太多软件</p><p>缺点：Blender祖传撤销卡顿，但是在2.83已经改进（而我还是2.82啊啊啊啊，渲染农场还是不够顶）、部分模型的骨骼和动作无法完全配对、物理设置会很复杂，还可能出现模型与物理无法配对的情况</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/jsxe7i58qh.png"></p><p>下载好插件，在Blender打开，如图操作</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/69bl30bwa5.png"></p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/gi7gymgdts.png"></p><p>然后导入</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/eput10sdw2.png"></p><h1 id="导入模型"><a href="#导入模型" class="headerlink" title="导入模型"></a>导入模型</h1><p>如果部分材质变红</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/brs0322jgf.png"><br>在侧边展开，杂项栏里的MMD Display中Toon和Sphere的选项关闭</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/6r72z25d7w.png"><br>然后检查下材质有没有其他问题</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png"><br>（blender的奇妙结构）</p><h1 id="人物动作"><a href="#人物动作" class="headerlink" title="人物动作"></a>人物动作</h1><p>选上模型，然后文件-导入-Miku Miku Dance Motion，选择动作的VMD</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/4f389s7oqj.png"><br>播放检查骨骼有没有对上，如果出现常见问题，<strong>在文章后面有解决办法</strong></p><p><strong>物理和其它在文章后面介绍</strong></p><h1 id="摄像机"><a href="#摄像机" class="headerlink" title="摄像机"></a>摄像机</h1><p>在3D视图的窗口点击添加-相机</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png"><br>然后单击这个相机</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/uglns5rjmn.png"><br>文件-导入-Miku Miku Dance Motion，选择相机动作的VMD文件</p><p><strong>关于摄像机效果和常见问题见文章后面</strong></p><hr><h1 id="方案二：MMD-Bridge"><a href="#方案二：MMD-Bridge" class="headerlink" title="方案二：MMD Bridge"></a>方案二：MMD Bridge</h1><p>优点：万能的方案，C4D也能使用，集成动画，物理等方方面面</p><p>缺点：占资源，烧配置，修改困难，复杂，耗时间</p><p>如果出现骨骼对不上或者动画鬼畜等在Blender插件中无法解决的问题</p><p>就必须使用其它方案了</p><p>需要资源：MikuMikuDance Bridge版，Blender</p><p><strong>MMD Bridge解压到必须是纯英文的路径！！！</strong></p><p>（所有资源可在文末的链接下载）</p><p>打开MMD（我也不知道跑哪了）</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/dv64auawte.png"><br>把模型动作摄像机导入，不要导入场景（如果没反应就用普通版本的MMD做好保存）</p><p>然后在MMD Bridge这里设置好参数</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/ko9q9gb048.png"><br>举个例子：</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/5tcoe6k0pc.png"><br>然后在分辨率设置把分辨率改低，因为要导出，太大了占空间，这里的分辨率不影响后面的任何操作，只影响性能</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/t2yx4a7p81.png"></p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/1tej227hjc.png"><br>最后到处视频，选个路径</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/uudc5ik1dc.png"></p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/gu3whz008u.png"><br>跟刚才的参数一样</p><p>点OK后会卡几秒，然后弹几个窗确定就行</p><p>完毕之后在MMD Bridge的目录下会生成out文件夹</p><p>里面有.abc和材质文件</p><p>我们只要.abc</p><p>把整个out文件夹移动到一个地方（任意）</p><p>打开Blender把.abc导入</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/td86h4j5g5.png"></p><p>同样的检查材质，如果出现问题就用out目录的xxxx Texturexxx文件夹里面的脚本</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/prp5lngj0z.png"></p><p>然后就完成了</p><hr><h1 id="常见问题及效果"><a href="#常见问题及效果" class="headerlink" title="常见问题及效果"></a>常见问题及效果</h1><h1 id="镜头景深"><a href="#镜头景深" class="headerlink" title="镜头景深"></a>镜头景深</h1><p>选择摄像机</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/b5natu6hzz.png"></p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/q2fuhit8uc.png"></p><p>其他不用设置，不多介绍</p><h1 id="2-材质发光"><a href="#2-材质发光" class="headerlink" title="2.材质发光"></a><strong>2.材质发光</strong></h1><p>选上对应材质</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/9bwzfnoccr.png"><br>某个窗口切换为材着色器编辑器</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/ff23ct2ose.png"><br>添加-着色器-自发光</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/1q0qwm9mf5.png"><br>设置好参数，把输出的体积连到自发光上</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/ic7hk8rl22.png" alt="emmmmmm...爆了">了</p><p>emmmmm…爆了…正常操作</p><p>自行探索嗷</p><hr><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p><strong>物理效果</strong></p><p><strong>方案1：Blender自带</strong></p><p>选上模型，然后</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/m78yyel79a.png"><br>当然，部分毛发不会计算进去，很硬</p><p><a href="https://docs.blender.org/manual/zh-hans/2.91/physics/baking.html">https://docs.blender.org/manual/zh-hans/2.91/physics/baking.html</a></p><hr><p><strong>方案2：MMM</strong></p><p>模型，动作导入，</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/q9crq5eo9q.png"><br>导出动作</p><p><img src="https://res.arsrna.cn/blogs/MMDtoBlender/pic/a9pwtrnt0p.png"></p><p>把ALL前面的所有√勾上</p><p>选择个路径导出</p><p>再到Blender导入</p><hr><p><strong>终极方案：换方案</strong></p><p><strong>直接用.abc吧，没救了</strong></p><hr><h1 id="相关下载"><a href="#相关下载" class="headerlink" title="相关下载"></a>相关下载</h1><p>BlenderWindows：<a href="https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip">https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip</a></p><p>MMDBridge：<a href="https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip">https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip</a></p><p>MMM：<a href="https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip">https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip</a></p><p>Cats插件：<a href="https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip">https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip</a></p><hr><h1 id="到此，教程结束"><a href="#到此，教程结束" class="headerlink" title="到此，教程结束"></a><strong>到此，教程结束</strong></h1><p>本教程在bilibili，企鹅号，腾讯云+社区，<a href="http://www.arsrna.ltd个人博客发布,未经允许禁止转载!/">www.arsrna.ltd个人博客发布，未经允许禁止转载！</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MMD,3D,教程,物理,C4D,Blender</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020云计算项目总结-全年年度服务状态（SLA）一览</title>
    <link href="/posts/SLA2020/"/>
    <url>/posts/SLA2020/</url>
    
    <content type="html"><![CDATA[<p>首先先来点BGM</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=550 height=86 src="//music.163.com/outchain/player?type=2&id=471968263&auto=1&height=66"></iframe><p><strong>2020，我们经历了DDoS，经历了合作，以及各种反对的声音</strong></p><p>#DDoS<br>就在2020-2-20，遭遇了运营两年半来最严重的DDoS，截止6月，攻击流量为14Tb，损失1000余元，浪费了2个月时间<br>事已至今，还未真正调查并且惩处作案团伙</p><p>#合作<br>4月份全国的疫情有所好转，而疫情期间大家都不得不依赖云计算<br>而我也是在年初学习了基本的云计算<br>开发SaaS，PaaS，从基础设施到应用<br>以及带来了革命性的创新<br>例如Serverless化，生态渲染，云+社区优质作者、年终盛典提名<br>2020-03-31 加入了自媒体分享计划<br>直到今天，我的社区影响力排名464位</p><p><img src="https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png" alt="影响力巨大"></p><p>这一年也是各种奖，小至捡垃圾一等奖，大到中科院的大奖，腾讯云+社区Top100，云点播、直播最佳评测奖等等<br>因为疫情，我们才得以发展，才有平台发展</p><p>#反对<br>身边的人也在反对我做云计算这事情，不是投资大，他们认为没有用处<br>当然，也对，一般人用不到128C512G这样规格的云渲染业务，用不到上百亿G的存储服务，更用不到TBaaS区块链<br>但是，捣鼓云计算，写程序的过程中，能学习到无数的知识，以前我对JS很反感，但如今随便能写交互JS<br><em><strong>只要感兴趣就好</strong></em></p><p>#进入主题，SLA<br><em>数据主要来源于Uptime Robot和腾讯云图与Serverless对接的API</em><br><img src="https://res.arsrna.cn/blogs/SLA2020/MCECS.png" alt="史上最差"><br>SLA-Service-Level Agreement的缩写，意思是服务等级协议<br>通过这个数据可以反馈出服务质量<br>那么Ar-Sr-Na网站，云计算项目的SLA如何呢？<br>我把全年的数据整合在了几张图里</p><p><img src="https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%871.JPG" alt="网站项目"><br><img src="https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%872.JPG" alt="云计算项目"><br><img src="https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%873.JPG" alt="云计算项目"><br><img src="https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%874.JPG" alt="视频项目"><br><img src="https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%875.JPG" alt="STAFF"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>建站两周年，运行三周年庆祝</title>
    <link href="/posts/3-year-birth/"/>
    <url>/posts/3-year-birth/</url>
    
    <content type="html"><![CDATA[<p>还记得当初的主页吗？</p><p><img src="https://i.loli.net/2018/09/09/5b94a94363cc9.png" alt="2018"></p><p>还记得当初的ID吗？</p><p><img src="https://i.loli.net/2018/09/09/5b94a94695e9a.png" alt="2018id"></p><p>当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0</p><h1 id="艰辛"><a href="#艰辛" class="headerlink" title="艰辛"></a>艰辛</h1><p>2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了</p><h2 id="那我为什么要浪费这个时间呢"><a href="#那我为什么要浪费这个时间呢" class="headerlink" title="那我为什么要浪费这个时间呢"></a>那我为什么要浪费这个时间呢</h2><p>事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见</p><p>到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器</p><h3 id="但这难不倒我"><a href="#但这难不倒我" class="headerlink" title="但这难不倒我"></a>但这难不倒我</h3><p>2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver</p><p>2018年，网站的雏形有了，可是没有载体给他在互联网传播</p><p>于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）</p><p>2018-8-6 网站js，css，html完成</p><p>2018-8-8 第一轮测试，开放网页</p><p>……</p><p>Beta0.1,0.2,0.3……版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布</p><p>我把网址发给了同学，发给了朋友，发给了当年的老师</p><h1 id="超越"><a href="#超越" class="headerlink" title="超越"></a>超越</h1><p>得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络</p><p>于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名</p><p>2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图</p><p>19年上旬，因为了解了wordpress，所以建了个个人博客，<a href="http://www.saten.top,现在已经改为www.arsrna.ltd/">www.saten.top，现在已经改为www.arsrna.ltd</a></p><p>因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始</p><p>年底UI变换（Release-5.0,6.0……)，功能增加，主页变得越来越漂亮了，长得就像现在这样</p><p><img src="https://res.arsrna.cn/blogs/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png" alt="2020"></p><p>各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework……</p><h1 id="初心"><a href="#初心" class="headerlink" title="初心"></a>初心</h1><p>为什么要建站？兴趣吗？是的</p><p>成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道</p><p>写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容</p><p>从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似</p><p>云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们<br><img src="https://arsrnasite.cn-gd.ufileos.com/1.webp"></p><p>服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验</p><p>为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验</p><p>这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：</p><p>网站站长，前端，后端，应用支持：Ar-Sr-Na</p><p>技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云</p><p>网站移动端优化：Ar-Sr-Na，WhiteNX</p><p>Serverless架构支持：阿里云，腾讯云</p><p>测试，研发：Ar-Sr-Na</p><p>数据支持：微软去哦怕</p><p>成长支持：所有正在打开这个页面的小伙伴</p><p><img src="https://res.arsrna.cn/blogs/3-year-birth/ApStaff.jpg"></p><h3 id="感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！"><a href="#感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！" class="headerlink" title="感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！"></a>感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！</h3><h1 id="感谢大家的支持！"><a href="#感谢大家的支持！" class="headerlink" title="感谢大家的支持！"></a>感谢大家的支持！</h1>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Ar-Sr-Na 科普 Vol024 如何打造爆款Cos-服装篇</title>
    <link href="/posts/vol024/"/>
    <url>/posts/vol024/</url>
    
    <content type="html"><![CDATA[<h1 id="原视频："><a href="#原视频：" class="headerlink" title="原视频："></a>原视频：</h1><iframe src="https://player.bilibili.com/player.html?aid=711760985&bvid=BV1iD4y127iS&cid=227681241&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p><a href="https://www.bilibili.com/video/BV1iD4y127iS" target="_blank">点击进入</a></p><h1 id="文案"><a href="#文案" class="headerlink" title="文案"></a>文案</h1><p>还原动漫角色的行为，称为角色扮演——Cos或Cosplay<br>“cosplay”原指Costume Play，译为服饰扮演<br>最初目的是商业展演，具有代表性的是美国迪士尼公司<br>为了吸引游客，公司专门请来工作人员穿上米老鼠的服饰供游客拍照<br>但当年的服饰相对粗糙，缺乏美感<br>如今随着纺织技术的不断完善，制作这类服饰的成本不断降低<br>且ACGN线下市场（说人话就是漫展）的不断扩大，Cosplay也从商业走进了日常生活<br>人们对Cosplay的要求也就越来越多，似乎对Cosplay的上限没有了天花板</p><p>想要cos一位角色，不仅仅要完成服装道具的还原<br>角色关系，表情神态，性格等都要做一次全方位的了解<br>光是衣服制作，都要耗上难以想象的精力</p><p>up主咨询了 喵手喵脚工作室 定制服装的价格<br>如果要还原度较高的服饰或者道具，价格在两千元上下<br>简单的道具也要700起步</p><p>以你妈（哔~~~HD彩条</p><p>以芙兰达为例，要考虑到头饰长什么样，什么颜色<br>假毛什么颜色，长发还是短发<br>衣服长袖还是短袖，内衣什么颜色等等等等<br>看视频自行体会</p><p>首先根据图片设计服装的颜色，大小，形状<br>按照尺寸大小制作出一张裁片图<br>然后是寻找材料，剪裁，缝制<br>剪裁需要把衣服的面料按要求剪切为衣片<br>缝制对于服装更为重要<br>这两步需要一定的专业水平，不然只能依据经验<br>这时候衣服已经成型，还需要锁眼钉扣完成封装</p><p>抛开制作难题外，还要解决版权问题<br>对于个人爱好者来说，可以不用担心<br>因为coser的行为给原作品的宣传提供了新途径<br>试问哪个小男孩的作品不想出名呢？<br>除非是对原作品歪曲造成了影响，版权方才会主动出击</p><p>定制衣服那么贵不是没有道理的，除了制作麻烦<br>其中还可能会用到一些专利<br>例如制作工序和设计方法<br>而且这套衣服设计出来可能只为你一个人制作，是独一无二的<br>开模量很小，成本自然很高</p><p>总之，Cosplay不仅仅是一个爱好，更是考验动手能力的平台<br>这期仅介绍了服装，关于道具之类的，关注我，下期将会继续介绍</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>level upper原音频</title>
    <link href="/posts/level-upper/"/>
    <url>/posts/level-upper/</url>
    
    <content type="html"><![CDATA[<h2 id="BGM版"><a href="#BGM版" class="headerlink" title="BGM版"></a>BGM版</h2><p><audio id="audio" controls="" src="https://res.arsrna.cn/audio/levelupper/Level_Upper_(BGM).wav"></audio></p><h2 id="刺耳版"><a href="#刺耳版" class="headerlink" title="刺耳版"></a>刺耳版</h2><p><audio id="audio" controls="" src="https://res.arsrna.cn/audio/levelupper/Level_Upper.mp3"></audio></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>航天精神</title>
    <link href="/posts/%E8%88%AA%E5%A4%A9%E7%B2%BE%E7%A5%9E/"/>
    <url>/posts/%E8%88%AA%E5%A4%A9%E7%B2%BE%E7%A5%9E/</url>
    
    <content type="html"><![CDATA[<p>中国航天起源于1956年。经过几十年几代航天人的不断努力和奋斗，中国航天取得了十足的发展，走出了一条具有鲜明中国特色的发展道路。中国航天人牢记党和人民的重托，满怀为国争光的雄心壮志，自强不息，顽强拼搏，团结协作，开拓创新，取得了一个又一个辉煌成果，铸就了中国航天人特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。</p><p>1956年10月8日，航天科技集团公司的前身-国防部第五研究院正式成立。根据聂荣臻副总理的提议，经毛泽东主席、周恩来总理批准，确定国防部五院的建院方针是“自力更生为主，力争外援和利用资本主义国家已有的科学成果”。“自力更生”精神孕育了我国最初的航天精神。1986年底，当时的航天工业部党组对航天精神进行了提炼和归纳，提出了“自力更生、大力协同、尊重科学、严谨务实、献身事业、勇于攀登”的航天传统精神。以后根据聂荣臻副总理倡导的”自力更生、艰苦奋斗、大力协同、无私奉献”的精神，结合航天科技工业的具体特点，对航天传统精神作了新的概括和提炼，表述为“自力更生、艰苦奋斗、大力协同、无私奉献、严谨务实、勇于攀登”。</p><p>1999年9月18日，在建国50周年前夕，中共中央、国务院、中央军委在北京隆重召开了表彰为研制“两弹一星”做出突出贡献的科技专家大会。江泽民同志在会上提出并精辟阐述了在“两弹一星”研制过程中形成的“两弹一星”精神，这就是“热爱祖国、无私奉献、自力更生、艰苦奋斗、大力协同，勇于登攀”。</p><p>2003年11月7日，在中共中央、国务院、中央军委召开的庆祝我国首次载人航天飞行圆满成功大会上，胡锦涛总书记指出， 伟大的事业孕育伟大的精神。在长期的奋斗中，我国航天工作者不仅创造了非凡的业绩，而且铸就了特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。</p><p>2005年11月26日，党中央、国务院、中央军委在人民大会堂隆重举行庆祝神舟六号载人航天飞行圆满成功大会。胡锦涛总书记把载人航天精神进一步概括为：热爱祖国、为国争光的坚定信念，勇于登攀、敢于超越的进取意识，科学求实、严肃认真的工作作风，同舟共济、团结协作的大局观念和淡泊名利、默默奉献的崇高品质。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>博客全站迁移至Serverless架构</title>
    <link href="/posts/%E5%8D%9A%E5%AE%A2%E5%85%A8%E7%AB%99%E8%BF%81%E7%A7%BB%E8%87%B3Serverless%E6%9E%B6%E6%9E%84/"/>
    <url>/posts/%E5%8D%9A%E5%AE%A2%E5%85%A8%E7%AB%99%E8%BF%81%E7%A7%BB%E8%87%B3Serverless%E6%9E%B6%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="博客全站迁移至Serverless架构"><a href="#博客全站迁移至Serverless架构" class="headerlink" title="博客全站迁移至Serverless架构"></a>博客全站迁移至Serverless架构</h1><p>2020 8 3，服务器即将到期，这台服务器将会是最后一台服务器，服务器IaaS传统架构从2018年建站至今，已经消费1000+元，意味着每个月差不多30元，而且还得手动维护，手动上传文件，如果做一个全站大搬迁就得花上几十分钟，小文件更慢</p><p>但是迁移到Serverless就会出现这几方面的问题</p><p>1.如果是静态网站，没大问题</p><p>2.PHP冷启动：速度特别特别慢，不适合动态网页，所以博客就从WordPress转到Hexo了</p><p>3.https，SSL证书就得考虑CDN，腾讯云COS还不支持自定义SSL，CloudFlare太慢，反代理需要服务器</p><p>4.部署容易蹦错Serverless Framework每次deploy之后对象存储的强制 HTTPS都会开启，每次部署完每次域名一访问都会重定向次数过多</p><p>新的架构，也是新的开始，它带来的成本不只是低，还学习了新的架构，无论是前端，后端，都不用考虑运行，只考虑你的函数，他可能是未来的趋势，目前估测成本不会高于20块每个月，(除了域名)</p><h1 id="更多可能，需要大家一同探索"><a href="#更多可能，需要大家一同探索" class="headerlink" title="更多可能，需要大家一同探索"></a>更多可能，需要大家一同探索</h1><p><img src="https://sword-1257609559.cos.ap-hongkong.myqcloud.com/SFServerless.jpg" alt="我永远喜欢御坂美琴"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端中的Live2D与技术</title>
    <link href="/posts/%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84live2d%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    <url>/posts/%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84live2d%E4%B8%8E%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<p><img src="https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/ydd2m5u7w9.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594734118;1594741318&q-key-time=1594734118;1594741318&q-header-list=&q-url-param-list=&q-signature=b08902271e6c387c3d572e3838cec9574fd4aca8"></p><p>​</p><p>​</p><p>Live2D，即为2D绘图渲染技术，游戏中例如崩坏3，碧蓝航线中与老婆交互就利用了live2d，通过前端的渲染，拼接，移动即可做出类似3d的效果，但是始终还是有缺陷，例如无法实现3d的转身，跳跃。</p><p>L2D的制作成本远低于3D，3D需要的建模，渲染，L2D可以方便完成，只需要对人物切片，然后前端重组，移动动画即可达到效果</p><h1 id="Web中的L2D结构"><a href="#Web中的L2D结构" class="headerlink" title="Web中的L2D结构"></a>Web中的L2D结构</h1><p>案例：<a href="https://www.arsrna.com/">www.arsrna.com</a></p><p>这是Live2D的材质结构</p><p><img src="https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/a1ig8opz1a.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733712;1594740912&q-key-time=1594733712;1594740912&q-header-list=&q-url-param-list=&q-signature=bd699ab1161ed5528bdff9db9c65dca14a40fa65"></p><p><img src="https://ask.qcloudimg.com/http-save/3335308/ka8xvx13jm.png" alt="根目录"></p><p>​</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/m9qm7mj9bt.png" alt="EXP文件夹"></p><p>Exp，即为表情的动作，都是json文件，任意打开一个：F_FUN_SMILE.exp.json</p><p>通过格式化json文件，看得出这是控制每一个贴图材质的控件</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/s8p9hozana.png"></p><p>Type</p><p>类型</p><p>Fade in&#x2F;out</p><p>动作淡入淡出</p><p>Params：{</p><p>​</p><p>id</p><p>动作对象控件，例如眼睛，嘴，笑容等</p><p>val</p><p>动作幅度</p><p>calc</p><p>未知</p><p>​</p><hr><p>MOC文件夹：</p><p>​</p><p><img src="https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/k97pgmlfms.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733867;1594741067&q-key-time=1594733867;1594741067&q-header-list=&q-url-param-list=&q-signature=7927b01a258e61dc72f966b493df2e9691799f9e"></p><p>这是一个存储模型和材质的文件，moc即为模型</p><p>上面的文件夹即为材质</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/2erriwckee.png"></p><p>材质中包括了人物的所有外饰信息</p><p>mtn文件夹</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/671wyfam2a.png"></p><p><img src="https://ask.qcloudimg.com/http-save/3335308/042s7i2dc2.png"></p><p>这个是控制组件淡入淡出，角度，比如人体的x,y,z轴的旋转，以及防止动作突发诡异现象，使用淡入淡出</p><hr><p>assets根目录的两个json文件：</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/osw6oxxwtc.png"></p><p>model.json即定义了模型，Physics.json即定义了物理效果model.json即定义了模型，Physics.json即定义了物理效果</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/kplefce3do.png"></p><p><img src="https://ask.qcloudimg.com/http-save/3335308/ec650x5rq3.png"></p><p>这里相当于总控制器，控制了什么情况下对应什么动作的json，而动作的json定义了材质切片的运动，Physics物理效果就能更加真实地显示动画，比如头发摇摆</p><h1 id="Web中的呈现："><a href="#Web中的呈现：" class="headerlink" title="Web中的呈现："></a>Web中的呈现：</h1><p>核心：live2d.js</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/5b59o5zy2w.png"></p><p>可惜是加密的</p><p><img src="https://ask.qcloudimg.com/http-save/3335308/utryz2a17r.png"></p><p>我们无法进一步研究，但根据官方的文档来看，是运用webGL技术进行渲染的</p><p>首先要定义</p><pre><code>&lt;canvas id=&quot;live2d&quot; width=&quot;280&quot; height=&quot;250&quot;&gt;&lt;/canvas&gt;</code></pre><p>然后引入js </p><pre><code>&lt;script src=&quot;./js/live2d.js&quot;&gt;&lt;/script&gt;</code></pre><p>最后加载js：</p><pre><code>loadlive2d(&quot;live2d&quot;, &quot;./model.json&quot;);</code></pre><hr><p>注意：json等模型是具有版权的，要不自己制作，要不就请求授权，尤其是应用于商业用途要及其注意</p><h1 id="到此，介绍结束，更多可能需要大家一同探索"><a href="#到此，介绍结束，更多可能需要大家一同探索" class="headerlink" title="到此，介绍结束，更多可能需要大家一同探索"></a>到此，介绍结束，更多可能需要大家一同探索</h1><p>我是Ar-Sr-Na，个人网站<a href="http://www.arsrna.cn/">www.arsrna.cn</a></p><p>​</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ar-Sr-Na 视频制作规范-仅制作者可查看</title>
    <link href="/posts/standred/"/>
    <url>/posts/standred/</url>
    
    <content type="html"><![CDATA[<p>Staff ONLT</p><p>var player &#x3D; new DogePlayer({ container: document.getElementById(‘player’), userId: 1277, vcode: ‘ab5d59b9e352fc55’, autoPlay: false, vtype: 98 });</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【动画技术】二维动画制作-选择纸上线稿还是电子线稿？</title>
    <link href="/posts/2d-animate-line/"/>
    <url>/posts/2d-animate-line/</url>
    
    <content type="html"><![CDATA[<p>首先，无论是动画还是视频，最终展现出来的也都是视频，视频也就是一秒内多张图片（帧）播放出来的</p><p>制作步骤不多说，这期主要介绍帧，也就是摄制和原画部分，原画是选择纸上做还是选择电子做呢？</p><p>测试平台：电脑软件：Adobe Photoshop，SAI</p><p>实拍图：小米MIX；后期软件：Adobe Photoshop；扫描平台：Canon MG2400；打印平台：激光黑白部分:Lenovo LJ2200，彩色部分：爱普生R350</p><p>详细的参数自行百度 up主找到了Fate的线稿（可看成是电子线稿）</p><p><img src="/wp-content/uploads/2020/05/1588938784-565198aa32f16b628d197e9069c3168b2c48fe54-1024x576.png"></p><p><img src="/wp-content/uploads/2020/05/timg-724x1024.png"></p><p>打印出来，当做是手绘的</p><p><img src="/wp-content/uploads/2020/05/%E6%89%AB%E6%8F%8F-1-1-1024x692.jpg"></p><p><img src="/wp-content/uploads/2020/05/%E6%89%AB%E6%8F%8F-2-744x1024.jpg"></p><p>对比（左原版，右扫描</p><p><img src="/wp-content/uploads/2020/05/20eca525e990625c5b7204c9fbaa87f123afe58f-1024x432.png"></p><p><img src="/wp-content/uploads/2020/05/349902343f7ff884948e047a18aed7ebfa493533-1024x401.png"></p><p>可以看出并没有太大差别，颜色是up主扫描仪的问题，换专业点的几乎避免</p><p>但是up主发现如果对比度调低，细的线条变粗了，对比度调高了细的线条不见了，而且调的不好，一些细节就会丢失，例如下图</p><p><img src="/wp-content/uploads/2020/05/a71a4a8178e2a212d5cfb4af30202d8de3e32b29.png"></p><hr><p>除以上例子外，还有些复杂对比，例如颜色很深或者前期已经上色的</p><p><img src="/wp-content/uploads/2020/05/7Q5-gw7dZ1kT3cS2bz-496-561x1024.jpg"></p><p>扫描后</p><p><img src="/wp-content/uploads/2020/05/1.2-1-0-744x1024.jpg"></p><p>左：原图   中：对比度17扫描   右：对比度30扫描</p><p><img src="/wp-content/uploads/2020/05/1588939020-b05bb5df5fe4c03d7ae937c54fa6c76714ec7455-1024x461.png"></p><p>放大后对比，扫描的丢失大部分色彩，一大堆杂色，色差不大，也不是打印机扫描仪问题） 对比度默认</p><p><img src="/wp-content/uploads/2020/05/176a150f70d12383e5ce361a3acdea61f340080c-1.png"></p><p>纸的皱痕，扫描仪的盖板以及一些网纹灰尘都被扫描进去了，根本无法看</p><p><img src="/wp-content/uploads/2020/05/1.2-1-0-1-744x1024.jpg"></p><hr><p>所以，说了那么多，应该选择什么样的方式绘画呢？</p><p>电子稿一般使用数位板+触控笔来做图，数位板价格非常贵，而且大小一定要大，如果摸不准位置，还需要数位屏，价格更加高，通常千元左右，专业点的价格在万元左右</p><p>纸稿只需要笔，纸，扫描仪就行，彩色扫描仪价格300-500元左右，600dpi已经足够</p><p>缺点： 电子稿：价格昂贵，设备贼贵，数位板有时候摸不着位置不好用，数位屏太expensive了，没有纸绘感觉好</p><p>纸稿：扫描复杂，色差，网纹，颜色丢失，噪点，一旦画了修改麻烦，后期麻烦，大量会浪费纸墨，颜色少，不能放大，旋转麻烦，扫描仪不易携带</p><p>优点： 电子稿：可以随时修改，绿色环保，不浪费纸墨，颜色齐全（RGB可达到2的32次方种颜色），方便放大，方便旋转，方便装x，省时间，可以复制粘贴大量画面 纸稿：便宜（少量情况下），直观，设备便宜</p><p>可以根据自己情况选择，当然，电子稿也会出现一些情况，例如分辨率设置不对，颜色设置不对，数据丢失，没钱买后期软件等问题，up主是比较推荐电子稿，方便修改，利大于弊</p><p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=1hufbk9ym9inl">https://cloud.tencent.com/developer/support-plan?invite_code&#x3D;1hufbk9ym9inl</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>业余无线电“五五节”全天直播</title>
    <link href="/posts/hamr55/"/>
    <url>/posts/hamr55/</url>
    
    <content type="html"><![CDATA[<blockquote><p>1937年日寇挑起芦沟桥事变，全国人民奋起抗日，当时抗日前线急需无线电通信技术人员，一些业余无线电爱好者直接奔赴抗日前线。另外，以CRC为基础，组成了“业余无线电人员战时服务团”，积极投身于抗日通信服务工作。各地的业余无线电爱好者在1940年5月5日通过自己的业余电台召开了“空中”大会，以显示民族团结和坚持抗日的决心，并商定5月5日为“中国业余无线电节”。</p><p>——百度百科·五五节</p></blockquote><p>五五节是中国业余无线电爱好者一年一度的盛会</p><p>Ar-Sr-Na博客站将iframe直播站的播放器，转播中继台信号直播</p><p>Ar-Sr-Na 直播</p><p>  .mainContainer { display: block; width: 1024px; margin-left: auto; margin-right: auto; } .urlInput { display: block; width: 100%; margin-left: auto; margin-right: auto; margin-top: 8px; margin-bottom: 8px; } .centeredVideo { display: block; width: 100%; height: 576px; margin-left: auto; margin-right: auto; margin-bottom: auto; } .controls { display: block; width: 100%; text-align: left; margin-left: auto; margin-right: auto; } </p><p>老铁，换个浏览器吧，连html5视频都不支持，这不彳亍啊</p><p>播放 暂停 停止</p><p>var player &#x3D; document.getElementById(‘videoElement’); if (flvjs.isSupported()) { var flvPlayer &#x3D; flvjs.createPlayer({ type: ‘flv’, url: ‘<a href="https://3891.liveplay.myqcloud.com/live/3891/_user/_db8edd56/_94e0.flv&#39;">https://3891.liveplay.myqcloud.com/live/3891\_user\_db8edd56\_94e0.flv&#39;</a> }); flvPlayer.attachMediaElement(videoElement); flvPlayer.load(); &#x2F;&#x2F;加载 } function flv_start() { player.play(); } function flv_pause() { player.pause(); } function flv_destroy() { player.pause(); player.unload(); player.detachMediaElement(); player.destroy(); player &#x3D; null; } function flv_seekto() { player.currentTime &#x3D; parseFloat(document.getElementsByName(‘seekpoint’)[0].value); }</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爱奇艺网络大电影《木马》众筹商业计划</title>
    <link href="/posts/%E7%88%B1%E5%A5%87%E8%89%BA%E7%BD%91%E7%BB%9C%E5%A4%A7%E7%94%B5%E5%BD%B1%E3%80%8A%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BC%97%E7%AD%B9%E5%95%86%E4%B8%9A%E8%AE%A1%E5%88%92/"/>
    <url>/posts/%E7%88%B1%E5%A5%87%E8%89%BA%E7%BD%91%E7%BB%9C%E5%A4%A7%E7%94%B5%E5%BD%B1%E3%80%8A%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BC%97%E7%AD%B9%E5%95%86%E4%B8%9A%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<p><img src="https://www.saten.top/wp-content/uploads/2019/10/1.jpg"></p><p>项目介绍</p><p>       策划这个项目的时候，我们想到了人生的轮转，就像游乐场的木马一样,周而复始，可最终会停留在出发的地方，无论过程如何精彩，终究逃不过轮回的结局，与此同时，我也想到了木马病毒，它植入系统，盗取资源，对电脑的安全造成影响，虚拟世界中何尝没有人生？我想如果将人生也视作一个运转的系统，我们生活中无疑也存在着许多这样的隐患，防不胜防，以至于人人自危。</p><p>        就像我们生活中总是会遇到这样那样的变故，或者说，预料之外的事情。在没有经历之前，我们永远也无法想象要怎样去面对这些困难，可一旦面临，我们会发现，并没有想象的那么可怕，我们会坦然地接受，也许生命的意义就在于此——我们无法为自己预设未来。</p><p>        本片的主人公，面对“意料之外”的孩子，没有退缩，虽然丢了工作，被女友抛弃，也没有被打倒，反而激发了他藏在身体里的潜能，换了更适合自己的工作，更勇敢承担起了照顾孩子的责任，最后不仅没有被这个变故拖垮，反而离自己最初的梦想越来越近了，是一个非常正能量的故事。</p><p>        既然命运难以琢磨，也无法抗衡，就不如笑着面对。蓦然回首，我们已然回归自己的初心。</p><p>图片展示</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/1-1.jpg"></p><p>商业模式</p><p>       与各大网络文学平台合作，筛选热点IP，改编和制作网络影视作品，在爱奇艺、腾讯、优酷三大视频平台上线盈利。</p><p>公司未来规划</p><p>       专注网络影视，包括但不限于网络大电影、网络剧、竖屏剧等。</p><p>目标客户</p><p>       网络视频观众，20-29岁居多，尤其是三大视频平台用户。</p><p>同业竞争</p><p>       最近一段时间以来，整个电影行业几乎处于当代现实主义题材的寒冬，相关作品较少，这也给我们提供了一个很好的机会。</p><p>竞争优势</p><p>       现阶段三大视频平台网络大电影板块奇幻、古装、虚构或仙侠灵异题材作品较多，观众容易审美疲劳。</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/asdasdasdasd.png"></p><p>       在这种情况下，我们抓住时机，推出严肃文学改编的当代现实主义题材电影，不仅质量内涵有保障，也填补了网络大电影细分市场的空缺，与市面上充斥的其他类型电影形成差异化竞争，市场预期良好。</p><p>盈利模式</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/sfsdfsdfsdffds-1024x545.png"></p><p>团队介绍</p><p>成熟团队，专业专注，共同创作多部影视作品，爱奇艺上线一部真人秀网综《驴在江湖青春派对》，一部爱奇艺自制竖屏短剧《驴在江湖 脱单囧事》。其中《驴在江湖青春派对》是一档多主题派对聚会，真人秀节目； 每季8期，每期70分钟时间里，推出一类与众不同的青春都市派对； 记录6对陌生90,95后单身男女嘉宾，参加不同派对时的真实状态。 展现他们在愉快的交往中，友情及爱情萌芽的全过程，历史热度高达287。</p><p>团队成员</p><p>王长春 | 导演 股东成员 （所占股份：10%）</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/wcc_%E7%88%B1%E5%A5%87%E8%89%BA.jpg"></p><p>制片人、导演，中国电视剧制作产业协会青年工作委员会预备委员，昌乐县电影家协会会员，威海四度文化传播有限公司总经理。</p><p>1989年出生，毕业于潍坊医学院。2011年进入影视行业。 电影《英雄爷爷》入围第三届全国中小学生电影节。 微电影《辣条》入围山东省电影家协会主办的第十二届山东青年微电影大赛和澳大利亚My Rode Reel 2019短片大赛。 共青团潍坊市潍城区委微电影《歌唱祖国》导演。</p><p>曲强 | 摄影指导</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/qq_%E7%88%B1%E5%A5%87%E8%89%BA.jpg"></p><p>摄影师、编剧，中国电视剧制作产业协会青年工作委员会委员，山东君陌光电科技有限公司CEO。</p><p>小说、剧本《驴在江湖》作者（共6季，每季预计12集240分钟）。 爱奇艺真人秀网综《驴在江湖青春派对》第一季摄影师、导演。 爱奇艺竖屏短剧《驴在江湖 脱单囧事》导演、编剧： 第1季18集，每集5分钟左右，总时长85分钟， 第2季18集，每集4分钟左右，总时长75分钟。</p><p>林川 | 监制</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/lc_%E7%88%B1%E5%A5%87%E8%89%BA.jpg"></p><p>导演、制片人。1994年生，毕业于北京电影学院。中国影视协会成员，作为代表出席中美影视座谈会。</p><p>电影《守护》入围2019国际青年电影节特别展映单元。 自编自导自演《都市神探录》系列电影《都市神探录：长城在上》豆瓣 评分8.5。 电影《隔壁女生的日常》 《都市神探录：烹骨仵作》（制作中）</p><p>王俊杰 | 制片人 股东成员 （所占股份：60%）</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/wjj_%E7%88%B1%E5%A5%87%E8%89%BA.jpg"></p><p>1960年生，制片人、摄影师。高级教师职称，县级优秀教师。昌乐县电影家协会副主席，山东省电影家协会会员。</p><p>参与山东省昌乐县电影家协会《底色》、《桃花烧》、《嬗变》、《承诺》、《成长》、《德行天下》等微电影和公益短片的制片和拍摄工作，其中：《底色》获山东省第十届青年微电影大赛故事片三等奖、山东省检察系统反腐败微电影大赛一等奖；《成长》获山东省潍坊市教育系统微电影大赛一等奖。</p><p>卫鸦 | 编剧</p><p><img src="https://www.saten.top/wp-content/uploads/2019/10/wy_%E7%88%B1%E5%A5%87%E8%89%BA.jpg"></p><p>原名肖永良，现居深圳。在《人民文学》《花城》《中国作家》《山花》《天涯》等刊发表小说百余万字。</p><p>作品曾被《小说选刊》《小说月报》《中篇小说选刊》《中华文学选刊》《北京文学中篇小说月报》等刊物转载。短篇小说《天籁之音》获《小说选刊》年度文学奖，中篇小说《被时光遗失的影像》获第六届深圳青年文学奖。出版有中短篇小说集《空中稻田》。</p><p>基本信息</p><p>公司名称：威海四度文化传播有限公司</p><p>所处阶段：产品开发中</p><p>法定代表人：王长春</p><p>团队人数：5 人</p><p>所属行业：网络大电影</p><p>注册地点：山东省威海市</p><p>项目网址：<a href="http://www.arsrna.top/">www.arsrna.top</a></p><p>成立日期：2017.7</p><p>相关链接：无</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>摄影师必读——为什么焦距如此重要？</title>
    <link href="/posts/%E6%91%84%E5%BD%B1%E5%B8%88%E5%BF%85%E8%AF%BB-%E4%B8%BA%E4%BB%80%E4%B9%88%E7%84%A6%E8%B7%9D%E5%A6%82%E6%AD%A4%E9%87%8D%E8%A6%81%EF%BC%9F/"/>
    <url>/posts/%E6%91%84%E5%BD%B1%E5%B8%88%E5%BF%85%E8%AF%BB-%E4%B8%BA%E4%BB%80%E4%B9%88%E7%84%A6%E8%B7%9D%E5%A6%82%E6%AD%A4%E9%87%8D%E8%A6%81%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>这种摄影方法名为板车变焦。<br>摄影机一路从远摄端变焦的广角端。<br>同时，摄影机跟着向前移动，<br>保持被摄物体带在画框内的位置和大小基本不变<br>这里呈现的是1975年斯皮尔伯格拍摄的电影《大白鲨》<br>这是电影的主人公<br>发现大白鲨正在袭击海中游泳少年的那一刻<br>视场从窄到宽的变换。将主人公及其妻子从背景中分离出来。<br>有一种游离的凝视效应，<br>主人公的表情由于迷茫而夸张<br>让我们也真真切切感受到了恐惧<br>导演用镜头语言，更确切的说是一种变焦语言<br>来作为主要的手法来表现。 主人公的恐惧和悔恨<br>因为这时候他才意识到，他应该更靠近海岸一点<br>这段影像为我们展示了电影中，在表现。<br>心理活动时非常重要的一个因素，那就是焦距。<br>选择合适的近焦距的镜头在今天尤为重要，<br>他比30年更重要，30年之前。<br>让我们让我今天来告诉你这是为什么，<br>作为一个摄影师，应该怎样去利用这一点。<br>科学技术的发展，让摄影摄像设备越来越广泛的被使用，<br>但其实。科技发展对电视以及银幕等影像呈现设备的。<br>影响也是巨大的。<br>家用电视采用了更大的、和电影相同的分辨率。<br>使得电视剧集的质量得到了很大提升。<br>以至于现代制作精良的电视剧集，<br>和电影画面之间的区别已经不太明显了。<br>这意味着这这种画面语言，已经能天天被大众所接触。<br>这种情况就导致我们整个社会，对这种电影化的画面语言<br>会产生一种直观的、程式化的体验。<br>电影摄影师和其他摄影师在很多方面是不同的。<br>但在其他的某些方面，他们仍然是一致的。<br>其中一个就是。不同焦距拍摄出来的画面<br>会让观众产生。何种不同的情绪。<br>在这部2017的电影，《请以你的名字呼唤我》。<br>导演仅用了一只库克的35毫米，S4定焦镜头。<br>在采访中，导演说，之所以只用这一个看起来有点平庸的<br>定焦镜头，是为了给观众呈现一个近乎肉眼观看体验的画面<br>这样做的好处就是<br>它消除了我们与角色之间的屏障<br>导演不再是通过镜头去叙述。<br>而是让观众感觉到自己置身于角色所处的环境中。<br>我们在选择镜头的时候，就是在决定，<br>这镜头所拍出来的画面包含有多少情绪信息。<br>广角镜头会，拉伸，加深画面的层次感。<br>但是。让他近距离拍摄的时候，会让观察者<br>产生一种与被拍摄的奇妙的联系。<br>被拍摄者仿佛与周围环境和事物分开来了，<br>所以被拍摄事物的运动，比如在画面中的倾倒，等等，<br>都被极大地夸张，<br>我们成为被摄事物所处环境的一部分，<br>我们离被摄事故越来越近。<br>直至我们与他们靠得太近，而在观察者与被拍摄事物之间<br>形成一种紧张关系，仿佛我们侵入了他们地世界。<br>著名摄影师罗杰斯狄更斯和科恩兄弟创作了<br>非常有特征性的画面拍摄技法<br>他经常用24毫米广角镜头。来拍摄单个角色的表演镜头。<br>他每次觉得画面里呈现一个演员的这种偏好，<br>给了这些画面，一种肖像画般的质感。<br>广角镜头不仅在前推的时候能给我们一种，<br>更加紧凑的喜剧或者戏剧效果，<br>后退的时候，也能更好的跟我们交代，剧情的上下文关系。<br>又给我们呈现一副主人公所在环境的、全局性的肖像画。<br>也就向我们交代了更多赞去拍摄所不能传达的信息。<br>标准镜头一般指焦距从35到50毫米之间，<br>并且用在标准35毫米传感器上的镜头，<br>因为这样的搭配给我们呈现的画面与肉眼看到的画面，<br>有极高的相似度。<br>电子取景器的可见范围要比人眼大的多，<br>所以标准镜头要做的就是。像人眼视网膜的中央视窝那样<br>形成一块锐利最清晰的图像范围。<br>我们将这个区域视为，取景的合适范围。<br>所以我们就可以用标准镜头来减少其他镜头拍摄的画面<br>所产生的不真实感。<br>用一种更接近我们人眼的观察事物的方式向观众呈现。<br>这样我们拍摄出来的事物会给他们一种<br>真实感和现实感。<br>那样我们就有更大的空间来运用构图技巧来突出主体<br>让观众产生更直观的印象。而不受焦距语言的影响。<br>值得注意的是我们的手机镜头，拍摄事物的时候，<br>成像结构并不与标准镜头一致。<br>而我们现在很明显已经适应了这种呈现形式。<br>现代人习惯于随手拍摄。<br>这种做法让其实是让被摄物体脱离了周围环境。<br>而不是考虑到被摄事物与周围事物的有机组合。<br>其实，我们在用标准镜头的来给全局构图的时候，<br>任何有机组合都会使被摄物体更加出彩<br>同时，告诉观众被摄物体存在某种不同于周围事物的重要性<br>让观众知道拍摄这个主题的意义所在。<br>远摄镜头呈现事物的方式与广角镜头非常不同<br>远摄镜头反映空间的方式与广角镜头非常不同，<br>在这种事情下，观众会感觉空间被压缩了，<br>所有事物在一个平面上。<br>他会给观众一种嗯，画面，更加。平安的感觉。<br>不同于广角镜头所擅长的人文环境，<br>远摄镜头的成像特点经常用来拍摄我们不能靠近的场景，<br>例如野生动物，名人，大事件，运动员等等。<br>还有就是没什么实质内容的过渡场景。<br>肖像经常用远摄镜头拍摄，因为<br>因为这种没有情感特征的距离感，会增加被摄主体的优越感。<br>说白了，我们用远摄镜头的时候。我们就不再在场景内。<br>我们不和被摄事物是一体的，而是一个远远的旁观者。<br>因为这种感觉已经被广泛接受了。<br>所以，当我们把这种拍摄方式应用到其他场景时。<br>比如给街上的陌生人拍一副肖像，会给人一种庄严肃穆的感觉。<br>这明显是广角镜头所不能赋予的，<br>这时被摄主体和我们不在同一个世界中，<br>而只是一个擦肩而过的陌生人，就像所有人一样。<br>用远摄镜头将被摄主体由我们分开，<br>会让我们感觉被摄主体是重要的，是高高在上的。<br>选择合适的焦距，不仅仅是为了用合适的方法呈现形象<br>或者把想要呈现的事物都包含在画框里<br>画面内各要素之间的互动也受焦距影响，<br>这样焦距也就进一步影响了<br>观众对这种互动所产生的情绪。<br>选择镜头焦距的时候，<br>要考虑到你想让观众思考什么，<br>你为什么拍这些东西。<br>你想用这些东西表达什么。<br>所以，选择合适的焦距呈现场景，<br>来与你的观众进行精神上的交流吧，<br>因为不同的焦距呈现的画面，她们所传达的意义将<br>完全不同。</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于ARRI的那位美女Isabella</title>
    <link href="/posts/%E5%85%B3%E4%BA%8Earri%E7%9A%84%E9%82%A3%E4%BD%8D%E7%BE%8E%E5%A5%B3isabella/"/>
    <url>/posts/%E5%85%B3%E4%BA%8Earri%E7%9A%84%E9%82%A3%E4%BD%8D%E7%BE%8E%E5%A5%B3isabella/</url>
    
    <content type="html"><![CDATA[<p>原创： RayTao <a href="void(0);">后期暗房小黄灯</a><em>前天</em></p><p>最近陆续在给公司的DI、VFX、Online不同部门间的协作，做工作流程的优化。恰巧这半年来也有不少朋友，隔三岔五地咨询关于各种摄影机素材的IO，特效工作时的色彩管理等问题。干脆就以ARRI为例，讲一下有个标准的、可参考的图像，是如何有助于一个项目的影像质量管理的。</p><p>在过去胶片年代，若要确定胶片处理过程是否规范、精确，Kodak提供了所谓的Laboratory Aim Density（简称LAD）文件，列出数据供校对。到后来数字中间片出现，Cineon Log的发明，自然也有一份Digital LAD的DPX文件用来做这种事了。</p><p><a href="https://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q">https://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q</a></p><p>arri和柯达的两套文件以及一份arri的说明pdf，提取码：z21k</p><p>最有趣的细节，在PDF的最后一页：右下角注明的Reference（参考来源），提到了Glen Kennel于1994年3月，在SMPTE的文章_Digital Film Scanning and Recording: The Technology and Practice_ 。</p><p>若看过Keanu Reeves在2012年那时做的那部，讲述影像技术发展的纪录片《Side by Side》，或许会想起来，Glen Kennel？他不是ARRI的CTO么？？？</p><p><img src="https://s2.ax1x.com/2019/05/24/ViArzq.jpg"></p><p><em>嗯，就是这位大叔。现在是ARRI的President了</em></p><p>其实他去ARRI进行ALEXA数字摄影机的开发前，在Kodak就已是技术大拿。做过胶片扫描技术的研究，开发了Cineon Log规格，甚至在德州仪器研发了现在影院标配的DLP投影。其著作《Color and Mastering for Digital Cinema》基本是论文级别的教科书了。</p><p>歪个楼：最近Keanu Reeves主演的新片《John Wick: Chapter 3》，口碑之好真出乎意料。据去完香港观影的朋友说，是如老式港产动作片那样的爽。当然了前两集本来就很爽……</p><p>所以由于这样的经历，他去ARRI开发ALEXA的过程中，也做了类似的事情。他们做了一张同样性质的LogC图像，放在配套的软件工具ARRI Color Tool里。用户可通过它作为一个标准影像，来更好地在ARRI Color Tool软件里设计自己想要的自定义影像风格（Looks）。并将这些自定义的Looks生成为aml格式文件在ALEXA摄影机中加载。就像在别的软硬件加载LUT去预览画面一样。</p><p><img src="https://s2.ax1x.com/2019/05/24/ViVcaF.jpg"></p><p>Kodak Digital LAD Test Image</p><p><img src="https://s2.ax1x.com/2019/05/24/ViV5Kx.jpg"></p><p><em>ARRI Isabella Image</em></p><p><em>看着拍法就挺类似的对吧~</em></p><p>随着去年ARRI官网的改版，其Camera Workflow页面被重新整理过。现在它有着非常通俗完整的，从前期到后期的各类说明，犹如百科全书。为更好地帮助用户设计工作流程，新版网站提供了这ARRI Isabella Image的文件下载。</p><p>下载地址在上面，压缩包有四个图像文件</p><ol><li>Isabella.112782.ari <strong>原始的 ARRIRAW 文件。另外三个文件均由它转换处理得到</strong></li><li>LogC_ref_Isabella.0.dpx<strong>基于 ARRI LogC &#x2F; ARRI WideGamut 的 dpx 文件</strong></li><li>ACES_ref_Isabella.0.exr<strong>基于 ACES Linear &#x2F; AP0 的 EXR 文件</strong></li><li>Rec709_ref_Isabella.0.tiff将上述ARRIRAW文件，挂载 <strong>ARRI_LogC2Video_Classic709</strong> 的LUT（即旧版官网的 LUT Generator 提供的 <strong>K1S1</strong> LUT)，得到的Rec709监看环境下的参考画面，供用户验证对上述三个格式文件的操作。</li></ol><p><img src="https://s2.ax1x.com/2019/05/24/ViVKCd.jpg"></p><p><em>Rec709_ref_Isabella.0.tiff</em></p><p><em>或者说挂载ARRI_LogC2Video_Classic709 LUT的结果</em></p><p>上述几个文件经本人在Baselight与DaVinci Resolve操作验证，只要操作方式正确，毫无疑问能得到符合各类参考标准的画面。作为一个标准参考画面，它可以帮助你做什么呢</p><ul><li>无论使用ACES，或使用技术LUT做色彩管理，或软件自身色彩管理功能，都能作为一个标准图像，去验证整个色彩工作流程的正确性。</li><li>帮助用户去分析，不同软件的色彩管理功能的机制（比如本人就是通过它，摸清Baselight色彩管理的各选项，与DaVinci Resolve之间的异同点）。</li><li>作为标准参考图像，帮助用户去设计、分析画面风格，优化自定义LUT的设计。</li></ul><p>关于第三点，为何它能起到这种作用呢？其实仔细分析这图像里各种元素就能发现</p><ul><li>这是一个拍摄的光比较大，高动态的影像。画面中有明确的高光、阴影（特别是人物的额头一侧），以及有纯黑的背景。</li><li>画面中既有灰卡，也有纯白的卡纸，连带背景的黑布，人物额头的阴影，有明确且充足的黑白灰关系可供分析。</li><li>画面中有色卡，可以看到具体颜色在不同处理手法（或者使用不同LUT）后的变化规律。</li><li>比过去Kodak那张Digital LAD更进一步的是，这回他们对画面的“服道化”元素，也做了更有心思的设计。浅蓝色的衣服，人物的肤色（skintone），背后的绿色植物，三者颜色直接涉及到了色轮上的六个方向。即：红（RED）、绿（Green）、蓝（Blue）、青（Cyan）、品红（Magenta）、黄（Yellow）。配合色卡、灰卡，可以非常直观地观察分析做出来的LUT或者调色参数，其对画面反差的改变细节，对常见材质、色彩的染色效果。</li></ul><p>理论上来说，这个ARRI Isabella Image文件，由于是个高动态的影像，不仅可用于SDR（Rec709、DCI-P3）监看环境下的工作流程验证与影像风格设计。即便是HDR的监看条件，正确设置监看环境后，这图像依然能发挥上述作用。通过这样方式设计出来的Looks，基本能保证较高的泛用性，起到对拍摄过程中的摄影曝光、灯光、美术等环节的指导性作用。简直是做DIT或调色试片时的必备良药。</p><p>总结：</p><p>从ARRI提供的这个“工具”，其实我们可以现学现卖地，自行针对其他摄影机，拍摄制作出类似的标准影像参考。得到一个可用于工作流程验证与影像风格设计的工具。当然了，各摄影机厂商们（特别是国产厂商），什么时候都学习模仿一下，官方提供一个这样的标准工具，不用用户盲人摸象，就最好不过啦~~</p><hr><p>最后再吆喝一句：</p><p>ARRI官网的Camera Workflow页面，有人举手想翻译嘛？因为内容实在太多太通俗科普了。翻译完后保证你能扔掉大部分入门技术书刊了。</p><hr><p>长按二维码关注公众号</p><p>查看更多干货</p><p><img src="https://s2.ax1x.com/2019/05/24/ViVSN4.jpg"></p><p>如果觉得有用</p><p>欢迎分享到你的朋友圈</p><p>或者</p><p><strong>喜欢一下作者</strong>:张来吃</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>斯坦尼康M1-volt系统简介steadicam微电影摄影师专业技术论坛</title>
    <link href="/posts/%E6%96%AF%E5%9D%A6%E5%B0%BC%E5%BA%B7m1-volt%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8Bsteadicam%E5%BE%AE%E7%94%B5%E5%BD%B1%E6%91%84%E5%BD%B1%E5%B8%88%E4%B8%93%E4%B8%9A%E6%8A%80%E6%9C%AF%E8%AE%BA%E5%9D%9B/"/>
    <url>/posts/%E6%96%AF%E5%9D%A6%E5%B0%BC%E5%BA%B7m1-volt%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8Bsteadicam%E5%BE%AE%E7%94%B5%E5%BD%B1%E6%91%84%E5%BD%B1%E5%B8%88%E4%B8%93%E4%B8%9A%E6%8A%80%E6%9C%AF%E8%AE%BA%E5%9D%9B/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/av53299397/">https://www.bilibili.com/video/av53299397/</a></p><p>译自油管</p><p>你们好，ar-sr-na的观众们，最新消息，特大新闻<br>我是gb，斯坦尼康的发明者。<br>自1974年发明以来，对，这是原型，那儿是机械臂和马甲，<br>这是快装板。马上在好莱坞新落成的学院影厅<br>有一个活动，我们要去那儿展示这个原型<br>但是，自从它发明以来，重心必须在万向架之下，为了方便<br>控制，他必须头轻脚重，但你知道那没什么，就那样设计吧<br>我们已经用它拍了很多好电影，它很好用<br>但是，那样的坏处是如果你不熟悉怎样操作它，<br>他会有钟摆效应<br>现在好了，史上首次，我们能让你保持平衡，让万向架<br>始终直立，没有脚重头轻的感觉，没有钟摆效应。<br>时至今日，组装不当、人为的和模拟的脚重头轻都为了一个目的<br>就是使它都能自己保持直立静止，这能迅速提升你的操作水平。<br>我的同事cf等人会给你演示这个特性，这就是我们新推出<br>的M1-闪电，在我看来迄今为止最好的斯坦尼康系统。<br>大家好，我就是cf,我带大家看看M1闪电，这就是M1闪电，<br>放在斯坦尼康万向架周围，看，不看他的话，这是一个常规<br>斯坦尼康系统，常用的组装模式，机器在上面，监视器<br>在前面，电池在后面，大家都很熟悉了，作为一位斯坦尼康<br>摄影师，我们一手抓住万向架中间的垂直支架来控制三轴<br>运动，包括左右，上下和我们最不喜欢用的——横移<br>所有移镜中我们最不想把注意力放在横移上，但它恰恰是最<br>浪费注意力的。而M1闪电要做的正是控制横移而保持垂直<br>静止，现在我打开它，这个系统马上有了一种模拟出来的<br>脚重头轻的效果，所以它归位以后它不再有钟摆效应，<br>上下运镜也是如此，可见它恢复垂直以后不再摇摆。<br>现在我再演示一遍M1闪电开启和没有M1闪电的<br>常规斯坦尼康之间的区别，常规斯坦尼康会一直这样<br>前后或者左右摇摆<br>除非你再腾出手来去扶正它<br>现在开启M1闪电，它会替你扶正它让它停止摇摆<br>这样就让你可以集中精力在操作其他有用的镜头运动上<br>例如镜头的衔接性、画面的叙述性，想想脚下的运动路线<br>等等，而不是总是担心画面是不是水平。<br>斯坦尼康能做多种运镜，例如这样向前行进，或者换方向<br>移动，加快速度的时候经常要像这样换个姿势，甚至跑起来<br>，再向相反方向的时候再换一下姿势，镜头左右摇摆丧失<br>水平就是最常发生在这些时候，在拍摄重要镜头的时候这是<br>致命的。这就是说，我们需要斯坦尼康系统保持反应灵敏，<br>但是水平摆动显然是我们不想要的。<br>M1闪电的技术其实与正在用于给我们拍摄的手持稳定器<br>（如大疆如影）很相似，你能从镜子里面看到，<br>手持稳定器就是其缩小版，对其放大，用更大更强劲的<br>电机作用于万向架周围，对这个地方进行加固的好处是<br>这不会增加万向架上面的总重量，也不增加下面的，<br>所以你仍能像以前那样组装你的斯坦尼康系统，<br>只增加一公斤的总重，你就能拥有这个额外的稳定功能<br>而如果你不在万向架这儿作文章，你要么加长这根杆，<br>要么增加下部重量<br>综上所述，作为一个斯坦尼康摄影师，这样的改进我很<br>喜欢，所以，别忘了订阅，拜拜！</p><p>更多精彩请访问 <a href="http://www.arsrna.top/">www.arsrna.top</a></p><p><img src="https://s2.ax1x.com/2019/05/24/ViACa4.png"></p><p>欢迎关注作者微博@四度文娱</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[pr基础教程032]防止帕金森-Pr防抖教程  素材归档</title>
    <link href="/posts/pr%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B032%E9%98%B2%E6%AD%A2%E5%B8%95%E9%87%91%E6%A3%AE-pr%E9%98%B2%E6%8A%96%E6%95%99%E7%A8%8B-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/"/>
    <url>/posts/pr%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B032%E9%98%B2%E6%AD%A2%E5%B8%95%E9%87%91%E6%A3%AE-pr%E9%98%B2%E6%8A%96%E6%95%99%E7%A8%8B-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>BGM：灰澈 - 无根尾系</p><p>注意事项：这个稳定器只能用于普通相机，鱼眼相机或者其他的需要ProDAD插件，否则导致变形稳定器无法使用；</p><p>要保证视频大小，帧率与序列一致，如果有提示错误，将原素材的变形稳定器效果移除后嵌套序列，再把效果拖到序列中</p><p><a href="https://www.bilibili.com/video/av51204724/">https://www.bilibili.com/video/av51204724/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>素材归档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[Vlog-001]2019南宁月邪动漫广西行  素材归档</title>
    <link href="/posts/vlog-0012019%E5%8D%97%E5%AE%81%E6%9C%88%E9%82%AA%E5%8A%A8%E6%BC%AB%E5%B9%BF%E8%A5%BF%E8%A1%8C-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/"/>
    <url>/posts/vlog-0012019%E5%8D%97%E5%AE%81%E6%9C%88%E9%82%AA%E5%8A%A8%E6%BC%AB%E5%B9%BF%E8%A5%BF%E8%A1%8C-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>摄像机：红米3x<br>后期软件：Adobe Premiere<br>分辨率：2300*1080<br>帧率：30fps（部分升格画面为60fps补帧）<br>地点：广西南宁市青秀区南宁国际会展中心  </p><p>STAFF<br>前期拍摄，后期制作：Ar-Sr-Na<br>友情客串：白夜叉leaf<br>BGM：KemimikE - Adventure (KemimikE 2017 Rework)</p><p>BGM：MitiS,Adara - Moments</p><p>BGM： Hyper Potions - Surf</p><p>本视频制作用时6小时，拉镜部分非常复杂， 我的手机拍摄的时候镜头掉了一块东西下来，导致有时候拍出来的照片是绿色的，而且画质渣</p><p>感谢bilibili@<a href="https://space.bilibili.com/32391332">蛋挞桑丶</a> 提供的漫展视频模型</p><p>声明：版权所有：bilibili@Ar-Sr-Na，禁止以一切形式转载，未经同意，禁止商用！</p><hr><p>拉镜效果：递进缩放<br><a href="https://www.bilibili.com/video/av48255231">https://www.bilibili.com/video/av48255231</a></p><p>快闪教程：<br><a href="https://www.bilibili.com/video/av42089853">https://www.bilibili.com/video/av42089853</a></p><p>升格-补帧教程：<br><a href="https://www.bilibili.com/video/av33575809">https://www.bilibili.com/video/av33575809</a></p><p>升格降格-变速教程：<br><a href="https://www.bilibili.com/video/av41610642">https://www.bilibili.com/video/av41610642</a></p><p>融合水印效果：<br><a href="https://www.bilibili.com/video/av34746252">https://www.bilibili.com/video/av34746252</a></p><p>踩点教程：<br><a href="https://www.bilibili.com/video/av31511571">https://www.bilibili.com/video/av31511571</a></p><p>缩放效果：<br><a href="https://www.bilibili.com/video/av22257068">https://www.bilibili.com/video/av22257068</a></p><p>关键帧移动教程 ：<br><a href="https://www.bilibili.com/video/av48592892">https://www.bilibili.com/video/av48592892</a></p><p>补帧升格教程：<br><a href="https://www.bilibili.com/video/av51265839">https://www.bilibili.com/video/av51265839</a></p><p>Extra-防抖教程：<br><a href="https://www.bilibili.com/video/av51204724">https://www.bilibili.com/video/av51204724</a></p><p><a href="http://creativecommons.org/licenses/by/4.0/"><img src="https://i.creativecommons.org/l/by/4.0/88x31.png" alt="知识共享许可协议"></a><br>本作品采用<a href="http://creativecommons.org/licenses/by/4.0/">知识共享署名 4.0 国际许可协议</a>进行许可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ar-Sr-Na学习中心-影视后期篇：002 开始第一个项目</title>
    <link href="/posts/ar-sr-na%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%BF%83-%E5%BD%B1%E8%A7%86%E5%90%8E%E6%9C%9F%E7%AF%87%EF%BC%9A002-%E5%BC%80%E5%A7%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/"/>
    <url>/posts/ar-sr-na%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%BF%83-%E5%BD%B1%E8%A7%86%E5%90%8E%E6%9C%9F%E7%AF%87%EF%BC%9A002-%E5%BC%80%E5%A7%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<p>安装完成Premiere后，首次打开会出现引导界面，可以根据需要进行引导，如果需要进阶学习，请看下文</p><hr><p><img src="https://arsrna.top/blog/wp-content/uploads/2019/05/image-1024x576.png"></p><p>启动界面  </p><p>点击新建项目</p><p><img src="http://www.saten.top/wp-content/uploads/2019/05/image-1.png"></p><p>选择保存的位置以及名称</p><p><img src="http://www.saten.top/wp-content/uploads/2019/05/image-2.png"></p><p>新建完成后是这样的</p><p><img src="https://arsrna.top/blog/wp-content/uploads/2019/05/image-3-1024x576.png"></p><p>如果和我的不一样，那就把工作区改为编辑</p><p>视频素材直接拖入项目窗口</p><p><img src="https://arsrna.top/blog/wp-content/uploads/2019/05/image-4-1024x576.png"></p><p>再将项目的素材拖入时间轴</p><p><img src="https://arsrna.top/blog/wp-content/uploads/2019/05/image-5-1024x248.png"></p><p>最后就可以结合以后的课程进行操作了</p><p><img src="https://arsrna.top/blog/wp-content/uploads/2019/05/image-6-1024x576.png"></p><h3 id="提醒大家：电脑差的要记得经常保存，快捷键Ctrl-S"><a href="#提醒大家：电脑差的要记得经常保存，快捷键Ctrl-S" class="headerlink" title="提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S"></a>提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S</h3><hr><p>Powered by Ar-Sr-Na</p><p>欢迎老师们提供更多的教程</p>]]></content>
    
    
    
    <tags>
      
      <tag>学习中心-影视后期</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ar-Sr-Na学习中心-影视后期篇：001 必要工具准备</title>
    <link href="/posts/ar-sr-na%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%BF%83-%E5%BD%B1%E8%A7%86%E5%90%8E%E6%9C%9F%E7%AF%87%EF%BC%9A001-%E5%BF%85%E8%A6%81%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87/"/>
    <url>/posts/ar-sr-na%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%BF%83-%E5%BD%B1%E8%A7%86%E5%90%8E%E6%9C%9F%E7%AF%87%EF%BC%9A001-%E5%BF%85%E8%A6%81%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87/</url>
    
    <content type="html"><![CDATA[<p>首先是电脑，电脑配置也有要求</p><p>电脑默认为Windows系统，注：Adobe 2019版本只支持win10 1803以上版本，win7&#x2F;8&#x2F;8.1请自行使用Adobe CC2018（本系列教程除二维动画用到的Animate，做图用到的Illustrator为CC2019版本以外，其余均为CC2018版本）</p><p>cc2019与cc2018区别比较大，但不影响教程</p><hr><p>首先电脑配置：<br><a href="https://www.bilibili.com/read/cv682460">https://www.bilibili.com/read/cv682460</a></p><p>在这里顺便纠错：Adobe Premiere软件最主要烧的还是内存，内存才是最重要的，其余的只能算辅助，关系如下</p><p>内存&gt;CPU&gt;GPU&gt;硬盘&gt;系统</p><hr><p>软件哪来？现在在Adobe官网只能下载到Adobe CC2019的版本了，如果想要CC2018，要跑到一些地方下载Adobe CC2018的版本，例如百度网盘（大文件不会限速）。关于破解方法，up主这里不讲</p><p>Adobe官网地址：<br><a href="https://www.adobe.com/">https://www.adobe.com/</a></p><p>Adobe CC2018全套 By.LookAe：链接:</p><p><a href="https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw">https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw</a> 提取码: nk4q</p>]]></content>
    
    
    
    <tags>
      
      <tag>学习中心-影视后期</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[pr入门教程006]关键帧使用操作方法   素材归档</title>
    <link href="/posts/pr%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B006%E5%85%B3%E9%94%AE%E5%B8%A7%E4%BD%BF%E7%94%A8%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/"/>
    <url>/posts/pr%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B006%E5%85%B3%E9%94%AE%E5%B8%A7%E4%BD%BF%E7%94%A8%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>BGM：3L - モノクロ・インザナイト (CYTOKINE remix)</p><p>背景图片因商业性质，暂时不开放下载（此图来源于广州CICF EXPO动漫游戏展，调色by bilibili@Ar-Sr-Na，商业合作请联系qq：2459405337）</p><p><img src="https://bilibili24749747.wang/wp-content/uploads/2019/04/image-1024x436.png"></p><p>低清分辨率可供免费下载</p><p>欢迎和我合作，QQ：2459405337，粉丝群：571912431 喜欢不妨长按推荐？？你们的支持是我最大的动力，感谢收看</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[Pr教程 Extra.扩展篇001]画质基础  素材</title>
    <link href="/posts/pr%E6%95%99%E7%A8%8B-extra-%E6%89%A9%E5%B1%95%E7%AF%87001%E7%94%BB%E8%B4%A8%E5%9F%BA%E7%A1%80-%E7%B4%A0%E6%9D%90/"/>
    <url>/posts/pr%E6%95%99%E7%A8%8B-extra-%E6%89%A9%E5%B1%95%E7%AF%87001%E7%94%BB%E8%B4%A8%E5%9F%BA%E7%A1%80-%E7%B4%A0%E6%9D%90/</url>
    
    <content type="html"><![CDATA[<h2 id="目录："><a href="#目录：" class="headerlink" title="目录："></a>目录：</h2><p><a href="http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf">目录</a><a href="http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf">下载</a></p><p>BGM：Pax Japonica Groove - Pianophonic</p><p>MMD1：Girls-弱音</p><p>来源：Steam-Wallpaper Engine</p><p>MMD2：【2018拜年祭单品】与你同行~B With U</p><p>来源： <a href="https://www.bilibili.com/video/av20205649">https://www.bilibili.com/video/av20205649</a></p><p>教程1：[pr基础教程]pr秒表及倒计时效果</p><p>教程2：[pr基础教程027，字幕教程002]镂空字幕效果</p><p>全视频参数：</p><p>分辨率帧率：1920*1080@60fps</p><p>码率：CBR 6Mbps</p><p>编码器：CPU</p><p>渲染器：NVIDIA GeForce针对Adobe Premiere的CUDA</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[pr进阶教程004]视频线稿风格化  素材</title>
    <link href="/posts/pr%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B004%E8%A7%86%E9%A2%91%E7%BA%BF%E7%A8%BF%E9%A3%8E%E6%A0%BC%E5%8C%96-%E7%B4%A0%E6%9D%90/"/>
    <url>/posts/pr%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B004%E8%A7%86%E9%A2%91%E7%BA%BF%E7%A8%BF%E9%A3%8E%E6%A0%BC%E5%8C%96-%E7%B4%A0%E6%9D%90/</url>
    
    <content type="html"><![CDATA[<p>BGM：FELT - The Ray of Light</p><p>所有引用视频：</p><p><a href="https://www.bilibili.com/video/av46592486">https://www.bilibili.com/video/av46592486</a></p><p>STAFF：</p><p>后期，时间轴，前期，字幕，视频，素材：bilibili@Ar-Sr-Na</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[帧扣+二值化]紫罗兰的永恒花园OP</title>
    <link href="/posts/%E5%B8%A7%E6%89%A3%E4%BA%8C%E5%80%BC%E5%8C%96%E7%B4%AB%E7%BD%97%E5%85%B0%E7%9A%84%E6%B0%B8%E6%81%92%E8%8A%B1%E5%9B%ADop/"/>
    <url>/posts/%E5%B8%A7%E6%89%A3%E4%BA%8C%E5%80%BC%E5%8C%96%E7%B4%AB%E7%BD%97%E5%85%B0%E7%9A%84%E6%B0%B8%E6%81%92%E8%8A%B1%E5%9B%ADop/</url>
    
    <content type="html"><![CDATA[<p><a href="http://www.saten.top/wp-content/uploads/2019/03/1.pdf">帧分布</a><a href="http://www.saten.top/wp-content/uploads/2019/03/1.pdf">下载</a></p><p>配置见上一篇文章</p><p>原素材：《紫罗兰的永恒花园OP》4K60FPS</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[CPU爆炸帧抠]二值化后的辉夜大小姐想让我告白ED   分帧</title>
    <link href="/posts/cpu%E7%88%86%E7%82%B8%E5%B8%A7%E6%8A%A0%E4%BA%8C%E5%80%BC%E5%8C%96%E5%90%8E%E7%9A%84%E8%BE%89%E5%A4%9C%E5%A4%A7%E5%B0%8F%E5%A7%90%E6%83%B3%E8%AE%A9%E6%88%91%E5%91%8A%E7%99%BDed-%E5%88%86%E5%B8%A7/"/>
    <url>/posts/cpu%E7%88%86%E7%82%B8%E5%B8%A7%E6%8A%A0%E4%BA%8C%E5%80%BC%E5%8C%96%E5%90%8E%E7%9A%84%E8%BE%89%E5%A4%9C%E5%A4%A7%E5%B0%8F%E5%A7%90%E6%83%B3%E8%AE%A9%E6%88%91%E5%91%8A%E7%99%BDed-%E5%88%86%E5%B8%A7/</url>
    
    <content type="html"><![CDATA[<p><a href="http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf">帧分布 Powered by. bilibili@Ar-Sr-Na</a><a href="http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf">下载</a></p><p>电脑配置：</p><p>CPU：Intel G3260 @3.3Ghz</p><p>内存条：DDR3 1333 12GB</p><p>GPU：NVIDIA GeForce GTX 550Ti 1GB</p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[PR Start.1前言]Re-从零开始，up主的初衷与愿景 素材归档</title>
    <link href="/posts/pr-start-1%E5%89%8D%E8%A8%80re-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8Cup%E4%B8%BB%E7%9A%84%E5%88%9D%E8%A1%B7%E4%B8%8E%E6%84%BF%E6%99%AF-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/"/>
    <url>/posts/pr-start-1%E5%89%8D%E8%A8%80re-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8Cup%E4%B8%BB%E7%9A%84%E5%88%9D%E8%A1%B7%E4%B8%8E%E6%84%BF%E6%99%AF-%E7%B4%A0%E6%9D%90%E5%BD%92%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>BGM: STYX HELIX</p><p>BGM2：<a href="https://www.bilibili.com/video/av41304894">https://www.bilibili.com/video/av41304894</a></p><p>STAFF：</p><p>后期，时间轴，前期，素材：bilibili@Ar-Sr-Na</p><p>电脑设备提供，渲染：一位不留名的好心好友</p><p><img src="http://www.saten.top/wp-content/uploads/2019/03/image.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[pr基础教程003]变速，倒放效果</title>
    <link href="/posts/pr%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B003%E5%8F%98%E9%80%9F%EF%BC%8C%E5%80%92%E6%94%BE%E6%95%88%E6%9E%9C/"/>
    <url>/posts/pr%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B003%E5%8F%98%E9%80%9F%EF%BC%8C%E5%80%92%E6%94%BE%E6%95%88%E6%9E%9C/</url>
    
    <content type="html"><![CDATA[<p>素材：</p><p>bgm：Ryan Farish - Sunshine</p><p>视频地址：<a href="https://www.bilibili.com/video/av41610642/">av41610642</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>未分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
